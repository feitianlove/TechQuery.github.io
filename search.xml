<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript 一句话总结</title>
      <link href="/programming/javascript-in-one-word/"/>
      <url>/programming/javascript-in-one-word/</url>
      
        <content type="html"><![CDATA[<blockquote><p>JavaScript 是一门原生支持<strong>函数式编程</strong>范式的、基于原型的<strong>面向对象</strong>语言，也是一门<strong>弱类型</strong>动态脚本语言</p></blockquote><h2 id="What’s-this"><a href="#What’s-this" class="headerlink" title="What’s this ?"></a>What’s this ?</h2><blockquote><p>JavaScript 函数的 <code>this</code> 是由<strong>函数调用者</strong>在调用前确定的 —— 继承自 LISP 语言</p></blockquote><p>用 ECMAScript 6 解释如下：</p><table><thead><tr><th style="text-align:center">调用方式</th><th style="text-align:center">调用者</th><th style="text-align:center">等效代码</th></tr></thead><tbody><tr><td style="text-align:center"><code>func(...params)</code></td><td style="text-align:center">JS 引擎</td><td style="text-align:center"><code>func.apply(null, params)</code></td></tr><tr><td style="text-align:center"><code>obj.func(...params)</code></td><td style="text-align:center">一个对象</td><td style="text-align:center"><code>func.apply(obj, params)</code></td></tr><tr><td style="text-align:center"><code>new func(...params)</code></td><td style="text-align:center"><code>new</code> 运算符</td><td style="text-align:center"><code>func.apply(Object.setPrototypeOf({ }, func.prototype), params)</code></td></tr><tr><td style="text-align:center"><code>element.onclick = func</code></td><td style="text-align:center">DOM 事件回调</td><td style="text-align:center"><code>func.call(element, event)</code></td></tr></tbody></table><p>上述最后一种其实是<strong>运行时 API</strong> 级别的，与语言本身无关，用 JS 写的公共库需要<strong>回调函数</strong>时，也是库内部调用时如上手动指定的。</p><h2 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h2><p>通俗解释：</p><blockquote><p>孩子靠着自创资产和自己可掌控的父母遗产，继续活下去</p></blockquote><p>技术解释：</p><blockquote><p><strong>局部作用域</strong>中创建的函数，若引用了其上级作用域中的变（常）量，又在上级作用域外有引用，上级作用域执行结束被销毁时，此<strong>函数及其引用的数据</strong>形成一个不被销毁的<strong>闭包</strong>。</p><p>—— 继承自 LISP 语言</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> closure <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> privateData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>        <span class="token keyword">set</span><span class="token punctuation">:</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>            privateData<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token keyword">get</span><span class="token punctuation">:</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> privateData<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>closure<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> closure<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//  1</span></code></pre><p>闭包在 ECMAScript 5 及更早的时代，常用于模拟<strong>块级作用域</strong>、<strong>模块作用域</strong>，在 ECMAScript 6 引入这两种新<strong>局部作用域</strong>后，它们又成了形成闭包的上级作用域之一。</p><h2 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h2><blockquote><p><strong>基于原型的面向对象语言</strong> 可看作把 <strong>基于类的面向对象语言</strong>的<strong>运行时内部构造</strong> 开放了出来</p></blockquote><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">类</th><th style="text-align:center">原型</th></tr></thead><tbody><tr><td style="text-align:center">对象的创建</td><td style="text-align:center">由 <code>class</code> 的构造函数修饰 <code>this</code></td><td style="text-align:center">直接 <code>new</code> 一个函数作为构造函数</td></tr><tr><td style="text-align:center">对象的继承</td><td style="text-align:center">只知其然，不知所以然</td><td style="text-align:center">对象内部引用<strong>构造函数的原型对象</strong>，在引用对象未定义成员时，在原型上找同名成员</td></tr><tr><td style="text-align:center">类的继承</td><td style="text-align:center">只知其然，不知所以然</td><td style="text-align:center"><code>Child.prototype = new Parent()</code></td></tr><tr><td style="text-align:center">私有成员</td><td style="text-align:center">只知其然，不知所以然</td><td style="text-align:center">用<strong>局部作用域</strong>“对外不可访问性”保存的私有 <code>Symbol</code>（运行时唯一值）命名对象成员</td></tr></tbody></table><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><blockquote><p><strong>异步函数</strong>先记下要做什么（传入的参数、回调函数）并交给 JS 引擎所在<strong>运行时平台</strong>的其它线程，然后立马返回，让 JS 自身线程继续执行完后面的<strong>同步代码</strong>，再按异步任务完成的顺序，一一用相应结果数据调用<strong>回调函数</strong>。</p></blockquote><p>所有的异步任务内部都基于回调函数实现：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">asyncFunc</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">asyncFunc</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'See you later'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>但需要回调函数的不一定是异步任务：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">syncFunc</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'See you '</span> <span class="token operator">+</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">syncFunc</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">'now'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> one-word </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo &amp; Travis !</title>
      <link href="/development/hello-hexo-travis/"/>
      <url>/development/hello-hexo-travis/</url>
      
        <content type="html"><![CDATA[<h2 id="静态网站生成器"><a href="#静态网站生成器" class="headerlink" title="静态网站生成器"></a>静态网站生成器</h2><p><a href="https://github.com/topics/static-site-generator?l=javascript&amp;o=desc&amp;s=stars" target="_blank" rel="noopener">GitHub <code>static-site-generator</code> 主题下 Node.JS 架构</a> star 前三的项目中，<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 生态最完善：</p><ol><li><p>包括<strong>中文</strong>在内的<strong>多语言官网</strong></p></li><li><p>使用文档不但每页开篇有<strong>视频讲解</strong>，简体中文视频直接托管在 Bilibili</p></li><li><p>插件、主题的<strong>搜索引擎</strong>更是方便，接地气的<strong>国人作品</strong>也很多</p></li></ol><p>官网一番学习之后，发现起步比较简单：</p><pre class=" language-shell"><code class="language-shell">npm install hexo --globalhexo init my_pagesgit initgit checkout --orphan hexo</code></pre><p>随后又在官网搜了一个简洁、美观、强大、易用的主题模板 <a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">Matery</a>。</p><h2 id="持续集成、持续部署"><a href="#持续集成、持续部署" class="headerlink" title="持续集成、持续部署"></a>持续集成、持续部署</h2><p>最后一顿 Google，入门了近几年开源界最流行的 <a href="https://travis-ci.com/" target="_blank" rel="noopener">Travis CI</a>，它的配置文件 <code>.travis.yml</code> 看起来像 <code>Dockerfile</code>，但更自然：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">branches</span><span class="token punctuation">:</span>  <span class="token key atrule">only</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> hexo<span class="token key atrule">language</span><span class="token punctuation">:</span> node_js<span class="token key atrule">node_js</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> lts/*<span class="token key atrule">cache</span><span class="token punctuation">:</span>  <span class="token key atrule">directories</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> node_modules<span class="token key atrule">install</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> npm install<span class="token key atrule">script</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> npm run build  <span class="token punctuation">-</span> cd $<span class="token punctuation">{</span>FOLDER<span class="token punctuation">}</span>  <span class="token punctuation">-</span> git init  <span class="token punctuation">-</span> git config user.name $<span class="token punctuation">{</span>UID<span class="token punctuation">}</span>  <span class="token punctuation">-</span> git config user.email $<span class="token punctuation">{</span>EMAIL<span class="token punctuation">}</span>  <span class="token punctuation">-</span> git add .  <span class="token punctuation">-</span> git commit <span class="token punctuation">-</span>m "$<span class="token punctuation">{</span>MESSAGE<span class="token punctuation">}</span>"  <span class="token punctuation">-</span> git push <span class="token punctuation">-</span><span class="token punctuation">-</span>force <span class="token punctuation">-</span><span class="token punctuation">-</span>quiet https<span class="token punctuation">:</span>//$<span class="token punctuation">{</span>TOKEN<span class="token punctuation">}</span>@$<span class="token punctuation">{</span>GIT_URI<span class="token punctuation">}</span>.git master<span class="token punctuation">:</span>$<span class="token punctuation">{</span>BRANCH<span class="token punctuation">}</span></code></pre><p>上述命令行脚本中的<strong>环境变量</strong>可在 Travis CI 项目配置页设置，示例如下：</p><table><thead><tr><th style="text-align:center">变量名</th><th style="text-align:center">示例值</th><th style="text-align:center">释义</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">FOLDER</td><td style="text-align:center">public</td><td style="text-align:center">网页生成器的输出目录</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">UID</td><td style="text-align:center">yourID</td><td style="text-align:center">Git 用户名</td><td style="text-align:center">Travis 自动设置</td></tr><tr><td style="text-align:center">EMAIL</td><td style="text-align:center"><a href="mailto:yourID@email.com" target="_blank" rel="noopener">yourID@email.com</a></td><td style="text-align:center">Git 电邮地址</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">TOKEN</td><td style="text-align:center"></td><td style="text-align:center">Git 平台个人访问令牌</td><td style="text-align:center"><a href="https://github.com/settings/tokens/new" target="_blank" rel="noopener">https://github.com/settings/tokens/new</a></td></tr><tr><td style="text-align:center">GIT_URI</td><td style="text-align:center">github.com/yourID/yourID.github.io</td><td style="text-align:center">Git 仓库标识符</td><td style="text-align:center">嫌 GitHub 访问慢也可用 Coding.net、码云</td></tr><tr><td style="text-align:center">BRANCH</td><td style="text-align:center">master</td><td style="text-align:center">GitHub Pages 目标分支</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">MESSAGE</td><td style="text-align:center">:memo: Update HTML by Travis CI</td><td style="text-align:center">Git 提交注记</td></tr></tbody></table><p>新版个人网站初步落成！~</p><h2 id="开源项目-API-文档生成"><a href="#开源项目-API-文档生成" class="headerlink" title="开源项目 API 文档生成"></a>开源项目 API 文档生成</h2><p>既然 Travis CI 配置脚本可以用环境变量变得灵活，那基于 JSDoc、ESDoc 之类的开源项目生成 <strong>API 文档站</strong>也可照搬以上方法了：</p><ul><li><p>再也不用在本地 Git <code>precommit</code> 钩子上执行<strong>文档生成脚本</strong>了，加快提交速度</p></li><li><p>把生成的文档放在独立的 <code>gh-pages</code> 分支，让 <code>master</code> 分支只放源码，<strong>提交记录</strong>更清爽</p></li><li><p>用 <code>git push --force</code> 也让<strong>文档站分支</strong>不保留不必要的提交记录，<strong>仓库体积</strong>最小化</p></li></ul><p>但是，Travis 的 Windows 环境尚处测试阶段，我实测时出现“失败但无报错详情”的 bug，只好让 <a href="https://tech-query.me/Puppeteer-IE/">Puppeteer-IE</a> 改用 <a href="https://azure.microsoft.com/zh-cn/services/devops/pipelines/" target="_blank" rel="noopener">Azure Pipeline</a>：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">trigger</span><span class="token punctuation">:</span><span class="token punctuation">-</span> master<span class="token key atrule">pool</span><span class="token punctuation">:</span>  <span class="token key atrule">vmImage</span><span class="token punctuation">:</span> <span class="token string">'vs2017-win2016'</span><span class="token key atrule">steps</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">task</span><span class="token punctuation">:</span> NodeTool@0  <span class="token key atrule">inputs</span><span class="token punctuation">:</span>    <span class="token key atrule">versionSpec</span><span class="token punctuation">:</span> <span class="token string">'8.x'</span>  <span class="token key atrule">displayName</span><span class="token punctuation">:</span> <span class="token string">'Install Node.js'</span><span class="token punctuation">-</span> <span class="token key atrule">bash</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">    npm install    npm run build    cd ${DOC_FOLDER}    git init    git config user.name ${GIT_USER}    git config user.email ${GIT_EMAIL}    git add .    git commit -m "${GIT_MESSAGE}"    git push --force --quiet https://${GIT_TOKEN}@${GIT_URI}.git master:${GIT_BRANCH}</span>  <span class="token key atrule">displayName</span><span class="token punctuation">:</span> <span class="token string">'npm install &amp; build Document'</span></code></pre><p>再次领略 微软文档的一大特点 —— 要么一笔带过、不知所云，要么又臭又长、不明重点…… 好歹有个<strong>项目配置模板</strong>，连蒙带猜改一改，竟然能用…… 也算是不枉费我<a href="https://www.microsoft.com/china/techsummit/2018/" target="_blank" rel="noopener">秋天跑一趟上海</a>~</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p><a href="https://segmentfault.com/a/1190000013058880" target="_blank" rel="noopener">https://segmentfault.com/a/1190000013058880</a></p></li><li><p><a href="https://ssk7833.github.io/blog/2016/01/21/using-TravisCI-to-deploy-on-GitHub-pages/" target="_blank" rel="noopener">https://ssk7833.github.io/blog/2016/01/21/using-TravisCI-to-deploy-on-GitHub-pages/</a></p></li><li><p><a href="https://easyhexo.github.io/Easy-Hexo/" target="_blank" rel="noopener">https://easyhexo.github.io/Easy-Hexo/</a></p></li><li><p><a href="https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&amp;tabs=example#bash" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&amp;tabs=example#bash</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Travis </tag>
            
            <tag> Azure </tag>
            
            <tag> DevOps </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滑雪与武术</title>
      <link href="/skiing-kongfu/"/>
      <url>/skiing-kongfu/</url>
      
        <content type="html"><![CDATA[<p>一匹来自北方的狼，在西南腹地的雪山上学会了滑雪…… 😂</p><h2 id="笨手笨脚"><a href="#笨手笨脚" class="headerlink" title="笨手笨脚"></a>笨手笨脚</h2><p>看着别人半蹲着顺着坡度轻松滑直线，我同样的姿势，脚下的滑雪板却随着前人滑过的轨迹乱抖，很快就歪到一边，不是摔倒就是 180° 转向，倒着滑下去比正着溜…… 还不如同行的小个子女生有天赋……</p><p>向雪场的当地大叔请教动作要领，只得一句：“没啥要领，滑就是了，自己领悟！”</p><p>于是，人仰马翻、出糗不断的第一个小时过去了，有心无力的感觉逐渐显现。</p><h2 id="异曲同工"><a href="#异曲同工" class="headerlink" title="异曲同工"></a>异曲同工</h2><p>苦思冥想之际，发现滑雪“双脚相对于滑雪板静止”和武术“扎马步如脚下有根”是类似的，都需要一个稳定的姿势，也就是师傅说的“稳定的身体架构”。看专业滑雪运动员的半蹲姿势，很像<a href="https://www.wingchun-kuen.com/theory_2ma.htm" target="_blank" rel="noopener">咏春拳的【二字钳羊马】</a>，便决心一试 ——</p><blockquote><p>双脚站立式自然分开，<strong>双膝并拢</strong>便自然半蹲，滑下过程中无论滑雪板如何抖动，都坚持这一姿势</p></blockquote><p>果然是<strong>见证奇迹的时刻</strong>！！！不但有惊无险、异常稳定，而且还不自觉地想主动撑起滑雪杆加速！！！</p><p>不但屡试不爽，而且那个有天赋的女生试了试也说比之前更稳！</p><p>于是，我一个连初级道都没一次正常滑完的大菜鸡，因为这一个领悟的开窍，直接挑战雪场最高滑道，竟然完美滑下，还以一个小漂移侧滑刹车！</p><p>这基本功没白练，徒弟谢过师傅！！！🙏</p><h2 id="再接再厉"><a href="#再接再厉" class="headerlink" title="再接再厉"></a>再接再厉</h2><p>虽然入门了滑直线，但不会拐弯、急刹还是很危险的，不是大家都防护到位，两次追尾撞人家个满怀肯定要出事……</p><blockquote><p>既然我们双膝并拢，让<strong>膝盖上方的内侧肌肉</strong>成为双脚外的着力点，那应该可以此为支点，左右倾斜身体来配合滑雪杆的用力方向去转向</p></blockquote><p>这个留待下次滑雪去验证~</p>]]></content>
      
      
      <categories>
          
          <category> Sport </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 滑雪 </tag>
            
            <tag> 武术 </tag>
            
            <tag> 咏春 </tag>
            
            <tag> one-word </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“开源运动”一句话说清</title>
      <link href="/community/open-source-in-one-word/"/>
      <url>/community/open-source-in-one-word/</url>
      
        <content type="html"><![CDATA[<blockquote><p>【开源】是一种基于<strong>国际互联网</strong>的全球性<strong>社会化协作</strong>模式，是在创造性工作中探索、实践民主的运动。</p></blockquote><blockquote><p><strong>开源运动</strong>虽源自计算机软硬件工程行业，但却像学术界在核心期刊上发表论文一样，程序员乐于分享<strong>基础技术的研发成果</strong>，让大家能基于此做更复杂的创造。</p></blockquote><blockquote><p>开源项目的<strong>软件代码</strong>、<strong>硬件设计图</strong>、<strong>文档文献</strong>在互联网上被全球专业人士盯着，<strong>恶意、缺陷无处遁形，创意、优化也不被埋没</strong>。</p></blockquote><h2 id="典型案例"><a href="#典型案例" class="headerlink" title="典型案例"></a>典型案例</h2><p>现代人每天的生活都离不开这些<strong>开放社会化协作</strong>的成果，它们不一定都是你目之所及、零距离接触的具体产品、服务，还可能是内部的<strong>关键部件</strong>，又可能是生产过程必备的<strong>生产力工具</strong>。以下是其中各类典型代表：</p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">类别</th><th style="text-align:center">生年</th><th style="text-align:center">简介</th></tr></thead><tbody><tr><td style="text-align:center">Linux</td><td style="text-align:center">操作系统内核</td><td style="text-align:center">1991</td><td style="text-align:center">Android 和大多数网站服务器、物联网设备的内核</td></tr><tr><td style="text-align:center">Git</td><td style="text-align:center">文件版本管理</td><td style="text-align:center">2005</td><td style="text-align:center">绝大多数程序员时刻在用的开发工具、GitHub 的基础</td></tr><tr><td style="text-align:center">Java</td><td style="text-align:center">高级编程语言</td><td style="text-align:center">1995</td><td style="text-align:center">大多数商业系统、绝大多数 Android 应用的编程语言</td></tr><tr><td style="text-align:center">Chromium</td><td style="text-align:center">网页浏览器</td><td style="text-align:center">2008</td><td style="text-align:center">Google Chrome 及大多数浏览器、跨系统应用的基础</td></tr><tr><td style="text-align:center">树莓派</td><td style="text-align:center">硬件开发板</td><td style="text-align:center">2012</td><td style="text-align:center">多数较大型智能硬件的原型开发板</td></tr><tr><td style="text-align:center">W3C 标准</td><td style="text-align:center">技术标准规范</td><td style="text-align:center">1994</td><td style="text-align:center">HTML、CSS 等支撑全球网站的基础技术标准</td></tr><tr><td style="text-align:center">维基百科</td><td style="text-align:center">百科网站</td><td style="text-align:center">2001</td><td style="text-align:center">全球最大的多语种通用知识库，完全由网民自主编辑</td></tr><tr><td style="text-align:center">freeCodeCamp</td><td style="text-align:center">技术公益组织</td><td style="text-align:center">2014</td><td style="text-align:center">全球最大的公益编程学习平台，学员来自 160 多个国家</td></tr><tr><td style="text-align:center">零时政府</td><td style="text-align:center">技术公益组织</td><td style="text-align:center">2012</td><td style="text-align:center">台湾 IT 从业者开发各种应用软件促进政府工作透明</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> one-word </tag>
            
            <tag> open-source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>田窗里面开道场</title>
      <link href="/development/docker-in-windows/"/>
      <url>/development/docker-in-windows/</url>
      
        <content type="html"><![CDATA[<p>每次大家一谈起 Docker，Windows 总能成为“黑点”，也不知道那些“果珍”哪来的自信……</p><p>别跟我说“不好装”！老子抄起 PowerShell 就是一把梭！<strong>Docker 核心、命令行、Compose、kubectl、图形界面客户端</strong>一条命令搞定！</p><pre class=" language-powershell"><code class="language-powershell">choco install docker<span class="token operator">-</span>desktop docker<span class="token operator">-</span>kitematic</code></pre><p>上述不适用于 Win 10 家庭版、Win 7/8 又怎么了？官方也支持老系统啊~</p><pre class=" language-powershell"><code class="language-powershell">choco install docker<span class="token operator">-</span>toolbox <span class="token operator">-</span>ia \    <span class="token operator">/</span>COMPONENTS=<span class="token string">"kitematic,virtualbox,dockercompose"</span>    <span class="token operator">/</span>TASKS=<span class="token string">"desktopicon,modifypath,upgradevm"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Chocolatey </tag>
            
            <tag> one-key </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 驱动的百科网站</title>
      <link href="/development/wiki-on-git/"/>
      <url>/development/wiki-on-git/</url>
      
        <content type="html"><![CDATA[<h2 id="NPM-一把梭"><a href="#NPM-一把梭" class="headerlink" title="NPM 一把梭"></a>NPM 一把梭</h2><p>经过<a href="/development/hello-hexo-travis/">《Hello Hexo &amp; Travis !》</a>的折腾，觉得 Hexo + GitHub Pages + Travis 整下来还是不够<a href="/tags/one-key/">一键化</a>，于是基于 <a href="https://www.npmjs.com/package/create-web-cell" target="_blank" rel="noopener">WebCell 项目生成器</a>的成功经验又开发了一个 <strong>Hexo Wiki 网站生成器</strong> ——</p><blockquote><p><a href="https://tech-query.me/create-hexo-wiki/">https://tech-query.me/create-hexo-wiki/</a></p></blockquote><p>除了一些必要的云服务配置，本机<strong>安装命令</strong>就一条 ——</p><pre class=" language-shell"><code class="language-shell">npm init hexo-wiki repo_name \    --theme name \    --plugins one,two \    --remote https://github.com/your_id/repo_name.git</code></pre><p>（若电脑访问国外网站比较慢，你可以先去喝个咖啡、吃个甜点）</p><h2 id="以维基的名义"><a href="#以维基的名义" class="headerlink" title="以维基的名义"></a>以维基的名义</h2><p>Hexo 作为通用的<strong>内容型网站</strong>生成器，可广泛用于博客、新闻、维基等类型的网站，为何我要把这个生成器以 Wiki 命名呢？</p><p>因为信仰 ——</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">时代</th><th style="text-align:center">内容</th><th style="text-align:center">交互形式</th></tr></thead><tbody><tr><td style="text-align:center">新闻门户</td><td style="text-align:center">Web 1.0</td><td style="text-align:center">政客、商人喉舌，缺乏知识</td><td style="text-align:center">他发，你看，评论严重受限</td></tr><tr><td style="text-align:center">个人博客</td><td style="text-align:center">Web 2.0</td><td style="text-align:center">个人心得、情绪，知识性弱</td><td style="text-align:center">他发，你看，评论相对自由</td></tr><tr><td style="text-align:center">维基百科</td><td style="text-align:center">Web 3.0</td><td style="text-align:center">公共知识、历史，链接丰富</td><td style="text-align:center">民写，民读，评论完全自由</td></tr></tbody></table><p>时代越发展，Web 就越接近 <a href="https://www.wikiwand.com/zh/%E8%92%82%E5%A7%86%C2%B7%E4%BC%AF%E7%BA%B3%E6%96%AF-%E6%9D%8E" target="_blank" rel="noopener">Tim Lee 大神</a>发明 <a href="https://www.wikiwand.com/zh/%E4%B8%87%E7%BB%B4%E7%BD%91" target="_blank" rel="noopener">WWW（万维网）</a>的初衷 ——</p><blockquote><p>数据<strong>互联</strong>，人人<strong>平等</strong></p></blockquote><p>只有<strong>承载知识的文档</strong>之间建立更多的链接，知识才更成体系；只有人人拥有<strong>发表见解的平等权利</strong>，才能基于<strong>知识体系</strong>激发人类无穷的<strong>创造力</strong>！</p><p>归根到底，还是那个老大难问题 ——</p><blockquote><p><strong>德先生</strong>（民主）与<strong>赛先生</strong>（科学）</p></blockquote><p>以 Wiki 为名，就是希望中小站长们在自己网站上的创作，能向<strong>维基百科</strong>看齐 ——</p><ol><li><p>形式上添加更多有价值的链接</p></li><li><p>内容上更客观、民主</p></li></ol><p>若有心，建设更多不同行业、地区的百科网站自是极好的~</p><h2 id="Git-助力-Wiki"><a href="#Git-助力-Wiki" class="headerlink" title="Git 助力 Wiki"></a>Git 助力 Wiki</h2><p>我与 Wiki 结缘也快十年了，不但把维基百科作为获取知识的得力助手，还带头创建过<a href="https://web.archive.org/web/20150307081711/http://wiki.fyscu.com:80/Wiki/%E9%A6%96%E9%A1%B5" target="_blank" rel="noopener">【川大百科】</a>。</p><p>但私以为，目前各种百科系统有一些普遍的问题 ——</p><ol><li><p>虽有专用的 <strong>Wiki 代码</strong>，但没有<strong>统一规范</strong>，以 <a href="https://www.mediawiki.org/" target="_blank" rel="noopener">MediaWiki</a> 为首各自实现上手有难度的<strong>扩展插件</strong></p></li><li><p>大多数系统都采用 PHP/JSP + SQL 数据库一类的<strong>传统网站架构</strong>，集存储、渲染、版本控制、数据 API 等功能于一身，复杂度高、性能较弱、扩展性差</p></li></ol><p>而在 GitHub 引领的<strong>大开源时代</strong>，有更灵活的<strong>分层解决方案</strong> ——</p><table><thead><tr><th style="text-align:center">技术</th><th style="text-align:center">类型</th><th style="text-align:center">特点</th></tr></thead><tbody><tr><td style="text-align:center">MarkDown</td><td style="text-align:center">文本格式</td><td style="text-align:center">有基本规范，高级语法多样、开源扩展丰富</td></tr><tr><td style="text-align:center">Git</td><td style="text-align:center">版本控制</td><td style="text-align:center">基于文件系统、文本比较的分布式系统，强大、可靠</td></tr><tr><td style="text-align:center">GitHub</td><td style="text-align:center">协作平台</td><td style="text-align:center">Fork -&gt; Pull request -&gt; Merge 工作流十分清晰</td></tr><tr><td style="text-align:center">Hexo</td><td style="text-align:center">网站生成器</td><td style="text-align:center">插件式架构灵活、易用，插件、主题丰富，社区活跃</td></tr><tr><td style="text-align:center">GitHub Pages</td><td style="text-align:center">网页服务器</td><td style="text-align:center">免费绑定自有域名的静态网站托管，与 Git 仓库完美结合</td></tr><tr><td style="text-align:center">Travis CI</td><td style="text-align:center">自动化服务</td><td style="text-align:center">与 GitHub 集成的构建、部署、自动任务云服务</td></tr><tr><td style="text-align:center">LeanCloud</td><td style="text-align:center">后端云服务</td><td style="text-align:center">基于容器的多语言服务器环境，并集成用户、搜索、消息等子系统，易学易用</td></tr></tbody></table><p>每一层都各司其职、相互配合，也可以用同类技术替换，搭建、迁移都比较容易。</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> one-key </tag>
            
            <tag> git </tag>
            
            <tag> wiki </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云计算时代的免费建站</title>
      <link href="/development/free-web-site/"/>
      <url>/development/free-web-site/</url>
      
        <content type="html"><![CDATA[<p><strong>云计算</strong>看起来更高大上，所以在这个时代<strong>网站建设</strong>更难了吗？</p><p>不！越分工应该越简单！</p><p>回望“免费空间”的时代，建站不过是“FTP 上传”，而今 HTTPS 证书、SSH 密钥、NGINX 配置、域名备案等等又繁琐又费钱的步骤，真让人掉发！</p><p>有没有办法更简单？有，但需要一番主动的探索……</p><h2 id="静态网页"><a href="#静态网页" class="headerlink" title="静态网页"></a>静态网页</h2><p>静态网页托管认准 <a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a>，需要 <strong>MarkDown 转 HTML</strong> 的推荐 <a href="/development/hello-hexo-travis/">Hexo</a>。</p><h2 id="顶级域名"><a href="#顶级域名" class="headerlink" title="顶级域名"></a>顶级域名</h2><p><a href="https://www.freenom.com/" target="_blank" rel="noopener">Freenom</a> 托管的顶级域名后缀简短、申请方便，Google 账号一键登录后即可搜索可用域名。一次最多<strong>免费租用 12 个月</strong>，到期前有电邮提醒续期，可<strong>免费续租 12 个月</strong>。若忘了续租，系统就认为是有价值的域名，就只能美刀去买了。</p><h2 id="HTTPS-证书"><a href="#HTTPS-证书" class="headerlink" title="HTTPS 证书"></a>HTTPS 证书</h2><p><a href="https://www.cloudflare.com/?r=1" target="_blank" rel="noopener">CloudFlare</a> 是全球著名的域名、CDN 服务提供商，<strong>Web 前端界</strong>国外使用最多、国内借鉴最多的 <a href="https://cdnjs.com/" target="_blank" rel="noopener">CDNJS</a> 便是它赞助的。用了它，<strong>免费 HTTPS 证书</strong>、<strong>DNS 管理</strong>、<strong>静态资源 CDN</strong> 一次性搞定！以后还可以用它的收费 <strong>DDoS 攻击防御</strong>，久经骇客攻击考验~</p><p>注册账号并登录后，即可一键导入<strong>域名基本配置</strong>，再去 Freenom 后台把 Name server 重定向过来，就可以用 CloudFlare 更先进的域名管理后台了。至于 HTTPS 配置，直接参考<a href="https://blog.cloudflare.com/secure-and-fast-github-pages-with-cloudflare/#step2settingupourdns" target="_blank" rel="noopener">官方博文</a>，配好后要等一会儿才能让国内 DNS 查到。</p><h2 id="CDN-加速"><a href="#CDN-加速" class="headerlink" title="CDN 加速"></a>CDN 加速</h2><p>既然用了 CF，为何还要自己做 CDN？因为 CF 在中国大陆与<em>百毒熊厂</em>合作业务，我是极端恶心<em>李厂长夫妇</em>的尿性的，只用 <strong>CloudFlare 海外版</strong>，有受众在天朝就得另辟蹊径。</p><p>我最终选用国内 <strong>BaaS 云服务</strong>龙头 <a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>：</p><ol><li><p>LeanCloud 云服务在天朝 <strong>Ping 延时</strong> &lt; 100ms，并能在<strong>应用管理后台</strong>看到流量响应统计</p></li><li><p><strong>应用二级域名</strong>是免费、无需备案的，在每个 HTML 文件 <code>&lt;head /&gt;</code> 标签最前面加个 <code>&lt;base href=&quot;https://my-app.leanapp.cn/&quot;&gt;</code>，<strong>用顶级域名打开页面、用二级域名加载外置资源</strong>二者各司其职</p></li><li><p>每个<strong>云应用</strong>都能启动一个<strong>免费容器实例</strong>，虽然每天强制休眠 6 小时，但对绝大多数小网站够用，实在不够也可开个<strong>￥1/日的生产实例</strong></p></li><li><p>底层基于 <a href="https://www.docker.com/" target="_blank" rel="noopener">Docker</a> 支持标准的 Node.JS、Python、Java、PHP、C# 项目，<strong>纯 Web 前端项目</strong>只需用 NPM 装个<a href="https://tech-query.me/KoApache/">命令行版 Web 服务器包</a>即可架站</p></li><li><p><strong>应用代码</strong>还能直接用 <a href="https://developer.github.com/webhooks/" target="_blank" rel="noopener">Web hook</a> 从一个 <strong>Git URL</strong> 拉取并自动部署</p></li><li><p>官方封装的<strong>数据存储</strong>、<strong>手机短信</strong>、<strong>即时通讯</strong>、<strong>消息推送</strong>、<strong>游戏客户端引擎</strong>等云服务也有方便的 API、SDK，为今后更多需求的开发提供保障</p></li></ol><h2 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h2><p>虽说很多人推荐七牛云的免费 10 GB 对象存储，但它必须备案域名才能下载，随机测试域名只能用 30 天……</p><p>心灰意冷之际却搜到来抢市场的<strong>腾讯云</strong> —— <a href="https://cloud.tencent.com/document/product/436/6240" target="_blank" rel="noopener">免费 50 GB</a> <strong>对象存储</strong>，支持不限期<a href="https://cloud.tencent.com/document/product/436/6224" target="_blank" rel="noopener">固定子域名</a>！</p><hr><p>【整套方案的样板项目】<a href="https://github.com/FreeCodeCamp-Chengdu/WFE-Conf" target="_blank" rel="noopener">https://github.com/FreeCodeCamp-Chengdu/WFE-Conf</a></p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> cloud </tag>
            
            <tag> free </tag>
            
            <tag> BaaS </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>装机必备软件一键安装</title>
      <link href="/maintenance/one-key-software-installation/"/>
      <url>/maintenance/one-key-software-installation/</url>
      
        <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>接着<a href="/development/coder-start-kit/">《编程入门之开发工具一键安装》</a>的思路，<strong>电脑维修一键装机</strong>也可用 <a href="https://chocolatey.org/" target="_blank" rel="noopener">Chocolatey</a> 实现！</p><p>回想我 2008~10 年在<a href="https://www.fyscu.com/" target="_blank" rel="noopener">川大飞扬</a>做骨干技术员时还没这么好的东西呢，<strong>PowerShell</strong> 也还没普及，要用 CMD、WSH/JS 绞尽脑汁地封装各种<strong>维修工具</strong>…… 今天算是给学弟学妹补上这个遗憾~</p><h2 id="一键脚本"><a href="#一键脚本" class="headerlink" title="一键脚本"></a>一键脚本</h2><p>Talk is cheap, show me the code!</p><pre class=" language-powershell"><code class="language-powershell"><span class="token keyword">function</span> getChoco<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Set</span><span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>Scope <span class="token keyword">Process</span> <span class="token operator">-</span>Force<span class="token punctuation">;</span>    <span class="token function">Invoke-Expression</span> <span class="token punctuation">(</span>        <span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://chocolatey.org/install.ps1'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>choco <span class="token operator">-</span>v<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> $?<span class="token punctuation">)</span> <span class="token punctuation">{</span>  getChoco  <span class="token punctuation">}</span>choco install <span class="token operator">-</span>y \    boxstarter<span class="token punctuation">.</span>winconfig ChocolateyGUI \    everything notepad3 7zip 360ts \    firefox tim wps<span class="token operator">-</span>office<span class="token operator">-</span>free<span class="token function">Import-Module</span> Boxstarter<span class="token punctuation">.</span>Chocolatey<span class="token function">Set</span><span class="token operator">-</span>WindowsExplorerOptions <span class="token operator">-</span>EnableShowHiddenFilesFoldersDrives <span class="token operator">-</span>EnableShowFileExtensionsInstall<span class="token operator">-</span>WindowsUpdate <span class="token operator">-</span>AcceptEula</code></pre><p>懂点计算机的都能大概看明白上面的<strong>脚本程序</strong>在干啥，不懂的只要有<em>高考英语水平</em>，用“看日文中的汉字”的笨办法也能了解一二，我就不解释了~</p><h2 id="软件管家？"><a href="#软件管家？" class="headerlink" title="软件管家？"></a>软件管家？</h2><p>上述脚本只装了普通中国大陆人最通用的几个软件，但针对大学不同专业的学生、社会上不同职业的员工，他们常用的专业<strong>软件集合</strong>又各不相同，即便计算机、软件专业，不同技术架构的程序员也需要<a href="/development/coder-start-kit/#%E6%96%B0%E7%94%B5%E8%84%91%E7%9A%84%E5%88%9B%E4%B8%96%E7%BA%AA">不同的开发环境</a>……</p><p>大神说：“要有个<a href="http://soft.360.cn/" target="_blank" rel="noopener">软件管家</a>！”</p><blockquote><p><a href="https://boxstarter.org" target="_blank" rel="noopener">https://boxstarter.org</a></p></blockquote><p>Chocolatey 官方团队早给各位“伸手党”准备好了，但他们设计的巧妙之处在于 ——</p><blockquote><p>软件集 即是 软件包</p></blockquote><p>可能借鉴了 <strong>UNIX 一切皆文件</strong>的思想，这样只需给<a href="https://boxstarter.org/Learn/SimplePackage" target="_blank" rel="noopener">软件集发布者</a>封装一些方便的工具、服务，而用户还是在 <a href="https://chocolatey.org/packages" target="_blank" rel="noopener">Chocolatey 官方软件仓库</a>中搜索、安装，让大家都简单~</p><h2 id="Awesome"><a href="#Awesome" class="headerlink" title="Awesome"></a>Awesome</h2><p>按着官方文档很快就把上述<strong>软件集脚本</strong>发布成一个包 <code>China-mainland-suite</code>：</p><ul><li><p><a href="https://chocolatey.org/packages/China-mainland-suite/" target="_blank" rel="noopener">软件包主页</a></p></li><li><p><a href="https://boxstarter.org/package/China-mainland-suite/" target="_blank" rel="noopener">一键安装</a></p></li></ul><p>依 <strong>GitHub 社群的 awesome（真香）传统</strong>，我来填补一下 Chocolatey 的 awesome 空白 ——</p><blockquote><p><a href="https://github.com/TechQuery/Chocolatey-awesome" target="_blank" rel="noopener">https://github.com/TechQuery/Chocolatey-awesome</a></p></blockquote><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><p><a href="https://www.pstips.net/powershell-online-tutorials" target="_blank" rel="noopener">https://www.pstips.net/powershell-online-tutorials</a></p></li><li><p><a href="https://blog.csdn.net/kk185800961/article/details/49026637" target="_blank" rel="noopener">https://blog.csdn.net/kk185800961/article/details/49026637</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chocolatey </tag>
            
            <tag> one-key </tag>
            
            <tag> Windows </tag>
            
            <tag> software </tag>
            
            <tag> install </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程入门之开发工具一键安装</title>
      <link href="/development/coder-start-kit/"/>
      <url>/development/coder-start-kit/</url>
      
        <content type="html"><![CDATA[<h2 id="编程开头难"><a href="#编程开头难" class="headerlink" title="编程开头难"></a>编程开头难</h2><p><strong><em>难倒编程小白的第一件事</em></strong> 恐怕是“安装开发工具”，即便是很多 <strong><em>程序猿老司机</em></strong>，也最怕“换电脑、配环境”……</p><p>这时可能有人会喷：“肯定用的 Windows！Mac、Linux 这些类 UNIX 系统各种开发工具都自带，装其它的也很方便~”</p><p>作为开源老司机的我，Linux 的<strong>开发者友好性</strong>自不必说，但 Mac 除了移植了整套 UNIX 工具链，<strong>接口兼容性</strong>、<strong>系统扩展性</strong>、<strong>企业级支持</strong>等等还真不如浸淫企业级市场二三十年的 Windows。现在连开发者友好性也不知不觉地落后了，且看我下文分解……</p><h2 id="程序猿的“应用商店”"><a href="#程序猿的“应用商店”" class="headerlink" title="程序猿的“应用商店”"></a>程序猿的“应用商店”</h2><p>之所以我们现在可以让小白、老司机都能一键安装开发工具，得益于每个流行系统、语言必备的<strong>包管理器</strong> —— 相当于图形界面软件的插件/扩展管理器、Windows 常用的 360 软件管家、Android 的 Google Play、iOS 的 App Store。</p><p>基本的使用逻辑都一样 ——</p><blockquote><p>搜索 → 安装 → 启动 → 更新 或 卸载</p></blockquote><p>只不过应用商店是在图形界面上<em>点点点</em>，而包管理器是在命令行终端里<em>敲敲敲</em>~</p><p>不要看到“敲命令”就眉头紧锁，如果要敲一大堆，怎能叫“一键安装”呢？废话不多，且看代码……</p><h2 id="大神说：要有“包管理器”！"><a href="#大神说：要有“包管理器”！" class="headerlink" title="大神说：要有“包管理器”！"></a>大神说：要有“包管理器”！</h2><h3 id="Windows-的“巧克力”"><a href="#Windows-的“巧克力”" class="headerlink" title="Windows 的“巧克力”"></a>Windows 的“巧克力”</h3><p>Windows 自打有 .Net Framework 后，也推出了 NuGet 包管理器，不过因为最早源自 Visual Studio 扩展，在 VS 之外并不太好用。但开发者社区基于它推出了更强大的包管理器，其中最方便的莫过 <a href="https://chocolatey.org/" title="Chocolatey 官网" target="_blank" rel="noopener">Chocolatey</a>，一键安装、开箱即用!</p><h4 id="安装包管理器"><a href="#安装包管理器" class="headerlink" title="安装包管理器"></a>安装包管理器</h4><pre class=" language-powershell"><code class="language-powershell"><span class="token function">Set</span><span class="token operator">-</span>ExecutionPolicy Bypass <span class="token operator">-</span>Scope <span class="token keyword">Process</span> <span class="token operator">-</span>Force<span class="token punctuation">;</span> <span class="token function">iex</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">New-Object</span> System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>WebClient<span class="token punctuation">)</span><span class="token punctuation">.</span>DownloadString<span class="token punctuation">(</span><span class="token string">'https://chocolatey.org/install.ps1'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>（以上命令在【开始菜单】里搜索 PowerShell，再在其图标上点右键，选“以管理员身份运行”后，输入在打开的命令行窗口中回车执行）</p><p><img src="https://oscimg.oschina.net/oscnet/d7bebb76b68bafe55ba47df1a26386bbd9b.jpg" alt=""></p><p><img src="https://oscimg.oschina.net/oscnet/9a098d1d1d95b3c0b84f7bde1d8046222c4.jpg" alt=""></p><h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><p>安装成功后，你就能在 CMD、PowerShell、Git Bash、WSL 等任何 Windows 支持的<strong>命令行终端</strong>里一键安装 <strong>命令行工具</strong>、<strong>软件基础库</strong> 和 <strong>图形界面软件</strong>了 ——</p><pre class=" language-shell"><code class="language-shell">choco install directxchoco install nodejschoco install googlechrome</code></pre><h4 id="搜索软件包"><a href="#搜索软件包" class="headerlink" title="搜索软件包"></a>搜索软件包</h4><p>你可以敲命令 ——</p><pre class=" language-shell"><code class="language-shell">choco search nodejs  |  more</code></pre><p>（按【空格】键显示更多）</p><p>你也可以直接访问 <a href="https://chocolatey.org/packages" target="_blank" rel="noopener">https://chocolatey.org/packages</a> ——</p><p><img src="https://oscimg.oschina.net/oscnet/1702d854f851d268a31a1a682a1458c9a37.jpg" alt=""></p><p>Google Chrome 用户第二次访问可以 <strong><em>地址栏一把梭</em></strong> ——</p><p><img src="https://oscimg.oschina.net/oscnet/499179d93a7541b09be01dc03011377ed63.jpg" alt=""></p><p><img src="https://oscimg.oschina.net/oscnet/3bc98c8d151517a955f88174d1d61210934.jpg" alt=""></p><p>传统<strong>命令行终端</strong>按 <code>Tab</code> 键<strong>提示可用命令</strong>、<strong>补全文件路径</strong>司空见惯，你见过能<strong>提示命令行参数</strong>、直接<strong>搜索软件包</strong>的吗？</p><p><img src="https://raw.githubusercontent.com/wiki/chocolatey/choco/images/gifs/choco_install.gif" alt="choco install"></p><h3 id="Mac-的“私酿”"><a href="#Mac-的“私酿”" class="headerlink" title="Mac 的“私酿”"></a>Mac 的“私酿”</h3><p>令人费解的总是 <strong><em>乔帮主的套路</em></strong>，一直吹嘘类 UNIX 体系“性能、安全”的 Mac，却不学同门师兄 Linux 的“为自己带包”，包管理器全是第三方开发的，而且还没 Windows 的好用……（果然是“私酿”？呵呵~）</p><p>以目前最常用的 <a href="https://brew.sh/" title="Homebrew 官网" target="_blank" rel="noopener">Homebrew</a> 为例，安装两个命令行工具才顶 Chocolatey 一个命令的功能 ——</p><pre class=" language-shell"><code class="language-shell"># 主命令只能安装“命令行工具”/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"# 子命令 cask 用于“图形界面软件”安装brew install cask</code></pre><pre class=" language-shell"><code class="language-shell">brew install nodejsbrew cask install google-chrome</code></pre><p>（以上命令若提示“无权限”，须加 <code>sudo</code> 前缀）</p><p>再看看它的<a href="https://formulae.brew.sh/formula/" title="Homebrew 软件包官方目录" target="_blank" rel="noopener">软件包网页目录</a>，只能【Command + F】整页查找，还没收录 cask 子命令的软件……</p><h2 id="新电脑的创世纪"><a href="#新电脑的创世纪" class="headerlink" title="新电脑的创世纪"></a>新电脑的创世纪</h2><p>每当我们拿到一台新电脑，在装好包管理器后，开发环境配置就能一把梭了。</p><h3 id="Web-前端-JavaScript-全栈工程师"><a href="#Web-前端-JavaScript-全栈工程师" class="headerlink" title="Web 前端 / JavaScript 全栈工程师"></a>Web 前端 / JavaScript 全栈工程师</h3><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><pre class=" language-shell"><code class="language-shell">choco install -y googlechrome firefox git tortoisegit vscode nodejs-lts nvm.portable</code></pre><h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><pre class=" language-shell"><code class="language-shell">brew install git node nvm caskbrew cask install google-chrome firefox sourcetree visual-studio-code</code></pre><h3 id="Python-黑客"><a href="#Python-黑客" class="headerlink" title="Python 黑客"></a>Python 黑客</h3><h4 id="Windows-1"><a href="#Windows-1" class="headerlink" title="Windows"></a>Windows</h4><pre class=" language-shell"><code class="language-shell">choco install -y git tortoisegit vscode pythonrefreshenvpython -m pip install --upgrade pip# 中国教育网用户切换镜像# pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simplepip install pipenv</code></pre><h4 id="Mac-1"><a href="#Mac-1" class="headerlink" title="Mac"></a>Mac</h4><pre class=" language-shell"><code class="language-shell">brew install git python caskbrew cask install sourcetree visual-studio-codepython -m pip install --upgrade pip# 中国教育网用户切换镜像# pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simplebrew install pipenv</code></pre>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Chocolatey </tag>
            
            <tag> HomeBrew </tag>
            
            <tag> PowerShell </tag>
            
            <tag> one-key </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Deepin 15.5 使用体验</title>
      <link href="/maintenance/deepin-15.5/"/>
      <url>/maintenance/deepin-15.5/</url>
      
        <content type="html"><![CDATA[<h2 id="硬盘真机安装"><a href="#硬盘真机安装" class="headerlink" title="硬盘真机安装"></a>硬盘真机安装</h2><ul><li><a href="http://reboot.pro/topic/19464-booting-linux-distros-iso-with-grub4dos/" target="_blank" rel="noopener">http://reboot.pro/topic/19464-booting-linux-distros-iso-with-grub4dos/</a></li><li><a href="https://sourceforge.net/p/clonezilla/discussion/Clonezilla_live/thread/35ef89a5/" target="_blank" rel="noopener">https://sourceforge.net/p/clonezilla/discussion/Clonezilla_live/thread/35ef89a5/</a></li></ul><h2 id="虚拟硬盘安装"><a href="#虚拟硬盘安装" class="headerlink" title="虚拟硬盘安装"></a>虚拟硬盘安装</h2><p>因一时没配置好 Deepin Live ISO 的 GRUB4DOS 引导脚本，就暂时用了 WUBI（Windows 体验式安装）。但意外的是，公司 Intel Core i7-7700K 4.2GHz、32GB 内存的台式机，安装后半段进度条几度便秘……</p><h2 id="坑爹的-N-卡开源驱动"><a href="#坑爹的-N-卡开源驱动" class="headerlink" title="坑爹的 N 卡开源驱动"></a>坑爹的 N 卡开源驱动</h2><p>安装后首次进桌面，感觉鼠标指针、dock、侧边栏都有卡顿，心中不妙…… 再点 launcher，逐行扫描过程清晰可见，快赶上当年装 WINE-QQ 调不起显卡、全靠 CPU 绘图一样…… 再加上“检查系统更新”菊花转半天，“失望”情绪油然而生……</p><p>放弃之前，还是点开“驱动管理器”碰碰运气，还好检测到了 N 卡私有驱动，等了一阵子装好了，似乎仍不见起色…… 重启？就好了……（为啥不弹框引导用户一下呢？）</p><h2 id="漫长的首次装机"><a href="#漫长的首次装机" class="headerlink" title="漫长的首次装机"></a>漫长的首次装机</h2><p>虽然“同步阻塞”是大多数<strong>操作系统内置包管理器</strong>的基本设计原则，但 Linux 大多数软件包最方便的安装方式就是包管理器，不像 Windows、Mac OS X 很多常用软件都可以从官网下载编译好的二进制包，所以系统升级、软件安装都要占用包管理器，系统安装到配齐环境往往要等很久……</p><h2 id="版本之痛"><a href="#版本之痛" class="headerlink" title="版本之痛"></a>版本之痛</h2><p>Web 前端、JavaScript 全栈开发现在都依赖 NodeJS，它不像 Python 被大多数 Linux 软件包依赖，基本只用在 Web 应用开发，而且又因社区活跃而迭代很快，在不少 Linux 软件源中的版本都比较旧，只能手动安装新版。</p><p>可谁承想，<a href="https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions" target="_blank" rel="noopener">官方安装脚本</a>却把 Deepin 的系统信息识别为 <code>unstable</code> 版本…… 只能又求助于 NVM —— <a href="https://github.com/creationix/nvm#install-script" target="_blank" rel="noopener">https://github.com/creationix/nvm#install-script</a> ，终于装上了……</p>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Deepin </tag>
            
            <tag> system </tag>
            
            <tag> software </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《红海行动》红动我心</title>
      <link href="/operation-red-sea/"/>
      <url>/operation-red-sea/</url>
      
        <content type="html"><![CDATA[<p>　　戊戌狗年前，卧床刷豆瓣。若不是“林超贤”这个名字，《红海行动》无论从题目、海报、主演上，都很容易从我的指尖划过。点进影片详情页，“《湄公河行动》升级版”、“比《战狼２》还过瘾”、“真实事件改编”一下子吊起了我的胃口 —— 从未如此期待“大年初一”～</p><p>　　公映当天，虽然一开始《红海行动》这种军事片的拍片量 远不及贺岁档其它几部奇装异服、妖魔鬼怪的爆米花大片，但上座率还是满满的，全城几家大影城的早场票早抢光了，只好顶着北国冬夜的寒风开车进城看晚一点的了……</p><p>　　豆瓣上看过点映的网友说“两个半小时，从头打到尾”果不其然，片名还没出就来了个精简版的《菲利普船长》，把大中华海军<strong>索马里护航编队</strong>表扬一番！不过狙击手罗星那颗发令枪般的子弹，3D 特效着实浮夸，后面戈壁反击战的狙击弹、村庄巷战的坦克炮弹也如法炮制，十分出戏……（过年返城在星美二刷 IMAX 3D 才明白，除了片头、片名、字幕，只有这几处子弹是 3D 的…… 林导拍的这么好看，当然是原谅他啦……）</p><p>　　擒拿海盗后，顺着罗星中弹的线索开始铺陈文戏。虽然张译、张涵予和几个新演员在真诚地展现军人间“话不多，真性情”的情感，但始终感觉国产片在处理“大背景中的小人物”这方面不够细腻，相比最近正在播映的同类美剧《海豹突击队》，人物塑造得还是不太贴近生活中人的自然状态。比如小动作、口头禅、口音等等，国内只有冯小刚、姜文、管虎、宁浩等个性十足的大牌导演才把这些看似不修边幅、实则韵味十足的细节拿捏到位，而且这样的片子基本都是当年佳话。因为这才是每个普通人的日常，有代入感才能打动人~</p><p>　　“枪战导演”把握不好的文戏一笔带过之后，红海某国政变，撤侨！妥妥的“也门内战”撤侨行动改编，《战狼２》生硬、尴尬的撤侨文戏在前，真为林导捏了把汗…… 还好这次是张涵予、张译这些中青年实力派担纲，中国大使也没硬插个投资方老板客串。特别是当年执行撤侨任务的两艘军舰之一临沂舰本尊出镜，全体指战员演自己乃是轻车熟路，我想海外华人群演那一声“我们的军舰来啦！”的欢呼，绝对是发自内心的呐喊！（我写到这儿，双眼久旱逢甘霖……）</p><p>　　紧接着，大使馆车队遇袭。舰长台词交代的起因是“某国总统遇袭，中国同意其政治避难”，叛军意图“大使换总统”。但我国其实一直奉行“和(huo)平(xi)共(ni)处”的外交原则，当年也门内战正反方与中国的关系都还行，与《战狼２》的“五星红旗一路绿灯”还真差不多。但为了引出本文题图帅炸的“蛟龙出海”，使馆武警们就一脸懵逼地和恐怖分子干上了…… 谁叫这片子是海政策划的呢，中国反恐实战经验最丰富的武警特战队，也只能沦为有勇无谋的脆皮 NPC，死等中国海军陆战队来“验明身份”、“接你们回家”……</p><p>　　回到某国政府军、平民死伤惨重的巷战，不禁令人想起我国边疆前些年的公交车炸弹袭击、打砸抢烧，若不是奋战在反恐一线的公安干警、武警战士，也许这一幕幕血肉横飞就不是在摩洛哥首都繁华街道“重演”了……</p><p>　　镜头一转，前半段的支线剧情开始并入主线。海清一出场的英文对白就让我惊艳了一下，想必背后一定是苦练。即便带着明显的汉语口音，但场景中的对话还是连贯、自然，比我们这些在国内的口语渣好太多了。看到这儿，有些人还可能惯性地以为“国民媳妇”可能只是个客串角色，但后面接踵而至的潜入敌营、解救人质（未遂）、请缨上阵、深入虎穴、坦克女兵，她还是将一个战地华裔女记者悲天悯人、有勇有谋的干练形象漂亮地塑造了出来。从当年《王贵与安娜》泼辣又善良的媳妇，到如今戈壁滩上摸爬滚打的记者，海清饱满而富有张力的演技从未让我们失望。而且包括她和女二蒋璐霞在内的所有战场演员，每个人在切换场景后都没像很多国产片一样“刷新妆容”，而是灰头土脸直至任务结束，好像这是部战地纪录片，演员一直融在画面中，观众也身临其境、从不“出戏”。</p><p>　　从蛟龙一队与夏楠汇合开始，全片开始进入“困难模式”，不但军舰没法直接支援，而且还时不时与军舰失去联系。不少国人会以为中国特种兵的“耍酷”环节要到了，没想到竟然是《拯救大兵瑞恩》和《黑鹰坠落》般艰苦卓绝的战斗。从好巧不巧的“扎车胎”开始，原本以为“政治正确”的女兵佟莉，反倒让我极为惊艳 —— 从下车的刹那果断开火，到迅速用身体掩护人质转移，并把自己的防弹衣托给人质，再到端着机枪奋勇射击，直到弹夹打孔，抽出匕首准备肉搏…… 这过程中的每一声嘶吼、每一次躲闪、每一喘粗气，都让我感同身受，相信她就是真的特种兵，在无比真实的反恐战斗中，压力巨大，但又无比坚韧！</p><p>　　果不其然，默契配合后逃出人质营才只是个开始，令人痛心的 flag 终于还是被击倒了 —— 倒在车上挣扎的机枪手石头面部血肉模糊，惊慌开车的佟莉估计也和我一样没看清发生了什么，只想着快点找个安全屋先躲起来！进了屋也一刻不能喘息，给石头一针吗啡后，医疗兵立马要给人质救治，石头忍着左脸打烂的剧痛依旧神勇地还击…… 但我们的英雄依然是肉体凡胎，回扔手雷会炸没双手，躲闪不及也会击穿喉咙…… 而女兵佟莉再一次展现出她的无比坚强，拼了命地还击，拼了命地捂住石头的动脉，又拼了命地用沾满鲜血的手指拨糖给石头 —— 吃糖不疼，我们回家！</p><p>　　泪目之余，旁边的观众着急地嘟囔：“狙击手打完了怎么还不过去救佟莉他们！”谁承想我们的通信兵在后方竟意外地与另一波敌人遭遇，没开几枪就要拼死肉搏，憋着最后一口气去挂上基站的电池！村外广阔的沙漠上，牛逼如苏式坦克，干练如蛟龙队长，猛虎斗群狼之下，最后也让指导员和记者打得手脚不能动弹。</p><p>　　自己人的死伤就这么一个接一个，赤裸裸、血淋淋地发生在我们眼前，“犯我中华者，虽远必诛”这种毛式豪言壮语，恐怕在很多人心中要打上一个大大的问号了。</p><p>　　我看了看时间，想着一般进度条到这儿，可能要神秘武器开挂才能搞个大新闻了。没想到蛟龙一队在仅剩４人的情况下，依然忍着巨大的悲痛，分工有序地再赴沙场！我们的战士身着飞行衣翱翔天空，配着铿锵有力的鼓点，我胸中燃起的豪情丝毫不逊与《战狼２》中那些豪言壮语！还有佟莉拼死裸绞壮汉后，控制运输机驾驶舱时那句流利的英语：“Claim down! I’m chinese military, start the engine, now!”让我再次涌出喜悦的泪水 —— 中国军队更现代化了，祖国更强大了！不是来自特效，也不是出于意淫，而是这近两个半小时实实在在的一招一式、一言一行！</p><p>　　最后，再次感谢海政、林导和全体演职人员历尽艰苦，为国人带来了一部极为写实的反恐反战大片，拔高国产电影水准之余，也充分展现了中国海军陆战队的团队英姿！</p>]]></content>
      
      
      <categories>
          
          <category> Movie </category>
          
      </categories>
      
      
        <tags>
            
            <tag> military </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22 行 JS 写个图片格式转换器</title>
      <link href="/programming/image-format-converter/"/>
      <url>/programming/image-format-converter/</url>
      
        <content type="html"><![CDATA[<p>【原文链接】<a href="https://my.oschina.net/TechQuery/blog/1630721" target="_blank" rel="noopener">https://my.oschina.net/TechQuery/blog/1630721</a></p><p>虽然国内大厂（豆瓣、微信公众平台 等）已支持 Google 推出的 <strong>WebP 图片格式</strong>来进一步优化性能，但其它多数软件平台还是只支持 BMP、GIF、JPEG、PNG 等经典格式，有时临时找个支持 WebP 的<strong>图片格式转换器</strong>也挺麻烦的，不如抄起键盘就是一把梭~</p><hr><h2 id="通用源码"><a href="#通用源码" class="headerlink" title="通用源码"></a>通用源码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> context2D <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    self<span class="token punctuation">.</span>convertImage <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>image<span class="token punctuation">,</span> format<span class="token punctuation">)</span> <span class="token punctuation">{</span>        context2D<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>        image<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">"Anonymous"</span><span class="token punctuation">;</span>        context2D<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>format <span class="token operator">||</span> <span class="token string">'png'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><p>直接用 <a href="https://www.google.cn/chrome/" target="_blank" rel="noopener">Google Chrome™</a> 调试器的 Source Snippets（源码片段）功能运行 ——</p><p><img src="https://static.oschina.net/uploads/img/201803/07210728_7XZk.png" alt="代码用法"></p><p>若有<a href="https://segmentfault.com/q/1010000002459456" target="_blank" rel="noopener">跨域相关报错</a>，可自行访问该图片的服务器首页，用自创的 <code>&lt;img src=&quot;path/to/image&quot; /&gt;</code> 加载待转换图片 ——</p><p><img src="https://static.oschina.net/uploads/img/201803/07004925_icAE.png" alt="跨域技巧"></p><pre class=" language-javascript"><code class="language-javascript">my_img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">convertImage</span><span class="token punctuation">(</span>my_img<span class="token punctuation">,</span> <span class="token string">'jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>上述代码运行完毕后，网页右键菜单中的<strong>图片另存为</strong>功能保存的就是 JPEG 格式的图片。</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> image </tag>
            
            <tag> format </tag>
            
            <tag> converter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北欧、日式混搭风 —— 森岩居</title>
      <link href="/nordic-japanese-style-home/"/>
      <url>/nordic-japanese-style-home/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">房</th><th style="text-align:center">地</th><th style="text-align:center">墙</th><th style="text-align:center">门</th><th style="text-align:center">柜</th><th style="text-align:center">灯</th></tr></thead><tbody><tr><td style="text-align:center">厨</td><td style="text-align:center">磨砂砖、灰</td><td style="text-align:center">磨砂砖、浅灰</td><td style="text-align:center">全透玻璃木框</td><td style="text-align:center">原木</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">卫</td><td style="text-align:center">磨砂砖、灰</td><td style="text-align:center">磨砂砖、浅灰</td><td style="text-align:center">磨砂玻璃木框</td><td style="text-align:center">原木</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">阳</td><td style="text-align:center">磨砂砖、灰</td><td style="text-align:center">磨砂砖、浅灰</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:center">卧</td><td style="text-align:center">浅原木地板</td><td style="text-align:center">暖灰</td><td style="text-align:center">浅原木</td><td style="text-align:center">原木</td><td style="text-align:center">柔光、吸顶</td></tr><tr><td style="text-align:center">厅</td><td style="text-align:center">浅原木地板</td><td style="text-align:center">暖灰</td><td style="text-align:center">浅原木</td><td style="text-align:center">原木</td><td style="text-align:center">柔光、吸顶 / 吊顶</td></tr></tbody></table><p>【参考方案】</p><ol><li><a href="https://www.kujiale.com/design/3FO4K7NG8GGK" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7NG8GGK</a></li><li><a href="https://www.kujiale.com/design/3FO4K7MMU7AI" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7MMU7AI</a></li><li><a href="https://www.kujiale.com/design/3FO4K7OELTL0" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7OELTL0</a></li><li><a href="https://www.kujiale.com/design/3FO4K7OEBP5Y" target="_blank" rel="noopener">https://www.kujiale.com/design/3FO4K7OEBP5Y</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Design </category>
          
      </categories>
      
      
        <tags>
            
            <tag> design </tag>
            
            <tag> home </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【体验】室内设计 Web 编辑器</title>
      <link href="/interior-design-web-editor/"/>
      <url>/interior-design-web-editor/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">品牌</th><th style="text-align:center">账号体系</th><th style="text-align:center">前端技术</th><th style="text-align:center">特色功能</th></tr></thead><tbody><tr><td style="text-align:center"><a href="https://www.kujiale.com/" target="_blank" rel="noopener">酷家乐</a></td><td style="text-align:center">电邮 / 手机号 + QQ / 微信 / 微博</td><td style="text-align:center">WebGL (THREE.js)</td><td style="text-align:center">报价清单</td></tr><tr><td style="text-align:center"><a href="http://www.fuwo.com/" target="_blank" rel="noopener">爱福窝</a></td><td style="text-align:center">电邮 / 手机号 + QQ / 微信 / 微博 / 淘宝</td><td style="text-align:center">Flash (Stage3D)</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><a href="http://www.shejijia.com/" target="_blank" rel="noopener">居然设计家</a></td><td style="text-align:center">电邮 / 手机号</td><td style="text-align:center">SVG、WebGL (THREE.js)</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><a href="https://zh.floorplanner.com/" target="_blank" rel="noopener">Floorplanner</a></td><td style="text-align:center">电邮 + Google</td><td style="text-align:center">Canvas / WebGL (Pixi.JS)</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><a href="https://planoplan.com/cn/" target="_blank" rel="noopener">Planoplan</a></td><td style="text-align:center">电邮</td><td style="text-align:center">Canvas、ASM.JS</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><a href="http://yun.gstarcad.com/" target="_blank" rel="noopener">浩辰云图</a></td><td style="text-align:center">电邮 / 手机号 + QQ / 微信 / 微博</td><td style="text-align:center">Flash</td><td style="text-align:center">网页 CAD</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Product </category>
          
      </categories>
      
      
        <tags>
            
            <tag> design </tag>
            
            <tag> Web </tag>
            
            <tag> editor </tag>
            
            <tag> cloud </tag>
            
            <tag> SaaS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【入门】ZeroNet —— 更接近 互联网的本质</title>
      <link href="/community/connect-zero-net/"/>
      <url>/community/connect-zero-net/</url>
      
        <content type="html"><![CDATA[<h2 id="一键安装"><a href="#一键安装" class="headerlink" title="一键安装"></a>一键安装</h2><p><a href="https://zeronet.io/" target="_blank" rel="noopener">https://zeronet.io/</a></p><h2 id="入门文章"><a href="#入门文章" class="headerlink" title="入门文章"></a>入门文章</h2><ul><li>官方文档中文翻译 —— <a href="http://127.0.0.1:43110/docs.ysc3839.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/docs.ysc3839.bit/</a></li><li>《零网教学》Wiki —— <a href="http://127.0.0.1:43110/1NCezLP8aXjABVreBB1CKGPub2tKTtyhWU/" target="_blank" rel="noopener">http://127.0.0.1:43110/1NCezLP8aXjABVreBB1CKGPub2tKTtyhWU/</a></li><li>ZN 站文件上传方案 —— <a href="http://127.0.0.1:43110/typeblog.bit/?Post:8:ZeroBlog+%E6%89%A9%E5%B1%95:+%E6%9B%B4%E6%96%B9%E4%BE%BF%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0" target="_blank" rel="noopener">http://127.0.0.1:43110/typeblog.bit/?Post:8:ZeroBlog+%E6%89%A9%E5%B1%95:+%E6%9B%B4%E6%96%B9%E4%BE%BF%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0</a></li><li>传统网站、ZeroNet 整合方案 —— <a href="http://127.0.0.1:43110/1LcQTyUYkq3n458rkHVQxhHyvUdmSYFURd/?Post:14:ZeroNet%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/%E5%85%A8%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/%E6%97%A0%E9%99%90%E5%88%B6%E7%BD%91%E7%AB%99" target="_blank" rel="noopener">http://127.0.0.1:43110/1LcQTyUYkq3n458rkHVQxhHyvUdmSYFURd/?Post:14:ZeroNet%E7%BB%93%E6%9E%84%E8%A7%A3%E6%9E%90/%E5%85%A8%E5%8A%A8%E6%80%81%E7%BD%91%E7%AB%99/%E6%97%A0%E9%99%90%E5%88%B6%E7%BD%91%E7%AB%99</a></li><li>在树莓派中运行 ZeroNet —— <a href="http://127.0.0.1:43110/dreamcreator108.bit/?Post:1:%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%AD%E8%BF%90%E8%A1%8CZeroNet" target="_blank" rel="noopener">http://127.0.0.1:43110/dreamcreator108.bit/?Post:1:%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%AD%E8%BF%90%E8%A1%8CZeroNet</a></li></ul><h2 id="精品网站"><a href="#精品网站" class="headerlink" title="精品网站"></a>精品网站</h2><ul><li>ZeroNet 搜索引擎列表 —— <a href="http://127.0.0.1:43110/zerofind.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/zerofind.bit/</a></li><li>新 GFW 论坛 —— <a href="http://127.0.0.1:43110/NewGFWTalk.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/NewGFWTalk.bit/</a></li><li>公共政策参与 &amp; 公民权利 —— <a href="http://127.0.0.1:43110/1F1MV279QLu3mLWpD4KMBy7dNvZGss6YiJ/" target="_blank" rel="noopener">http://127.0.0.1:43110/1F1MV279QLu3mLWpD4KMBy7dNvZGss6YiJ/</a></li><li>BT 中文资源论坛 —— <a href="http://127.0.0.1:43110/btsynchina.bit/" target="_blank" rel="noopener">http://127.0.0.1:43110/btsynchina.bit/</a></li><li>编程狗的博客 —— <a href="http://127.0.0.1:43110/1Ld63vNnfm5SEUTbsYxB7XGo7kHQVUGghU/" target="_blank" rel="noopener">http://127.0.0.1:43110/1Ld63vNnfm5SEUTbsYxB7XGo7kHQVUGghU/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Community </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Internet </tag>
            
            <tag> ZeroNet </tag>
            
            <tag> P2P </tag>
            
            <tag> GFW </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ReadMe</title>
      <link href="/readme/"/>
      <url>/readme/</url>
      
        <content type="html"><![CDATA[<h1 id="南漂一卒"><a href="#南漂一卒" class="headerlink" title="南漂一卒"></a>南漂一卒</h1><pre><code>余生于“己巳民运”翌年阳春，长于稷下学宫光辉照耀之地，而今偏安蜀国蓉城一隅。纵享天府之安逸乎？概效同乡武侯，牧益州而心怀天下也！</code></pre><h2 id="自画像"><a href="#自画像" class="headerlink" title="自画像"></a>自画像</h2><ul><li><p><strong>软粉</strong>：历经 DOS、Win 95、Win 98、Office 97、Win 2000、Office 2000、Win XP、Office 2003、Win 7、Win 8.1、Win 10，追随二十载，终成 MVP</p></li><li><p><strong>小黑粉</strong>：ThinkPad R40、T420i、T440s、25 AE —— 曾经沧海难为水，除却巫山不是云</p></li><li><p><strong>谷粉</strong>：2001 年从用 Google 开始知道“搜索引擎”，09 年后用过腾讯搜搜、搜狗、必应，而后曲线救国终回谷歌怀抱</p></li><li><p><strong>米粉</strong>：没有比 MIUI 更适合天朝的移动端操作系统</p></li><li><p><strong>李纳丝儿</strong>：2005 年从申请邮寄 10 CD 的 Ubuntu 首版 4.10 开始接触开源软件，历经 Fedora、共创、CentOS、Debian、Linux Mint、Slax、Puppy、雨林木风，最终在 Deepin 转战 Linux 社区时上船</p></li><li><p><strong>大不了三丝儿</strong>：HTML/DOM、CSS、JS 原生标准支持者，致力于 <strong>Web 应用开发</strong></p></li><li><p><strong>NG 欧巴</strong>：高中建过社团，大学建过社团部门，现打杂于多个<strong>公益技术社区</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Profile </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Intel XDK 跨平台 App 开发初体验</title>
      <link href="/development/intel-xdk-preview/"/>
      <url>/development/intel-xdk-preview/</url>
      
        <content type="html"><![CDATA[<p>　　用 <strong>HTML/CSS/JavaScript</strong> 进行<strong>移动端 App 跨平台开发</strong>的开源旗手非 <a href="http://phonegap.com/" target="_blank" rel="noopener"><strong>Adobe PhoneGap</strong></a> 莫属，它的开源核心 <strong><a href="http://cordova.apache.org/" target="_blank" rel="noopener">Apache Cordova</a></strong> 就像 Apple Safari、Google Chrome 的 Webkit 内核一样，驱动着国内外不少同类解决方案（如 <a href="https://software.intel.com/zh-cn/intel-xdk" target="_blank" rel="noopener"><strong>Intel XDK</strong></a>、<a href="http://www.wex5.com" target="_blank" rel="noopener">WeX5</a>）。</p><p>　　但 PhoneGap 在开发时也有一些问题 ——</p><ol><li>Adobe 官方支持 PhoneGap 的 IDE 是 Dreamweaver（开源人肯定优先选开源产品）</li><li><a href="https://play.google.com/store/apps/details?id=com.adobe.phonegap.app" target="_blank" rel="noopener">Android 开发者真机预览 App</a> 没有官方下载链接（天朝将会上线的“谷歌市场”估计也不会同步 Google Play 所有的 App）</li><li>Adobe 官方提供的 <a href="https://build.phonegap.com/" target="_blank" rel="noopener">PhoneGap 构建服务</a> <em>私有 App 免费服务配额</em> 很有限</li><li>Android 开发时用 <strong><a href="https://crosswalk-project.org/" target="_blank" rel="noopener">CrossWalk</a></strong>（Intel 开源的 Chromium 核心）替换 <strong>WebView</strong> 要自己折腾</li><li>群众反映的<a href="https://github.com/phonegap/phonegap-app-developer/issues/287#issuecomment-210536817" target="_blank" rel="noopener">某些问题</a> 似乎解决缓慢</li></ol><p>　　上述这些问题正好被“牛逼”已久的 <strong>Intel XDK</strong> 解决了~</p><iframe src="http://player.youku.com/embed/XNzU1Njk1MDU2" frameborder="0" allowfullscreen style="width: 100%; height: 80vh"></iframe><p><a href="http://v.youku.com/v_show/id_XNzU1Njk1MDU2.html" target="_blank" rel="noopener">（在新网页中观看视频）</a></p><p>　　Intel XDK 整个上手过程还是比较顺利 ——</p><ol><li>官网下载<em>安装包</em>（<a href="https://software.intel.com/zh-cn/intel-xdk-early-access" target="_blank" rel="noopener">中文版</a>还不是稳定版）</li><li>安装、启动后注册 <strong>Intel 开发者账号</strong></li><li>从 _Template 或 Samples and Demos _中选一项创建应用（建议勾选“use <strong>App Designer</strong>”，有些模板有<a href="https://software.intel.com/en-us/xdk/docs/app-designer-overview" target="_blank" rel="noopener">“所见即所得”的<strong>拖拽 UI 控件模式</strong></a>）<br><img src="http://static.oschina.net/uploads/img/201606/22103244_0LsM.png" alt="App 设计器"></li><li>写好自己的程序后即可到 <em>Build 选项卡</em>中选择 <strong>App 打包目标平台<br><img src="http://static.oschina.net/uploads/img/201606/22095531_mjsf.png" alt="构建前提示添加数字证书"></strong></li><li>点击 IDE 界面上的提示链接，会跳转到 App Build Settings 页面，再其中完善一下 App 相关信息（若需要 <strong>CrossWalk</strong> 来优化性能，请选择 <strong>Embedded 运行时</strong>，因为 <em>Shared</em> 只会从 <em>Google Play</em> 自动安装共享库，天朝用户只能用 20+ MB 的<strong>静态编译版 APK</strong> 了……）<br><img src="http://static.oschina.net/uploads/img/201606/22103245_mgR9.png" alt="Build 设置 CrossWalk 优化"><br><img src="http://static.oschina.net/uploads/img/201606/22103245_rwa7.png" alt="CrossWalk 运行时类型"></li><li>在上述界面中还需要新建一个<strong> Developer Certificate</strong>（相关信息的填写可参考 <em>Android 数字证书</em> 的生成方法）<br><img src="http://static.oschina.net/uploads/img/201606/22095532_hmWi.png" alt="添加开发者证书"><br><img src="http://static.oschina.net/uploads/img/201606/22095532_wQHX.png" alt="新建 Android 数字证书 KeyStore"></li><li>再回到 <em>Build 选项卡</em>时可能会提示你 Unlock Certificate，输入之前设置的<strong>证书密钥</strong>即可<br><img src="http://static.oschina.net/uploads/img/201606/22095540_E52L.png" alt="Build 选项卡"></li><li>终于，我们可以点击期盼已久 <em>Start Builds 按钮</em>了（<em>等进度条</em>是天朝擅长的……）<br><img src="http://static.oschina.net/uploads/img/201606/22095550_kFO2.png" alt="等待构建"></li><li>构建成功后，你注册开发者账号的邮箱会收到一封内含下载链接的电邮（直接在 IDE 界面上点<em>下载按钮</em>是单线程下载……）<br><img src="http://static.oschina.net/uploads/space/2016/0621/182435_X0QM_1171658.png" alt="App 构建下载链接"></li></ol><p>　　Android App 安装、运行亲测结果 ——</p><ol><li><strong>ARM 架构版</strong>：在 <strong><a href="http://www.miui.com/" target="_blank" rel="noopener">MIUI</a></strong> v7 上需开启“安装未知来源的应用”，运行正常！~</li><li><strong>x86 架构版</strong>：<a href="http://www.bluestacks.com/" target="_blank" rel="noopener">BlueStacks</a> 虚拟机安装成功，运行黑屏……</li></ol><p>【参考文档】</p><ol><li><a href="http://cordova.apache.org/docs/zh-cn/5.4.0/" target="_blank" rel="noopener">Apache Cordova 官方中文文档</a></li><li><a href="https://software.intel.com/en-us/xdk/docs/using-build-tab-and-build-settings" target="_blank" rel="noopener">Intel XDK 构建选项</a></li><li><a href="https://software.intel.com/en-us/xdk/docs/intel-xdk-certificate-management" target="_blank" rel="noopener">Intel XDK 开发者账号证书管理</a></li><li><a href="http://docs.apicloud.com/Dev-Guide/Android-License-Application-Guidance" target="_blank" rel="noopener">Android 数字证书概述</a></li><li><a href="http://www.micmiu.com/lang/java/keytool-start-guide/" target="_blank" rel="noopener">Java 证书工具讲解</a></li><li><a href="http://www.ourunix.org/post/146.html" target="_blank" rel="noopener">Android 应用签名机制</a></li><li><a href="https://software.intel.com/en-us/xdk/docs/choosing-crosswalk-build-options-shared-or-embedded" target="_blank" rel="noopener">Intel CrossWalk 运行时的选择</a></li><li><a href="https://software.intel.com/en-us/xdk/docs/building-cordova-ios-app-with-wkwebview" target="_blank" rel="noopener">通过 Cordova 插件添加 iOS WKWebView 支持</a></li><li><a href="https://software.intel.com/en-us/articles/cordova-whitelisting-with-intel-xdk-for-ajax-and-launching-external-apps" target="_blank" rel="noopener">Intel XDK AJAX 域名白名单</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> Intel </tag>
            
            <tag> SDK </tag>
            
            <tag> IDE </tag>
            
            <tag> PhoneGap </tag>
            
            <tag> Cordova </tag>
            
            <tag> Mobile </tag>
            
            <tag> Software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再战“所见即所得”富文本编辑器（附 原创工具）</title>
      <link href="/programming/rich-text-editor-hacker/"/>
      <url>/programming/rich-text-editor-hacker/</url>
      
        <content type="html"><![CDATA[<h2 id="未尽的事业"><a href="#未尽的事业" class="headerlink" title="未尽的事业"></a>未尽的事业</h2><p>2014年底，我为了搞定 <strong>电邮签名档</strong> 做了次<a href="http://my.oschina.net/TechQuery/blog/350954" target="_blank" rel="noopener">专门的研发</a>，非常有收获！但它依然有个<a href="http://my.oschina.net/TechQuery/blog/350954#OSC_h1_2" target="_blank" rel="noopener">坑</a> ——</p><blockquote><p><strong>外置 CSS 样式</strong> 要人工一一填到 HTML 标签的 style 属性中，图片也要自己转换成 <strong>Base64 编码</strong>……</p></blockquote><p>2016年初，我又遇到需要手写 <strong>富文本电邮</strong>的一件事，手工转换一个大网页 —— 累个半死…… 同时，女友也在为“<strong>微信公众平台 图文消息编辑器</strong> 不能在文章正文加超链接”发愁，想用我当年开发的 <a href="http://gitee.com/Tech_Query/iBookmarkLet#-富文本编辑框-自定义-html-代码片段-插入工具-v0-4" target="_blank" rel="noopener"><strong>HTML 代码注入工具</strong></a> 除了学会写 静态网页代码，还是要我手工转换为 <strong>单一网页格式</strong>（类似 Internet Explorer <code>.mht</code>）……</p><h2 id="编程马拉松"><a href="#编程马拉松" class="headerlink" title="编程马拉松"></a>编程马拉松</h2><p>基于不久前对 <a href="http://gitee.com/Tech_Query/iQuery/commit/5f2e05676e16b33a81f0639c760738ec9763d487" target="_blank" rel="noopener"><strong>CSS 对象</strong>的深入研究</a>，我用之前两个夜晚的饭后休息时间完成了一个 <a href="http://gitee.com/Tech_Query/iBookmarkLet#-网页代码-行内化-v0-2" target="_blank" rel="noopener"><strong>网页代码 行内化工具</strong></a>的开发、测试 ——</p><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span>  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* ---------- 生效样式 ---------- */</span>    <span class="token keyword">function</span> <span class="token function">Tag_Computed_CSS</span><span class="token punctuation">(</span>iDOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>            iDOM<span class="token punctuation">.</span>ownerDocument<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>iDOM<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* ---------- 原始样式 ---------- */</span>    <span class="token keyword">var</span> Tag_Style <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  iSandBox <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'iframe'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    iSandBox<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">'none'</span><span class="token punctuation">;</span>    DOM<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span> iSandBox <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">Tag_Default_CSS</span><span class="token punctuation">(</span>iTagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _DOM_ <span class="token operator">=</span> iSandBox<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> Tag_Style<span class="token punctuation">[</span>iTagName<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> iDefault <span class="token operator">=</span> _DOM_<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span> iTagName <span class="token punctuation">)</span><span class="token punctuation">;</span>            _DOM_<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span> iDefault <span class="token punctuation">)</span><span class="token punctuation">;</span>            Tag_Style<span class="token punctuation">[</span>iTagName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Tag_Computed_CSS</span><span class="token punctuation">(</span>iDefault<span class="token punctuation">)</span><span class="token punctuation">;</span>            _DOM_<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span> iDefault <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> Tag_Style<span class="token punctuation">[</span>iTagName<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* ---------- 变更样式 ---------- */</span>    <span class="token keyword">function</span> <span class="token function">Tag_Customed_CSS</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> iCustomed <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            iComputed <span class="token operator">=</span> <span class="token function">Tag_Computed_CSS</span><span class="token punctuation">(</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>            iDefault <span class="token operator">=</span> <span class="token function">Tag_Default_CSS</span><span class="token punctuation">(</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iAttr <span class="token keyword">in</span> iComputed<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>                <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span> iAttr <span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&amp;&amp;</span>                <span class="token punctuation">(</span><span class="token operator">!</span> iAttr<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^(moz|webkit|ms)/</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token operator">&amp;&amp;</span>                <span class="token punctuation">(</span>iComputed<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">!=</span> iDefault<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token operator">&amp;&amp;</span>                <span class="token punctuation">(</span><span class="token operator">!</span> iAttr<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/width|height/i</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span>                iCustomed<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">=</span> iComputed<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> iCustomed<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/* ---------- 内联化核心 ---------- */</span>    BOM<span class="token punctuation">.</span>CSS_Inline <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> iStyle <span class="token operator">=</span> <span class="token function">Tag_Customed_CSS</span><span class="token punctuation">(</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iAttr <span class="token keyword">in</span> iStyle<span class="token punctuation">)</span>            arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span> <span class="token operator">=</span> iStyle<span class="token punctuation">[</span>iAttr<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span>Image_Inline <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iDOM<span class="token punctuation">,</span> iWaterMark<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _Image_ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  iCanvas <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _Image_<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> iContext <span class="token operator">=</span> iCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _Image_<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            iCanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> _Image_<span class="token punctuation">.</span>width<span class="token punctuation">;</span>            iCanvas<span class="token punctuation">.</span>height <span class="token operator">=</span> _Image_<span class="token punctuation">.</span>height<span class="token punctuation">;</span>            iContext<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>_Image_<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>iWaterMark<span class="token punctuation">)</span> <span class="token punctuation">{</span>                iContext<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'20px sans-serif'</span><span class="token punctuation">;</span>                iContext<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">;</span>                iContext<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span>iWaterMark<span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">,</span>  _Image_<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            iDOM<span class="token punctuation">.</span>src <span class="token operator">=</span> iCanvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            _Image_ <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        _Image_<span class="token punctuation">.</span>src <span class="token operator">=</span> iDOM<span class="token punctuation">.</span>src<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span>Web_Inline <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> iTag <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  i <span class="token operator">&lt;</span> iTag<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span> iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> <span class="token string">'meta'</span><span class="token punctuation">:</span>      <span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'style'</span><span class="token punctuation">:</span>     <span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'script'</span><span class="token punctuation">:</span>    <span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'iframe'</span><span class="token punctuation">:</span>                    iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span> iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">'img'</span><span class="token punctuation">:</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">Image_Inline</span><span class="token punctuation">(</span>iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">default</span><span class="token punctuation">:</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">CSS_Inline</span><span class="token punctuation">(</span> iTag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token keyword">return</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* ---------- 使用流程 ---------- */</span>    BOM<span class="token punctuation">.</span><span class="token function">Web_Inline</span><span class="token punctuation">(</span>DOM<span class="token punctuation">.</span>body<span class="token punctuation">,</span> BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"图片水印文字："</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        DOM<span class="token punctuation">.</span>body<span class="token punctuation">.</span>textContent <span class="token operator">=</span> DOM<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML<span class="token punctuation">;</span>        BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请全选、复制当前显示的所以代码~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> editor </tag>
            
            <tag> rich-text </tag>
            
            <tag> injection </tag>
            
            <tag> hacker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】Docker LAMP 入门</title>
      <link href="/development/docker-lamp/"/>
      <url>/development/docker-lamp/</url>
      
        <content type="html"><![CDATA[<p><strong>LAMP 服务器套件</strong>（Linux + Apache + MySQL + PHP）早已成为 <strong>Web 应用开发者</strong> 最常用的<strong>部署环境</strong>，几乎是入门必修课，但它的搭建、维护也是对初学者很艰难的一课。虽然有 <strong>XAMPP</strong> 这样的跨平台一键安装包，但它们主要是为了方便搭建开发环境，并不适合直接用在<strong>线上生产环境</strong>。</p><p>自己辛辛苦苦写好的网站上线都费事，简直太沮丧了…… 于是，各种各样的<strong>云计算服务</strong>应运而生，从各个层面解决不同水平 Web 应用开发者的部署需求。下面是从服务底层到用户顶层依次列出的常见<strong>云计算服务模式</strong> ——</p><ul><li><strong>IaaS</strong>（<strong>基础设施</strong> 即 服务）—— 云主机/服务器</li><li><strong>CaaS</strong>（<strong>应用容器</strong> 即 服务）—— Docker</li><li><strong>PaaS</strong>（<strong>技术平台</strong> 即 服务）—— AWS、GAE、SAE 等</li><li><strong>BaaS</strong>（<strong>后端 API</strong> 即 服务）—— LeanCloud 等</li><li><strong>SaaS</strong>（<strong>应用软件</strong> 即 服务）—— Tower、Worktile 等</li></ul><p>在云计算时代到来之前，还有几种常见的部署环境 ——</p><ul><li>类似 PaaS 的<strong>网站空间</strong> —— 本质上是一个操作系统中用 Apache 之类的 HTTP 服务器，对不同的域名 指向不同的<strong>网站根目录</strong>，所以上传网站文件只能用 FTP 读写你自己的目录，网站程序也不能读写本站之外的服务器目录，同机的所有网站共享一个 IP 地址</li><li>类似 IaaS 的 <strong>VPS（虚拟主机）</strong> —— 同样是独享一个操作系统的虚拟机，但究其<strong>宿主环境</strong>，一个 VPS 只能运行在一个真实的服务器主机上，而云主机则运行在一群真机协作抽象成的一个超级服务器（<strong>服务器集群</strong>）。后者的硬件资源 超高利用率、真机热插拔（便于扩展、容错）等特性，是前者望尘莫及的；但对它们的用户来说，包括 <strong>独享 IP</strong>、<strong>SSH</strong>（远程登录命令行）等关键特性在内的使用方法几乎完全一样</li></ul><p>至于 <strong>Docker</strong>，它旨在<strong>把 Web 应用程序和它的标准运行环境（由一个配置文件描述）打包为一个虚拟机镜像</strong>，让部署、迁移、扩展一键搞定，无需开发人员、运维人员手动配置云主机，因“开发与部署的环境不完全相同”而产生的 Bug 也没有了。</p><hr><p>构建一个 <strong>Ubuntu + LAMP</strong> 镜像的 <strong>Dockerfile</strong> 配置文件 ——</p><pre class=" language-dockerfile"><code class="language-dockerfile">FROM ubuntu:14.04MAINTAINER test_32 "shiy2008@gmail.com"RUN apt-get update; \    apt-get install -y lamp-server^;COPY . /var/wwwEXPOSE 80CMD /etc/init.d/apache2 restart</code></pre><hr><p>【参考文档】</p><ol><li><a href="http://blog.csdn.net/we_shell/article/details/38445979" target="_blank" rel="noopener">http://blog.csdn.net/we_shell/article/details/38445979</a></li><li><a href="http://blog.sina.com.cn/s/blog_7380598c0100wdl5.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_7380598c0100wdl5.html</a></li><li><a href="http://segmentfault.com/q/1010000000693754" target="_blank" rel="noopener">http://segmentfault.com/q/1010000000693754</a></li><li><a href="http://dockerfile.github.io/#/ubuntu" target="_blank" rel="noopener">http://dockerfile.github.io/#/ubuntu</a></li><li><a href="http://www.alauda.cn/2015/07/12/dockerfiledemo/" target="_blank" rel="noopener">http://www.alauda.cn/2015/07/12/dockerfiledemo/</a></li><li><a href="http://dockerpool.com/static/books/docker_practice/" target="_blank" rel="noopener">http://dockerpool.com/static/books/docker_practice/</a></li><li><a href="https://docs.docker.com/" target="_blank" rel="noopener">https://docs.docker.com/</a></li><li><a href="http://www.aixq.com/post-328.html" target="_blank" rel="noopener">http://www.aixq.com/post-328.html</a></li><li><a href="http://blog.sina.com.cn/s/blog_4dc988240102vj8a.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_4dc988240102vj8a.html</a></li><li><a href="http://www.docker.org.cn/book/docker.html" target="_blank" rel="noopener">http://www.docker.org.cn/book/docker.html</a></li><li><a href="http://my.oschina.net/ylchou/blog/522381" target="_blank" rel="noopener">http://my.oschina.net/ylchou/blog/522381</a></li><li><a href="https://github.com/docker/kitematic/issues/1037" target="_blank" rel="noopener">https://github.com/docker/kitematic/issues/1037</a></li><li><a href="http://www.oschina.net/question/1171658_2177501" target="_blank" rel="noopener">http://www.oschina.net/question/1171658_2177501</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloud </tag>
            
            <tag> Docker </tag>
            
            <tag> LAMP </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【爱之深】Linux Deepin 2014 试用札记</title>
      <link href="/maintenance/deepin-2014/"/>
      <url>/maintenance/deepin-2014/</url>
      
        <content type="html"><![CDATA[<p>【原文链接】<a href="https://my.oschina.net/TechQuery/blog/380778" target="_blank" rel="noopener">https://my.oschina.net/TechQuery/blog/380778</a></p><h2 id="高度赞扬"><a href="#高度赞扬" class="headerlink" title="高度赞扬"></a>高度赞扬</h2><p>作为一个关注 <strong>中国开源社区、深度技术论坛</strong> 近十年的技术员、程序员，私以为 —— <strong>Linux Deepin 2014</strong> 是 第一款真正意义上中国人（主导开发）的 PC 操作系统！也是<strong>继 Ubuntu 之后，全球第二个真正好用的 Linux 桌面发行版</strong>！</p><p>主要理由 ——</p><ol><li><strong>稳定的专职开发团队</strong>（感谢 深度技术论坛 创始人 刘闻欢）</li><li><strong>与国际开源社区接轨的运作模式</strong></li><li><strong>国内外程序员的大力支持</strong></li><li><strong>自主研发、简洁易用的安装工具、桌面环境</strong></li></ol><h2 id="较大的-Bug"><a href="#较大的-Bug" class="headerlink" title="较大的 Bug"></a>较大的 Bug</h2><h3 id="官方安装U盘制作工具-名成实败"><a href="#官方安装U盘制作工具-名成实败" class="headerlink" title="官方安装U盘制作工具 名成实败"></a>官方安装U盘制作工具 名成实败</h3><ul><li>【环境】自攒台式机 —— Intel 奔腾 64bit 双核、ASUS 主板、SATA - IDE 兼容模式、WinXP Pro 32bit SP3<br>简体中文版</li><li>【操作】制作 Deepin 2014.2 64bit 安装U盘</li><li>【症状】U盘格式化被格式化为一个8MB的隐藏分区、一个占用剩余空间、没有任何文件的 Windows 可用分区，开机引导时（传统 BIOS）只有最低分辨率黑屏闪光标（EFI 引导就直接跳过U盘进本机系统了）</li></ul><h3 id="WUBI-安装等进度条时，介绍动画不显示"><a href="#WUBI-安装等进度条时，介绍动画不显示" class="headerlink" title="WUBI 安装等进度条时，介绍动画不显示"></a>WUBI 安装等进度条时，介绍动画不显示</h3><ul><li>【环境】同上</li><li>【操作、症状】如题</li></ul><h3 id="QQ-6-7-in-CrossOver-运行几分钟就崩溃"><a href="#QQ-6-7-in-CrossOver-运行几分钟就崩溃" class="headerlink" title="QQ 6.7 (in CrossOver) 运行几分钟就崩溃"></a>QQ 6.7 (in CrossOver) 运行几分钟就崩溃</h3><ul><li>【环境】Deepin 2014.2 64bit （WUBI 安装版）（32bit 安装后无此软件）</li><li>【症状】QQ 能正常运行客户端账号首次登陆后的所有操作，消息窗口也能正常使用，但几分钟后（即使 登陆后没有任何操作），QQ 自己的崩溃反馈窗口打开，并可以用它来重启，但重新登陆后故障反复</li><li>【解决】临时用 <strong>DeepWINE-QQ 2012 国际版</strong></li></ul><h3 id="系统更新不可用"><a href="#系统更新不可用" class="headerlink" title="系统更新不可用"></a>系统更新不可用</h3><ul><li>【环境】Deepin 2014.2（WUBI 安装版）、上海交通大学 镜像（自动测速选择的）、中国大陆官方稳定源（手动选择）</li><li>【操作】用 <strong>深度软件中心</strong> 更新系统软件包</li><li>【症状】<strong>本机软件源包数据库</strong>更新完之后，32bit 显示系统是最新的，64bit 能显示 187 个更新包，点击【全部升级】后报错“系统软件包依赖损坏”（刷新则反复同样的错误），如下图 ——<br><img src="http://static.oschina.net/uploads/space/2015/0228/144405_Zmtb_1171658.png" alt="Deepin 软件包依赖损坏"></li></ul><h3 id="官方-WUBI-安装工具-重启后不能进-Deepin"><a href="#官方-WUBI-安装工具-重启后不能进-Deepin" class="headerlink" title="官方 WUBI 安装工具 重启后不能进 Deepin"></a>官方 WUBI 安装工具 重启后不能进 Deepin</h3><ul><li>【环境】ThinkPad T440s、Intel 酷睿 i5、混合硬盘、Win 8.1 Lenovo OEM 中文版、Deepin 2014.2 64bit（本文写作环境）</li><li>【操作】WUBI 安装提示成功后点“现在重启”后直接 真重启，无人干预时直接进 Windows，且过程无任何变化（即 没有可以选择进 Deepin 的界面），在 msconfig 中也看不到 Deepin 的引导项</li><li>【解决】进 BIOS 的 Boot 列表看到“Deepin”，于是关掉“<strong>Secure Boot</strong>”并重启，引导前按【F 12】打开“<strong>BIOS/EFI 引导菜单</strong>”，选 Deepin 进入</li><li>【建议】即使不能操作 EFI 设置，也应该在 WUBI 安装成功后显示一个后续操作简介，用 Google 搜索 linuxdeepin.com 完全没有 <strong>EFI/Win 8 双系统教程</strong>……（Google 全网也没有 <strong>ThinkPad Win 8、Deepin 双系统教程</strong>）</li></ul><h3 id="GRUB-2-引导界面-Deepin-美化版不显示"><a href="#GRUB-2-引导界面-Deepin-美化版不显示" class="headerlink" title="GRUB 2 引导界面 Deepin 美化版不显示"></a>GRUB 2 引导界面 Deepin 美化版不显示</h3><ul><li>【环境】同上（官方 WUBI 安装）</li><li>【操作】每次进系统时，Deepin 美化过的 <strong>GRUB 引导界面</strong> 都不能显示，只显示 黑底白字的默认界面</li></ul><h3 id="快捷键设置【Windows-Logo-键-方向键】无效"><a href="#快捷键设置【Windows-Logo-键-方向键】无效" class="headerlink" title="快捷键设置【Windows Logo 键 + 方向键】无效"></a>快捷键设置【Windows Logo 键 + 方向键】无效</h3><ul><li>【环境】同上（官方 WUBI 安装）</li><li>【操作】系统设置面板中设置【最大化/恢复窗口】快捷键为【Super + ↑/↓】</li><li>【症状】虽显示设置成功，但实际各种窗口均只响应方向键的操作</li><li>【建议】<strong>WinNT 6.x 内核</strong>开始标配的<strong>【Windows Logo 键 + 方向/数字键】系列快捷键</strong> 非常方便，特别是“配合数字键来启动/切换任务栏上的程序”，对<strong>键盘党</strong>来说非常实用！Deepin 的首批铁杆用户必定是一批<strong>开源程序员</strong>，希望能先服务好这样的人群～</li></ul><h2 id="UED-细节不足"><a href="#UED-细节不足" class="headerlink" title="UED 细节不足"></a>UED 细节不足</h2><h3 id="键盘按键太灵"><a href="#键盘按键太灵" class="headerlink" title="键盘按键太灵"></a>键盘按键太灵</h3><ul><li>【环境】同上</li><li>【现象】键盘<strong>组合快捷键</strong> 快速重复响应（如 Google Chrome 中【Ctrl + Tab】切换选项卡，按一下换好几个）</li><li>【解决】在系统全局设置面板的【键盘和语言】中把“重复延迟”、“重复速率”均调到中间值</li><li>【建议】各种设备参数默认值 参考 <strong>ThinkPad、Mac Book</strong></li></ul><h3 id="默认工作区快捷键与-Google-Chrome-冲突"><a href="#默认工作区快捷键与-Google-Chrome-冲突" class="headerlink" title="默认工作区快捷键与 Google Chrome 冲突"></a>默认工作区快捷键与 Google Chrome 冲突</h3><ul><li>【环境】同上</li><li>【现象】键盘按【Ctrl + 数字键】<strong>切换 Chrome 网页标签</strong> 被系统全局默认快捷键“切换到工作区 n”拦截</li><li>【解决】在系统全局设置面板的【快捷键 - 工作区】中把“切换到工作区 1~4”的设置清空</li><li>【建议】<strong>系统全局默认快捷键</strong> 避开 常用软件的默认设置</li></ul><h3 id="触控板双指滚动方向反了"><a href="#触控板双指滚动方向反了" class="headerlink" title="触控板双指滚动方向反了"></a>触控板双指滚动方向反了</h3><ul><li>【环境】同上</li><li>【解决】在系统全局设置面板的【鼠标和触摸板】中开启“自然滚动”（但此时“边缘滚动”的方向也改了）</li><li>【建议】同上（私以为，在设计的层面 —— <strong>双指滚动</strong> 是从模拟“人手抓握后拖拉”的动作设计出来的，可以叫做“<strong>自然滚动</strong>”；而 <strong>单指边缘滚动</strong> 旨在模拟“鼠标指针拖拽控件滚动条”，应该沿用以前的方向习惯。）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Deepin </tag>
            
            <tag> system </tag>
            
            <tag> software </tag>
            
            <tag> bug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子邮件签名档 HTML 手写时的折腾（附 原创工具）</title>
      <link href="/programming/email-signature-html-tool/"/>
      <url>/programming/email-signature-html-tool/</url>
      
        <content type="html"><![CDATA[<p>【原文链接】<a href="https://my.oschina.net/TechQuery/blog/350954" target="_blank" rel="noopener">https://my.oschina.net/TechQuery/blog/350954</a></p><h2 id="入职必修课"><a href="#入职必修课" class="headerlink" title="入职必修课"></a>入职必修课</h2><p>鄙人作为码农进厂开电脑的第一件正事就是 —— 在 Foxmail 客户端中设置自己<strong>公司的域名邮箱</strong>，并加上看起来还挺<strong>专业的签名档</strong>。</p><p>接收欢迎新人的邮件，选中老员工的签名档并复制粘贴到写邮件设置中，修改个人信息并保存 —— 这似乎很轻松，但…… 职位一处的文字稍长一些就显示不全…… 旁边那么多空白竟然不能<strong>自适应</strong>？！作为一个<strong>前端程序猿</strong>，简直不能忍 —— 改代码！</p><p>虽然 Foxmail 客户端的<strong>富文本编辑器</strong>几乎和 QQ邮箱一样（原本也是同一个团队的作品嘛），但竟然不支持 <strong>HTML 格式化</strong>…… 还好在线代码格式化工具很多。但格式化之后，代码依然很烂 —— 各种样式还用 HTML 4 的标签属性，style 属性也是一坨一坨地堆着，姓名、职位、手机、电邮等竟然还用 <code>&lt;input type=&quot;text&quot; /&gt;</code>……</p><p>Foxmail 自己加上去的全局样式不是用 <code>&lt;style /&gt;</code> 写在最前面吗？这么乱的代码，哥怎么有心情改？！写个简称得了，管你们看不看得懂~</p><h2 id="收拾“旧河山”"><a href="#收拾“旧河山”" class="headerlink" title="收拾“旧河山”"></a>收拾“旧河山”</h2><p>俩月后，公司新产品上线，要在签名档已有的俩二维码中间再加一个 —— 公司网管兄用 DreamWeaver 死活改不好，于是来找我帮忙…… 那就不客气了 —— 直接用自己的 CSS 框架的布局模块来重写，那叫一个畅爽~</p><p>写完之后在浏览器里测试完美，便即刻粘贴到 Foxmail 中 —— 样式没了？！</p><p>再尝试用 Foxmail <strong>邮件模板</strong> —— 样式又没了？！</p><p>只好用浏览器调试器一个一个元素地把<strong>外联样式</strong>填回 style 属性中……</p><p>再试 Outlook —— 还是没样式！连 <strong>DataURL 形式的图片</strong>都叉了？！</p><h2 id="前端猿的-Hack"><a href="#前端猿的-Hack" class="headerlink" title="前端猿的 Hack"></a>前端猿的 Hack</h2><p>最后只好登录公司<strong>邮件服务的 Web 版</strong>，在账号选项中设置签名档 —— 连 <strong>HTML 源码编辑模式</strong>都没了……</p><p>那就只能把 新签名档源码在浏览器中打开，再全选、复制、粘贴到邮件系统编辑框 —— 测试邮件基本正常，除了<strong>逼死强迫症的水平滚动条</strong>……（马丹，这不在同事面前显得我很没水平？！）</p><p><img src="http://static.oschina.net/uploads/space/2014/1201/154333_73Tz_1171658.png" alt="Web Mail 签名档设置"></p><p>仔细查看测试邮件的源代码之后发现 —— <strong>所有 style 的长度数值都从百分比变成了像素绝对值</strong>……</p><p>我想应该是 浏览器等客户端程序在复制 HTML 等富文本时把相对值转换成了绝对值，可以用下面的原创程序初步验证 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> isIE <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span> BOM<span class="token punctuation">.</span>document<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span>CB_getData <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>cType<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> This <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>            EM <span class="token operator">=</span> isIE <span class="token operator">?</span>                    <span class="token punctuation">[</span><span class="token string">'attachEvent'</span><span class="token punctuation">,</span> <span class="token string">'onpaste'</span><span class="token punctuation">,</span> <span class="token string">'detachEvent'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span>                    <span class="token punctuation">[</span><span class="token string">'addEventListener'</span><span class="token punctuation">,</span> <span class="token string">'paste'</span><span class="token punctuation">,</span> <span class="token string">'removeEventListener'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>cType <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span> isIE<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>cType<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'text'</span><span class="token punctuation">:</span>    cType <span class="token operator">=</span> <span class="token string">'text/plain'</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'url'</span><span class="token punctuation">:</span>     cType <span class="token operator">=</span> <span class="token string">'text/unicode'</span><span class="token punctuation">;</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">case</span> <span class="token string">'html'</span><span class="token punctuation">:</span>    cType <span class="token operator">=</span> <span class="token string">'text/html'</span><span class="token punctuation">;</span>     <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        This<span class="token punctuation">.</span>document<span class="token punctuation">[</span> EM<span class="token punctuation">[</span>cType <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">]</span><span class="token punctuation">(</span>EM<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> PO <span class="token operator">=</span> isIE <span class="token operator">?</span> This <span class="token punctuation">:</span> arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> CBR <span class="token operator">=</span> CallBack<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>                isIE <span class="token operator">?</span> PO<span class="token punctuation">.</span>srcElement <span class="token punctuation">:</span> PO<span class="token punctuation">.</span>target<span class="token punctuation">,</span>                PO<span class="token punctuation">.</span>clipboardData<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span>cType<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> CBR<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>isIE<span class="token punctuation">)</span>  PO<span class="token punctuation">.</span>event<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> PO<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span> isIE <span class="token operator">?</span> undefined <span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  粘贴事件发生时，回调函数的首个参数 将赋值为 剪贴板中的内容</span><span class="token function">CB_getData</span><span class="token punctuation">(</span><span class="token string">'HTML'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>Content<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Content<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  返回 false 阻止浏览器 事件默认行为，即不在用户粘贴的地方输出 剪贴板内容（同 jQuery）</span></code></pre><p>网管小哥只好把浏览器窗口拉窄一些再复制粘贴 —— 至少看起来没啥问题了……（但我知道在一些领导的轻薄笔记本、平板电脑等更窄的屏幕上还会溢出啊）</p><p>最后的最后 —— 在 <strong>Web 邮箱的签名档设置框</strong>中右击打开调试器，直接编辑它的 <strong>HTML 文档片段</strong>，把签名档源码粘贴进去再返回来保存 —— 发出来的测试邮件源码完整保留了<strong>长度值的百分比原值</strong>~</p><p><img src="http://static.oschina.net/uploads/space/2014/1201/154419_B5gz_1171658.png" alt="Web Mail 签名档编辑框内容代码注入"></p><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>按理说，<strong>E-mail</strong> 这种兼容 HTML 格式的<strong>经典互联网标准</strong> 应该至少支持 HTML 4 + CSS 2 吧？哥手写的布局系统基于 display: table(-cell) 就不行？</p><p>Outlook、Foxmail 等 <strong>Windows 邮件客户端</strong> 渲染 HTML 应该直接调用本机的 <strong>IE 内核</strong>吧？哥用的可是 <strong>IE 11</strong> 啊~</p><p>咋就这么多不兼容的坑坑呢……？</p><hr><p>其实很多<strong>网站系统的富文本编辑框</strong> 都没有 <strong>HTML 代码编辑模式</strong>，直接复制粘贴<strong>富文本片段</strong>经常会格式出错（比如 <strong>微信公众平台</strong>编辑模式的图文消息发布模块）……</p><p>在后台程序过滤之外，<strong>前端工程师</strong> 能一劳永逸地解决此类问题的方法只有 —— 用 <strong>JavaScript</strong> 做 <strong>HTML 代码片段注入</strong>……</p><p>所以我写了个 <strong>Bookmarklet</strong>（网页浏览器 <strong>书签栏按钮小工具</strong>）发布在 <a href="http://gitee.com/Tech_Query/iBookmarkLet" target="_blank" rel="noopener"><strong>Git@OSC</strong></a> 上，欢迎大家折腾、<strong>提 issue</strong>~</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ol><li><a href="http://www.topcss.org/?tag=document-activeelement" target="_blank" rel="noopener">http://www.topcss.org/?tag=document-activeelement</a></li><li><a href="http://www.cnblogs.com/hughtxp/p/3939976.html" target="_blank" rel="noopener">http://www.cnblogs.com/hughtxp/p/3939976.html</a></li><li><a href="http://blog.csdn.net/lee_magnum/article/details/17761441" target="_blank" rel="noopener">http://blog.csdn.net/lee_magnum/article/details/17761441</a></li><li><a href="http://www.cnblogs.com/xzhang/p/3968204.html" target="_blank" rel="noopener">http://www.cnblogs.com/xzhang/p/3968204.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> toolkit </tag>
            
            <tag> HTML </tag>
            
            <tag> Email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】Google 站内搜索小工具</title>
      <link href="/maintenance/google-search-tool-insite/"/>
      <url>/maintenance/google-search-tool-insite/</url>
      
        <content type="html"><![CDATA[<p>对于<strong>经常在互联网中查资料去开拓自己的未知领域</strong>的人们来说，<strong>搜索引擎</strong>绝对是必备工具 —— 它不但能在全球浩瀚的信息海洋中对我们需要的信息“大海捞针”，也能有针对性地对某个网站的内容进行搜寻，让我们能不受<strong>内容源网站自身内容组织结构</strong>的负面影响，迅速找到需要的内容。</p><p>虽然 <strong>站内搜索</strong> 早已是搜索引擎的标配，但大多做得不好，经常一篇文章已经在某网站发布了比较久了，但就是搜不出来……（特别是 中途调整过<strong>网址结构</strong>的网站，比如 路径格式变更、换子域名、换主域名 等）</p><p>目前为止，<strong>Google</strong> 依然是 难得可用且很好用的<strong>站内搜索引擎</strong>，这一点我在以前原创的<a href="http://bbs.fyscu.com/forum.php?mod=redirect&amp;goto=findpost&amp;ptid=2711&amp;pid=58461" target="_blank" rel="noopener">【Google 站内搜索助手】v0.9</a>的发布帖中早有论述~</p><p>因为我对上述工具的<a href="/programming/google-search-tool/">上游代码</a>做了升级，所以也重构了这个工具。而且，我把自己写的所有实用的 <strong>Bookmarklet</strong> 整合成了一个<a href="http://gitee.com/Tech_Query/iBookmarkLet/" target="_blank" rel="noopener"><strong>开源项目 iBookmarkLet</strong></a> 发布，所以博文里就只贴出<strong>安装版代码</strong> ——</p><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span>DOM<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token regex">/ /</span><span class="token punctuation">;</span><span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token keyword">var</span> DN<span class="token punctuation">,</span>HN<span class="token punctuation">,</span>trim<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">iRegExp</span><span class="token punctuation">(</span><span class="token string">"(^s*)|(s*$)"</span><span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SS<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>WF<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> TN<span class="token punctuation">,</span>TA<span class="token punctuation">,</span>N<span class="token punctuation">,</span>n<span class="token punctuation">,</span>IS<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>TN <span class="token keyword">in</span><span class="token punctuation">{</span>input<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>textarea<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>TA<span class="token operator">=</span>DOM<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>N <span class="token keyword">in</span> TA<span class="token punctuation">)</span><span class="token keyword">with</span><span class="token punctuation">(</span>TA<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>selectionStart<span class="token punctuation">,</span>selectionEnd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>DOM<span class="token punctuation">.</span>selection<span class="token operator">?</span>DOM<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">:</span>DOM<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>WF<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span>IS<span class="token operator">=</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>WF<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">!=</span>IS<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span><span class="token keyword">return</span> IS<span class="token punctuation">}</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span>frames<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">""</span><span class="token operator">!=</span>SS<span class="token operator">?</span><span class="token punctuation">(</span>HN<span class="token operator">=</span>BOM<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hostname<span class="token punctuation">,</span>DN<span class="token operator">=</span>HN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/(edu|net|org|com|gov)\.\w+$/</span><span class="token punctuation">)</span><span class="token operator">?</span>HN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/(\w+\.){2}\w+$/</span><span class="token punctuation">)</span><span class="token punctuation">:</span>HN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/\w+\.\w+$/</span><span class="token punctuation">)</span><span class="token punctuation">,</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"https://wen.lu/search?newwindow=1&amp;q="</span><span class="token operator">+</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token punctuation">[</span>SS<span class="token punctuation">,</span><span class="token string">" site:"</span><span class="token punctuation">,</span>DN<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"您未选中任何网页中的文字……\n\n\n『确定』进入问题反馈；『取消』即退出本工具。"</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"输入框中的是『运行环境』信息，请直接复制它们，按『确认』即可访问 原作者主页～"</span><span class="token punctuation">,</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">,</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"http://www.fyscu.com/"</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"【Google 站内搜索助手 v1.0】\n\n(C)2013-2014  四川大学·飞扬俱乐部·研发部"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span>top<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Maintenance </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【浏览器小工具】墙内 Google 划词搜索</title>
      <link href="/programming/google-search-tool/"/>
      <url>/programming/google-search-tool/</url>
      
        <content type="html"><![CDATA[<p>天朝<strong>习大大</strong>继位之后，政坛、社会暗流更加汹涌，各路高官皆有落马者…… <strong>好在江山依然稳固，彭阿姨依然美丽</strong>，但我<strong>大谷歌</strong>却牺牲更大，义务封口近一岁，重放新声遥无期……</p><p>好在我朝素不缺<strong>侠肝义胆之士</strong>，树立数个<strong>海外镜像</strong>来招魂，其魂最真者 —— <a href="http://www.v2ex.com/t/126018" target="_blank" rel="noopener">某 <strong>V2EX</strong> 大神的一声<strong>天问</strong> —— 路在何方！~</a></p><p>鄙人不才，仅能<strong>低调地传承侠客的义举</strong> —— 把大神的招魂镜像封装在<a href="http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=3677" target="_blank" rel="noopener">我之前做的一个 Bookmarklet</a> 中，并再次优化，方便大家使用 ——</p><h2 id="安装用代码"><a href="#安装用代码" class="headerlink" title="安装用代码"></a>安装用代码</h2><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>BOM<span class="token punctuation">,</span>DOM<span class="token punctuation">,</span>SL<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token regex">/ /</span><span class="token punctuation">;</span><span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span>c<span class="token punctuation">}</span><span class="token keyword">var</span> trim<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">iRegExp</span><span class="token punctuation">(</span><span class="token string">"(^s*)|(s*$)"</span><span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>SS<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span>WF<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> TN<span class="token punctuation">,</span>TA<span class="token punctuation">,</span>N<span class="token punctuation">,</span>n<span class="token punctuation">,</span>IS<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>TN <span class="token keyword">in</span><span class="token punctuation">{</span>input<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">,</span>textarea<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">{</span>TA<span class="token operator">=</span>DOM<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>N <span class="token keyword">in</span> TA<span class="token punctuation">)</span><span class="token keyword">with</span><span class="token punctuation">(</span>TA<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>selectionStart<span class="token punctuation">,</span>selectionEnd<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>IS<span class="token operator">=</span><span class="token function">trim</span><span class="token punctuation">(</span>DOM<span class="token punctuation">.</span>selection<span class="token operator">?</span>DOM<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">:</span>DOM<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token operator">==</span>IS<span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>WF<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">try</span><span class="token punctuation">{</span>IS<span class="token operator">=</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>WF<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>EO<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token operator">!=</span>IS<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">}</span><span class="token keyword">return</span> IS<span class="token punctuation">}</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span>frames<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token string">""</span><span class="token operator">!=</span>SS<span class="token operator">?</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"https://wen.lu/search?newwindow=1&amp;lr=lang_"</span><span class="token punctuation">,</span>SL<span class="token punctuation">,</span><span class="token string">"&amp;q="</span><span class="token punctuation">,</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>SS<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">"您未选中任何网页中的文字……\n\n\n『确定』进入问题反馈；『取消』即退出本工具。"</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">"输入框中的是『运行环境』信息，请直接复制它们，按『确认』即可访问 原作者主页～"</span><span class="token punctuation">,</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">,</span>BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"http://www.fyscu.com/"</span><span class="token punctuation">,</span><span class="token string">"_blank"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"【Google 中文搜索助手 v0.9】\n\n(C)2013-2014  四川大学·飞扬俱乐部·研发部"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span>top<span class="token punctuation">.</span>document<span class="token punctuation">,</span><span class="token string">"zh-CN"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="开发用源码"><a href="#开发用源码" class="headerlink" title="开发用源码"></a>开发用源码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">,</span> SL<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span>Pattern<span class="token punctuation">,</span> Mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> RegEx <span class="token operator">=</span> <span class="token regex">/ /</span><span class="token punctuation">;</span>        RegEx<span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>Pattern<span class="token punctuation">,</span> Mode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> RegEx<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> trim <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> RegEx <span class="token operator">=</span> <span class="token function">iRegExp</span><span class="token punctuation">(</span><span class="token string">'(^\s*)|(\s*$)'</span><span class="token punctuation">,</span> <span class="token string">'g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span>Str<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> Str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>RegEx<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> SS <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>WF<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> IS <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> TN <span class="token keyword">in</span> <span class="token punctuation">{</span>input<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> textarea<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> TA <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TN<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> N <span class="token keyword">in</span> TA<span class="token punctuation">)</span> <span class="token keyword">with</span> <span class="token punctuation">(</span>TA<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span>                IS <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span> value<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>selectionStart<span class="token punctuation">,</span> selectionEnd<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">EO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IS <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span>  IS <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span>            DOM<span class="token punctuation">.</span>selection <span class="token operator">?</span>                DOM<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token punctuation">:</span>                DOM<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IS <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> WF<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//  以下异常处理 很神奇地 绕过了 IE、Firefox 对 iframe 的跨域安全限制～</span>            <span class="token comment" spellcheck="true">//  但可能在它们中运行时会有一瞬间的卡顿……</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span> IS <span class="token operator">=</span> arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span> WF<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">EO</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>IS <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> IS<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>BOM<span class="token punctuation">.</span>frames<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>SS <span class="token operator">!=</span> <span class="token string">''</span><span class="token punctuation">)</span>        BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token string">'https://wen.lu/search?newwindow=1&amp;lr=lang_'</span><span class="token punctuation">,</span> SL<span class="token punctuation">,</span>            <span class="token string">'&amp;q='</span><span class="token punctuation">,</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>SS<span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'_blank'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> BOM<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span>        <span class="token string">"您未选中任何网页中的文字……\n\n\n『确定』进入问题反馈；『取消』即退出本工具。"</span>    <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>        BOM<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>            <span class="token string">"输入框中的是『运行环境』信息，请直接复制它们，按『确认』即可访问 原作者主页～"</span><span class="token punctuation">,</span>            navigator<span class="token punctuation">.</span>userAgent        <span class="token punctuation">)</span><span class="token punctuation">;</span>        BOM<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'http://www.fyscu.com/'</span><span class="token punctuation">,</span> <span class="token string">'_blank'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span>  BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>        <span class="token string">"【Google 中文搜索助手 v0.9】\n\n(C)2013-2014  四川大学·飞扬俱乐部·研发部"</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> top<span class="token punctuation">.</span>document<span class="token punctuation">,</span> <span class="token string">'zh-CN'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="为何还坚持-Google-？"><a href="#为何还坚持-Google-？" class="headerlink" title="为何还坚持 Google ？"></a>为何还坚持 Google ？</h2><ol><li><strong>棱镜门丑闻</strong>虽然揭露了<strong>美帝在国际互联网隐藏多年的大木马</strong>，Google 等业界典范也未能幸免…… 但一个<strong>世界最大的移民国家对自由执着的追求</strong>，让那些阴暗面总是不能得逞太久；而<strong>天朝的秘密</strong>大多都躺在几十年后还不一定能解密的档案中……</li><li><strong>百度</strong>这样一个<strong>唯利是图、没啥技术</strong>的搜索引擎，<strong>搜索结果中假冒伪劣、坑蒙拐骗丛生，人为和谐比比皆是</strong> —— 叫“中国黄页”还差不多~</li><li><strong>搜狐搜狗</strong>虽是<strong>中国大陆搜索引擎中最用心、最努力的</strong>，2010年和<strong>腾讯搜搜</strong>一样，接收了一些<strong>谷歌中国危机</strong>中跳槽的人才，2014年又全面合并人才储备不少的搜搜，加上<strong>搜狗输入法</strong>多年积累的<strong>语料数据、技术创新</strong>，已经很棒了~ 但个人近两年对它的持续使用发现 —— <strong>垃圾站屏蔽、小众站抓取</strong> 还有较大进步空间……</li><li><strong>奇虎360搜索</strong> 有点像当年 115搜索 等<strong>结果二次筛选</strong>的网站，虽然它一直力行用户体验第一的产品原则，但作为 3B大战的直接产物，加上360一直屡教不改的“<strong>流氓推广</strong>”方式，让我没法信任它提供的内容……</li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Google </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】移动 Web 前端开发 那些蛋疼事儿</title>
      <link href="/development/web-mobile-issues/"/>
      <url>/development/web-mobile-issues/</url>
      
        <content type="html"><![CDATA[<p><strong>移动 Web 前端开发的设备适配</strong> 现在有种“<strong>兼容老 IE</strong>”的蛋疼感…… 希望刚刚正式颁布的 <strong>HTML 5 标准</strong>可以让这种现在渐渐改变，而不是又一个“Web 噩梦时代”的开始……</p><p>以下是一些<strong>优秀参考文章</strong>的搜集，是<strong>本人肉眼过滤</strong>于 sogou.com；而非 URL 的条目则是 <strong>肉测心得</strong> ——</p><h2 id="响应式设计入门"><a href="#响应式设计入门" class="headerlink" title="响应式设计入门"></a>响应式设计入门</h2><ol><li><a href="http://www.cnblogs.com/vajoy/p/3903591.html" target="_blank" rel="noopener">http://www.cnblogs.com/vajoy/p/3903591.html</a></li><li><a href="http://jinjuan.me/webapp-share-zte/" target="_blank" rel="noopener">http://jinjuan.me/webapp-share-zte/</a></li></ol><h2 id="User-Agent（网页客户端-标识符）"><a href="#User-Agent（网页客户端-标识符）" class="headerlink" title="User Agent（网页客户端 标识符）"></a>User Agent（网页客户端 标识符）</h2><ul><li><a href="http://outofmemory.cn/code-snippet/1901/mobile-liulanqi-Us" target="_blank" rel="noopener">http://outofmemory.cn/code-snippet/1901/mobile-liulanqi-Us</a></li></ul><h2 id="Meta-Viewport-标签（移动设备适配元数据）"><a href="#Meta-Viewport-标签（移动设备适配元数据）" class="headerlink" title="Meta/Viewport 标签（移动设备适配元数据）"></a>Meta/Viewport 标签（移动设备适配元数据）</h2><ol><li><a href="http://sowm.cn/wpjam/article/5FBDBB430CC9E424299B61EC03BF5C42.html" target="_blank" rel="noopener">http://sowm.cn/wpjam/article/5FBDBB430CC9E424299B61EC03BF5C42.html</a></li><li><a href="http://wiki.eoeandroid.com/Targeting_Screens_from_Web_Apps" target="_blank" rel="noopener">http://wiki.eoeandroid.com/Targeting_Screens_from_Web_Apps</a></li><li><a href="http://wanglery.iteye.com/blog/1926747" target="_blank" rel="noopener">http://wanglery.iteye.com/blog/1926747</a></li><li><a href="http://www.cnblogs.com/stephenykk/p/3822441.html" target="_blank" rel="noopener">http://www.cnblogs.com/stephenykk/p/3822441.html</a></li></ol><h2 id="屏幕像素比"><a href="#屏幕像素比" class="headerlink" title="屏幕像素比"></a>屏幕像素比</h2><ul><li><a href="http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/</a></li></ul><h2 id="Target-DensityDPI（安卓中等屏幕专用）"><a href="#Target-DensityDPI（安卓中等屏幕专用）" class="headerlink" title="Target DensityDPI（安卓中等屏幕专用）"></a>Target DensityDPI（安卓中等屏幕专用）</h2><ul><li><a href="http://blog.csdn.net/fengri5566/article/details/9414599" target="_blank" rel="noopener">http://blog.csdn.net/fengri5566/article/details/9414599</a></li></ul><h2 id="WebView-怪癖（微信内置浏览器-等）"><a href="#WebView-怪癖（微信内置浏览器-等）" class="headerlink" title="WebView 怪癖（微信内置浏览器 等）"></a>WebView 怪癖（<strong><em>微信内置浏览器</em></strong> 等）</h2><ol><li><strong>JavaScript 动态设置 Viewport</strong> 时 <code>device-width</code> 无效，需手动指定 具体像素值（如 320）</li><li>其 <strong>device-dpi</strong> ≠ medium-dpi（设置无效），最佳效果是手动指定为 <code>medium-dpi</code></li><li><strong>Android</strong> 有些版本的 <strong>WebView 组件</strong>中 <code>&lt;input type=&quot;file&quot; /&gt;</code> 无效，它的调用从底层被拦截，在 JavaScript 层面无异常抛出，程序没被中断</li></ol><h2 id="position-fixed-大坑"><a href="#position-fixed-大坑" class="headerlink" title="position: fixed 大坑"></a>position: fixed 大坑</h2><ol><li><a href="https://github.com/maxzhang/maxzhang.github.com/issues/11" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues/11</a></li><li><a href="https://github.com/maxzhang/maxzhang.github.com/issues/2" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues/2</a></li><li><a href="https://github.com/maxzhang/maxzhang.github.com/issues/7" target="_blank" rel="noopener">https://github.com/maxzhang/maxzhang.github.com/issues/7</a></li></ol><h2 id="移动版网页布局技巧"><a href="#移动版网页布局技巧" class="headerlink" title="移动版网页布局技巧"></a>移动版网页布局技巧</h2><ol><li><a href="http://www.w3cplus.com/mobile/mobile-terminal-refactoring-mobile-layout.html" target="_blank" rel="noopener">http://www.w3cplus.com/mobile/mobile-terminal-refactoring-mobile-layout.html</a></li><li><a href="http://blog.csdn.net/hursing/article/details/9186199" target="_blank" rel="noopener">http://blog.csdn.net/hursing/article/details/9186199</a></li></ol><hr><h2 id="移动端网页调试-——-HTTP"><a href="#移动端网页调试-——-HTTP" class="headerlink" title="移动端网页调试 —— HTTP"></a>移动端网页调试 —— HTTP</h2><h3 id="公网（weinre-花生壳）"><a href="#公网（weinre-花生壳）" class="headerlink" title="公网（weinre + 花生壳）"></a>公网（weinre + 花生壳）</h3><ol><li><a href="http://www.cnblogs.com/lhb25/p/debug-mobile-site-and-app-with-weinre.html" target="_blank" rel="noopener">http://www.cnblogs.com/lhb25/p/debug-mobile-site-and-app-with-weinre.html</a></li><li><a href="http://segmentfault.com/q/1010000000941321" target="_blank" rel="noopener">http://segmentfault.com/q/1010000000941321</a></li><li><a href="http://service.oray.com/question/2480.html" target="_blank" rel="noopener">http://service.oray.com/question/2480.html</a></li></ol><h3 id="内网（UC-浏览器开发者版-WiFi）"><a href="#内网（UC-浏览器开发者版-WiFi）" class="headerlink" title="内网（UC 浏览器开发者版 + WiFi）"></a>内网（UC 浏览器开发者版 + WiFi）</h3><ol><li><a href="http://www.uc.cn/business/developer/" target="_blank" rel="noopener">http://www.uc.cn/business/developer/</a></li><li><a href="http://plus.uc.cn/document/webapp/doc5.html" target="_blank" rel="noopener">http://plus.uc.cn/document/webapp/doc5.html</a></li></ol><h3 id="内网（Firefox-42-WiFi）"><a href="#内网（Firefox-42-WiFi）" class="headerlink" title="内网（Firefox 42 + WiFi）"></a>内网（Firefox 42 + WiFi）</h3><ol><li><a href="https://developer.mozilla.org/zh-TW/docs/Tools/Remote_Debugging/Debugging_Firefox_for_Android_over_Wifi" target="_blank" rel="noopener">https://developer.mozilla.org/zh-TW/docs/Tools/Remote_Debugging/Debugging_Firefox_for_Android_over_Wifi</a></li></ol><hr><h2 id="线上网页-JS-日志"><a href="#线上网页-JS-日志" class="headerlink" title="线上网页 JS 日志"></a>线上网页 JS 日志</h2><ol><li><a href="http://jslogger.com" target="_blank" rel="noopener">http://jslogger.com</a></li></ol><hr><h2 id="触控事件的蛋疼"><a href="#触控事件的蛋疼" class="headerlink" title="触控事件的蛋疼"></a>触控事件的蛋疼</h2><ol><li><a href="http://select.yeeyan.org/view/213582/202991" target="_blank" rel="noopener">http://select.yeeyan.org/view/213582/202991</a></li><li><a href="http://www.cnblogs.com/pifoo/archive/2011/05/23/webkit-touch-event-1.html" target="_blank" rel="noopener">http://www.cnblogs.com/pifoo/archive/2011/05/23/webkit-touch-event-1.html</a></li><li><a href="http://www.aliued.cn/2013/04/27/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B9%8Btouch-event%E7%AF%87.html" target="_blank" rel="noopener">http://www.aliued.cn/2013/04/27/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B9%8Btouch-event%E7%AF%87.html</a></li><li><a href="http://www.web-tinker.com/article/20364.html" target="_blank" rel="noopener">http://www.web-tinker.com/article/20364.html</a></li></ol><h2 id="GPU-硬件加速渲染"><a href="#GPU-硬件加速渲染" class="headerlink" title="GPU 硬件加速渲染"></a>GPU 硬件加速渲染</h2><ol><li><a href="http://blog.bingo929.com/transform-translate3d-translatez-transition-gpu-hardware-acceleration.html" target="_blank" rel="noopener">http://blog.bingo929.com/transform-translate3d-translatez-transition-gpu-hardware-acceleration.html</a></li></ol><p>（绝对是 <strong>未完待续</strong>……）</p>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> mobile </tag>
            
            <tag> issue </tag>
            
            <tag> collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】Web 前端开发疑难</title>
      <link href="/development/web-front-end-issues/"/>
      <url>/development/web-front-end-issues/</url>
      
        <content type="html"><![CDATA[<p><strong>网页布局</strong> 方方面面<strong>疑难解答</strong>的优秀文章，由本人<strong>肉眼搜集</strong>于 sogou.com（按一般的<strong>技术学习路线</strong>排序；<strong>技术更迭，未完待续</strong>）——</p><h2 id="【CSS-盒模型】元素长宽计算与-padding、border-的关系"><a href="#【CSS-盒模型】元素长宽计算与-padding、border-的关系" class="headerlink" title="【CSS 盒模型】元素长宽计算与 padding、border 的关系"></a>【CSS 盒模型】元素长宽计算与 padding、border 的关系</h2><ol><li><a href="http://bbs.aau.cn/forum.php/?mod=viewthread&amp;tid=7398" target="_blank" rel="noopener">http://bbs.aau.cn/forum.php/?mod=viewthread&amp;tid=7398</a></li><li><a href="http://www.cnblogs.com/muyun/p/3567235.html" target="_blank" rel="noopener">http://www.cnblogs.com/muyun/p/3567235.html</a></li></ol><h2 id="【浏览器乱象】网页长宽属性"><a href="#【浏览器乱象】网页长宽属性" class="headerlink" title="【浏览器乱象】网页长宽属性"></a>【浏览器乱象】网页长宽属性</h2><ol><li><a href="http://blog.sina.com.cn/s/blog_48e6792c0100z7ge.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_48e6792c0100z7ge.html</a></li><li><a href="http://blog.csdn.net/u010200222/article/details/10948059" target="_blank" rel="noopener">http://blog.csdn.net/u010200222/article/details/10948059</a></li><li><a href="http://www.cnblogs.com/yesw/p/4259727.html" target="_blank" rel="noopener">http://www.cnblogs.com/yesw/p/4259727.html</a></li></ol><h2 id="【CSS】伪元素特性"><a href="#【CSS】伪元素特性" class="headerlink" title="【CSS】伪元素特性"></a>【CSS】伪元素特性</h2><ol><li><a href="http://www.cnblogs.com/oooweb/p/css-pseudo-element-before-and-after.html" target="_blank" rel="noopener">http://www.cnblogs.com/oooweb/p/css-pseudo-element-before-and-after.html</a></li><li><a href="http://www.hulufei.com/post/about-before-and-after-pseudo-element" target="_blank" rel="noopener">http://www.hulufei.com/post/about-before-and-after-pseudo-element</a></li></ol><h2 id="【CSS】content-属性用法详解"><a href="#【CSS】content-属性用法详解" class="headerlink" title="【CSS】content 属性用法详解"></a>【CSS】content 属性用法详解</h2><ol><li><a href="http://blog.dimpurr.com/css-before-after/" target="_blank" rel="noopener">http://blog.dimpurr.com/css-before-after/</a></li><li><a href="http://www.zhangxinxu.com/wordpress/2010/04/css-content%e5%86%85%e5%ae%b9%e7%94%9f%e6%88%90%e6%8a%80%e6%9c%af%e4%bb%a5%e5%8f%8a%e5%ba%94%e7%94%a8/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2010/04/css-content%e5%86%85%e5%ae%b9%e7%94%9f%e6%88%90%e6%8a%80%e6%9c%af%e4%bb%a5%e5%8f%8a%e5%ba%94%e7%94%a8/</a></li><li><a href="http://www.zhangxinxu.com/wordpress/2014/08/css-counters-automatic-number-content/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2014/08/css-counters-automatic-number-content/</a></li><li><a href="http://www.w3cplus.com/css3/css-counters.html" target="_blank" rel="noopener">http://www.w3cplus.com/css3/css-counters.html</a></li></ol><h2 id="【CSS】文本溢出显示省略号"><a href="#【CSS】文本溢出显示省略号" class="headerlink" title="【CSS】文本溢出显示省略号"></a>【CSS】文本溢出显示省略号</h2><ol><li><a href="http://www.cnblogs.com/lilyimage/p/3653864.html" target="_blank" rel="noopener">http://www.cnblogs.com/lilyimage/p/3653864.html</a></li></ol><h2 id="【CSS-盒模型】position、float-与-display-关系梳理"><a href="#【CSS-盒模型】position、float-与-display-关系梳理" class="headerlink" title="【CSS 盒模型】position、float 与 display 关系梳理"></a>【CSS 盒模型】position、float 与 display 关系梳理</h2><p><a href="http://www.cnblogs.com/coffeedeveloper/p/3145790.html" target="_blank" rel="noopener">http://www.cnblogs.com/coffeedeveloper/p/3145790.html</a></p><h2 id="【CSS-盒模型】内容、元素水平、垂直居中"><a href="#【CSS-盒模型】内容、元素水平、垂直居中" class="headerlink" title="【CSS 盒模型】内容、元素水平、垂直居中"></a>【CSS 盒模型】内容、元素水平、垂直居中</h2><ol><li><a href="http://www.qianduan.net/css-to-achieve-the-vertical-center-of-the-five-kinds-of-methods.html" target="_blank" rel="noopener">http://www.qianduan.net/css-to-achieve-the-vertical-center-of-the-five-kinds-of-methods.html</a></li><li><a href="http://www.zhangxinxu.com/wordpress/2010/10/%e6%88%91%e6%89%80%e7%9f%a5%e9%81%93%e7%9a%84%e5%87%a0%e7%a7%8ddisplaytable-cell%e7%9a%84%e5%ba%94%e7%94%a8/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2010/10/%e6%88%91%e6%89%80%e7%9f%a5%e9%81%93%e7%9a%84%e5%87%a0%e7%a7%8ddisplaytable-cell%e7%9a%84%e5%ba%94%e7%94%a8/</a></li></ol><h2 id="【CSS-盒模型】z-index-堆叠规则"><a href="#【CSS-盒模型】z-index-堆叠规则" class="headerlink" title="【CSS 盒模型】z-index 堆叠规则"></a>【CSS 盒模型】z-index 堆叠规则</h2><ol><li><a href="http://blog.doyoe.com/2014/01/21/css/%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84z-index%E4%B8%96%E7%95%8C/" target="_blank" rel="noopener">http://blog.doyoe.com/2014/01/21/css/%E4%BD%A0%E9%9C%80%E8%A6%81%E4%BA%86%E8%A7%A3%E7%9A%84z-index%E4%B8%96%E7%95%8C/</a></li></ol><h2 id="【CSS-3】IE-CSS-滤镜"><a href="#【CSS-3】IE-CSS-滤镜" class="headerlink" title="【CSS 3】IE CSS 滤镜"></a>【CSS 3】IE CSS 滤镜</h2><ol><li><a href="http://www.cnblogs.com/shiyangxt/archive/2008/11/16/1334633.html" target="_blank" rel="noopener">http://www.cnblogs.com/shiyangxt/archive/2008/11/16/1334633.html</a></li><li><a href="http://www.javascriptkit.com/filters/filters.shtml" target="_blank" rel="noopener">http://www.javascriptkit.com/filters/filters.shtml</a></li><li><a href="http://www.laoshu133.com/post/css_background_transparence.html?jdfwkey=ggieh1" target="_blank" rel="noopener">http://www.laoshu133.com/post/css_background_transparence.html?jdfwkey=ggieh1</a></li><li><a href="http://www.cnblogs.com/yushiro/archive/2008/11/26/1341219.html" target="_blank" rel="noopener">http://www.cnblogs.com/yushiro/archive/2008/11/26/1341219.html</a></li><li><a href="http://www.75team.com/archives/303" target="_blank" rel="noopener">http://www.75team.com/archives/303</a></li></ol><h2 id="【动态-CSS】JavaScript-操作-CSS-属性"><a href="#【动态-CSS】JavaScript-操作-CSS-属性" class="headerlink" title="【动态 CSS】JavaScript 操作 CSS 属性"></a>【动态 CSS】JavaScript 操作 CSS 属性</h2><ol><li><a href="http://www.cnblogs.com/flyjs/archive/2012/02/20/2360502.html" target="_blank" rel="noopener">http://www.cnblogs.com/flyjs/archive/2012/02/20/2360502.html</a></li><li><a href="http://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2012/05/getcomputedstyle-js-getpropertyvalue-currentstyle/</a></li></ol><h2 id="【动态-CSS】JavaScript-操作-CSS-规则"><a href="#【动态-CSS】JavaScript-操作-CSS-规则" class="headerlink" title="【动态 CSS】JavaScript 操作 CSS 规则"></a>【动态 CSS】JavaScript 操作 CSS 规则</h2><ol><li><a href="http://blog.csdn.net/renfufei/article/details/39085235" target="_blank" rel="noopener">http://blog.csdn.net/renfufei/article/details/39085235</a></li><li><a href="http://javascript.ruanyifeng.com/dom/css.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/dom/css.html</a></li><li><a href="http://robinqu.iteye.com/blog/461359" target="_blank" rel="noopener">http://robinqu.iteye.com/blog/461359</a></li><li><a href="http://www.alloyteam.com/2013/12/powerfuljs-1-to-operate-an-html-document-using-js/" target="_blank" rel="noopener">http://www.alloyteam.com/2013/12/powerfuljs-1-to-operate-an-html-document-using-js/</a></li></ol><h2 id="【DOM-特性】Attribute-与-Property"><a href="#【DOM-特性】Attribute-与-Property" class="headerlink" title="【DOM 特性】Attribute 与 Property"></a>【DOM 特性】Attribute 与 Property</h2><ol><li><a href="http://www.cnblogs.com/dolphinX/p/3348582.html" target="_blank" rel="noopener">http://www.cnblogs.com/dolphinX/p/3348582.html</a></li><li><a href="http://www.cnblogs.com/zhwl/p/3520162.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhwl/p/3520162.html</a></li></ol><h2 id="【DOM-兼容】innerText、textContent"><a href="#【DOM-兼容】innerText、textContent" class="headerlink" title="【DOM 兼容】innerText、textContent"></a>【DOM 兼容】innerText、textContent</h2><ol><li><a href="http://www.cnblogs.com/sniper007/archive/2012/04/24/2468175.html" target="_blank" rel="noopener">http://www.cnblogs.com/sniper007/archive/2012/04/24/2468175.html</a></li><li><a href="http://www.360doc.com/content/14/0414/16/15727046_368828277.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/14/0414/16/15727046_368828277.shtml</a></li></ol><h2 id="【DOM-兼容】动态创建元素"><a href="#【DOM-兼容】动态创建元素" class="headerlink" title="【DOM 兼容】动态创建元素"></a>【DOM 兼容】动态创建元素</h2><ol><li><a href="http://www.cnblogs.com/yizihan/p/4386431.html" target="_blank" rel="noopener">http://www.cnblogs.com/yizihan/p/4386431.html</a></li><li><a href="http://qbaok.blog.163.com/blog/static/101292652013022296590/" target="_blank" rel="noopener">http://qbaok.blog.163.com/blog/static/101292652013022296590/</a></li></ol><h2 id="【DOM-监控】Mutation-的-Event-与-Observer"><a href="#【DOM-监控】Mutation-的-Event-与-Observer" class="headerlink" title="【DOM 监控】Mutation 的 Event 与 Observer"></a>【DOM 监控】Mutation 的 Event 与 Observer</h2><ol><li><a href="http://www.cnblogs.com/rubylouvre/p/3192021.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/p/3192021.html</a></li><li><a href="http://www.cnblogs.com/rubylouvre/archive/2012/05/28/2520721.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/archive/2012/05/28/2520721.html</a></li><li><a href="http://chrisyip.github.io/post/mutation-events-and-mutationobserver/" target="_blank" rel="noopener">http://chrisyip.github.io/post/mutation-events-and-mutationobserver/</a></li><li><a href="http://javascript.ruanyifeng.com/dom/mutationobserver.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/dom/mutationobserver.html</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver</a></li></ol><h2 id="【浏览器数据流操作】JavaScript-转换-DataURL"><a href="#【浏览器数据流操作】JavaScript-转换-DataURL" class="headerlink" title="【浏览器数据流操作】JavaScript 转换 DataURL"></a>【浏览器数据流操作】JavaScript 转换 DataURL</h2><ol><li><a href="http://www.iunbug.com/archives/2012/06/05/254.html" target="_blank" rel="noopener">http://www.iunbug.com/archives/2012/06/05/254.html</a></li><li><a href="http://www.78oa.com/news/news727.html" target="_blank" rel="noopener">http://www.78oa.com/news/news727.html</a></li><li><a href="http://my.oschina.net/l3ve/blog/300097" target="_blank" rel="noopener">http://my.oschina.net/l3ve/blog/300097</a></li><li><a href="http://stackoverflow.com/questions/11335460/how-do-i-parse-a-data-url-in-node" target="_blank" rel="noopener">http://stackoverflow.com/questions/11335460/how-do-i-parse-a-data-url-in-node</a></li><li><a href="http://stackoverflow.com/questions/6926016/nodejs-saving-a-base64-encoded-image-to-disk" target="_blank" rel="noopener">http://stackoverflow.com/questions/6926016/nodejs-saving-a-base64-encoded-image-to-disk</a></li><li><a href="http://segmentfault.com/q/1010000000095621" target="_blank" rel="noopener">http://segmentfault.com/q/1010000000095621</a></li><li><a href="https://cnodejs.org/topic/4f939c84407edba2143c12f7" target="_blank" rel="noopener">https://cnodejs.org/topic/4f939c84407edba2143c12f7</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Using_files_from_web_applications" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Using_files_from_web_applications</a></li><li><a href="http://www.cnblogs.com/boychenney/archive/2011/10/08/2203036.html" target="_blank" rel="noopener">http://www.cnblogs.com/boychenney/archive/2011/10/08/2203036.html</a></li></ol><h2 id="【浏览器数据流操作】JavaScript-Base64-编解码"><a href="#【浏览器数据流操作】JavaScript-Base64-编解码" class="headerlink" title="【浏览器数据流操作】JavaScript Base64 编解码"></a>【浏览器数据流操作】JavaScript Base64 编解码</h2><ol><li><a href="http://qianduanblog.com/post/js-learning-34-en-decodeuri-en-decodeuricomponent-un-escape-btoa-atob.html" target="_blank" rel="noopener">http://qianduanblog.com/post/js-learning-34-en-decodeuri-en-decodeuricomponent-un-escape-btoa-atob.html</a></li><li><a href="http://www.cnblogs.com/rubylouvre/archive/2010/09/19/1829898.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/archive/2010/09/19/1829898.html</a></li></ol><h2 id="【浏览器数据流操作】JavaScript-二进制数据操作"><a href="#【浏览器数据流操作】JavaScript-二进制数据操作" class="headerlink" title="【浏览器数据流操作】JavaScript 二进制数据操作"></a>【浏览器数据流操作】JavaScript 二进制数据操作</h2><ol><li><a href="http://javascript.ruanyifeng.com/htmlapi/file.html" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/htmlapi/file.html</a></li><li><a href="http://javascript.ruanyifeng.com/stdlib/arraybuffer.html#toc7" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/stdlib/arraybuffer.html#toc7</a></li><li><a href="http://www.douban.com/note/225494734/" target="_blank" rel="noopener">http://www.douban.com/note/225494734/</a></li><li><a href="http://www.blogjava.net/jidebingfeng/articles/406171.html" target="_blank" rel="noopener">http://www.blogjava.net/jidebingfeng/articles/406171.html</a></li><li><a href="http://www.cnblogs.com/axes/p/4603984.html" target="_blank" rel="noopener">http://www.cnblogs.com/axes/p/4603984.html</a></li></ol><h2 id="【浏览器加密】window-crypto"><a href="#【浏览器加密】window-crypto" class="headerlink" title="【浏览器加密】window.crypto"></a>【浏览器加密】window.crypto</h2><ol><li><a href="http://blog.csdn.net/emu/article/details/39618297" target="_blank" rel="noopener">http://blog.csdn.net/emu/article/details/39618297</a></li><li><a href="http://www.cnblogs.com/rubylouvre/p/3462457.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/p/3462457.html</a></li></ol><h2 id="【浏览器乱象】键盘事件对象的-keyCode-属性"><a href="#【浏览器乱象】键盘事件对象的-keyCode-属性" class="headerlink" title="【浏览器乱象】键盘事件对象的 keyCode 属性"></a>【浏览器乱象】键盘事件对象的 keyCode 属性</h2><ol><li><a href="http://www.tychio.net/tech/2013/06/06/event-keycode.html" target="_blank" rel="noopener">http://www.tychio.net/tech/2013/06/06/event-keycode.html</a></li></ol><h2 id="【浏览器乱象】网页文档模式"><a href="#【浏览器乱象】网页文档模式" class="headerlink" title="【浏览器乱象】网页文档模式"></a>【浏览器乱象】网页文档模式</h2><ol><li><a href="http://blog.csdn.net/ennyhong/article/details/8330160" target="_blank" rel="noopener">http://blog.csdn.net/ennyhong/article/details/8330160</a></li><li><a href="http://blog.csdn.net/justremind/article/details/25913639" target="_blank" rel="noopener">http://blog.csdn.net/justremind/article/details/25913639</a></li><li><a href="http://www.oschina.net/translate/doctype" target="_blank" rel="noopener">http://www.oschina.net/translate/doctype</a></li></ol><h2 id="【浏览器乱象】Window-对象的识别"><a href="#【浏览器乱象】Window-对象的识别" class="headerlink" title="【浏览器乱象】Window 对象的识别"></a>【浏览器乱象】Window 对象的识别</h2><ol><li><a href="http://www.w3school.com.cn/jsref/dom_obj_window.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/jsref/dom_obj_window.asp</a></li><li><a href="http://www.cnblogs.com/rubylouvre/archive/2010/02/20/1669886.html" target="_blank" rel="noopener">http://www.cnblogs.com/rubylouvre/archive/2010/02/20/1669886.html</a></li></ol><h2 id="【浏览器乱象】鼠标事件兼容"><a href="#【浏览器乱象】鼠标事件兼容" class="headerlink" title="【浏览器乱象】鼠标事件兼容"></a>【浏览器乱象】鼠标事件兼容</h2><ol><li><a href="http://segmentfault.com/a/1190000002499967" target="_blank" rel="noopener">http://segmentfault.com/a/1190000002499967</a></li><li><a href="http://w3help.org/zh-cn/causes/BT9017" target="_blank" rel="noopener">http://w3help.org/zh-cn/causes/BT9017</a></li><li><a href="http://blog.csdn.net/ge_yulong/article/details/38924475" target="_blank" rel="noopener">http://blog.csdn.net/ge_yulong/article/details/38924475</a></li><li><a href="http://www.cnblogs.com/_franky/archive/2010/05/01/1725624.html" target="_blank" rel="noopener">http://www.cnblogs.com/_franky/archive/2010/05/01/1725624.html</a></li></ol><h2 id="【DOM-事件】事件模拟"><a href="#【DOM-事件】事件模拟" class="headerlink" title="【DOM 事件】事件模拟"></a>【DOM 事件】事件模拟</h2><ol><li><a href="http://web.jaxedit.com/post/2013/03/30/2990442.html" target="_blank" rel="noopener">http://web.jaxedit.com/post/2013/03/30/2990442.html</a></li></ol><h2 id="【HTML-5-API】鼠标拖拽"><a href="#【HTML-5-API】鼠标拖拽" class="headerlink" title="【HTML 5 API】鼠标拖拽"></a>【HTML 5 API】鼠标拖拽</h2><ol><li><a href="http://www.cnblogs.com/hooray/archive/2012/01/30/2331648.html" target="_blank" rel="noopener">http://www.cnblogs.com/hooray/archive/2012/01/30/2331648.html</a></li></ol><h2 id="【AJAX】跨域通信"><a href="#【AJAX】跨域通信" class="headerlink" title="【AJAX】跨域通信"></a>【AJAX】跨域通信</h2><ol><li><a href="https://segmentfault.com/a/1190000003642057" target="_blank" rel="noopener">https://segmentfault.com/a/1190000003642057</a></li><li><a href="http://segmentfault.com/a/1190000000702539" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000702539</a></li><li><a href="https://github.com/luics/storage/wiki/Storage" target="_blank" rel="noopener">https://github.com/luics/storage/wiki/Storage</a></li><li><a href="http://cssha.com/cross-domain-local-storage/" target="_blank" rel="noopener">http://cssha.com/cross-domain-local-storage/</a></li><li><a href="http://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains" target="_blank" rel="noopener">http://stackoverflow.com/questions/1653308/access-control-allow-origin-multiple-origin-domains</a></li><li><a href="http://blog.csdn.net/vivianhope/article/details/46581039" target="_blank" rel="noopener">http://blog.csdn.net/vivianhope/article/details/46581039</a></li><li><a href="http://www.tuicool.com/articles/3UBzIbb" target="_blank" rel="noopener">http://www.tuicool.com/articles/3UBzIbb</a></li><li><a href="http://my.oschina.net/blogshi/blog/303758" target="_blank" rel="noopener">http://my.oschina.net/blogshi/blog/303758</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS</a></li><li><a href="https://dev.opera.com/articles/dom-access-control-using-cors/" target="_blank" rel="noopener">https://dev.opera.com/articles/dom-access-control-using-cors/</a></li></ol><h2 id="【AJAX】跨域-XHR-兼容"><a href="#【AJAX】跨域-XHR-兼容" class="headerlink" title="【AJAX】跨域 XHR 兼容"></a>【AJAX】跨域 XHR 兼容</h2><ol><li><a href="http://segmentfault.com/a/1190000000702550" target="_blank" rel="noopener">http://segmentfault.com/a/1190000000702550</a></li><li><a href="http://www.vinqon.com/codeblog/?detail/11103" target="_blank" rel="noopener">http://www.vinqon.com/codeblog/?detail/11103</a></li><li><a href="http://www.w3cmm.com/ajax/xdomainrequest.html" target="_blank" rel="noopener">http://www.w3cmm.com/ajax/xdomainrequest.html</a></li><li><a href="https://msdn.microsoft.com/en-us/library/ie/cc288060(v=vs.85).aspx" target="_blank" rel="noopener">https://msdn.microsoft.com/en-us/library/ie/cc288060(v=vs.85).aspx</a></li><li><a href="http://blogs.msdn.com/b/ieinternals/archive/2009/07/23/the-ie8-native-xmlhttprequest-object.aspx" target="_blank" rel="noopener">http://blogs.msdn.com/b/ieinternals/archive/2009/07/23/the-ie8-native-xmlhttprequest-object.aspx</a></li></ol><h2 id="【HTML-5-API】历史记录-与-AJAX"><a href="#【HTML-5-API】历史记录-与-AJAX" class="headerlink" title="【HTML 5 API】历史记录 与 AJAX"></a>【HTML 5 API】历史记录 与 AJAX</h2><ol><li><a href="http://www.zhangxinxu.com/wordpress/2013/06/html5-history-api-pushstate-replacestate-ajax/" target="_blank" rel="noopener">http://www.zhangxinxu.com/wordpress/2013/06/html5-history-api-pushstate-replacestate-ajax/</a></li><li><a href="http://blog.csdn.net/tianyitianyi1/article/details/7426606" target="_blank" rel="noopener">http://blog.csdn.net/tianyitianyi1/article/details/7426606</a></li><li><a href="http://blog.csdn.net/fdipzone/article/details/8928202" target="_blank" rel="noopener">http://blog.csdn.net/fdipzone/article/details/8928202</a></li><li><a href="https://github.com/browserstate/history.js" target="_blank" rel="noopener">https://github.com/browserstate/history.js</a></li></ol><h2 id="【JSON-本地处理】JSON-对象方法的详细用法"><a href="#【JSON-本地处理】JSON-对象方法的详细用法" class="headerlink" title="【JSON 本地处理】JSON 对象方法的详细用法"></a>【JSON 本地处理】JSON 对象方法的详细用法</h2><ol><li><a href="http://www.cnblogs.com/mu-mu/p/3394475.html" target="_blank" rel="noopener">http://www.cnblogs.com/mu-mu/p/3394475.html</a></li><li><a href="http://www.cnblogs.com/anychem/archive/2012/04/02/2429785.html" target="_blank" rel="noopener">http://www.cnblogs.com/anychem/archive/2012/04/02/2429785.html</a></li><li><a href="http://www.cnblogs.com/damonlan/archive/2012/03/13/2394787.html" target="_blank" rel="noopener">http://www.cnblogs.com/damonlan/archive/2012/03/13/2394787.html</a></li></ol><h2 id="【JS-技巧】in-操作符"><a href="#【JS-技巧】in-操作符" class="headerlink" title="【JS 技巧】in 操作符"></a>【JS 技巧】in 操作符</h2><ol><li><a href="http://www.linuxfly.org/post/524/" target="_blank" rel="noopener">http://www.linuxfly.org/post/524/</a></li></ol><h2 id="【JS-技巧】类数组对象"><a href="#【JS-技巧】类数组对象" class="headerlink" title="【JS 技巧】类数组对象"></a>【JS 技巧】类数组对象</h2><ol><li><a href="http://www.cnblogs.com/littledu/archive/2012/05/19/2508672.html" target="_blank" rel="noopener">http://www.cnblogs.com/littledu/archive/2012/05/19/2508672.html</a></li><li><a href="http://www.zipeng.info/archives/js-array-like-obj.html" target="_blank" rel="noopener">http://www.zipeng.info/archives/js-array-like-obj.html</a></li><li><a href="http://www.cnblogs.com/fool/archive/2010/10/09/1846966.html" target="_blank" rel="noopener">http://www.cnblogs.com/fool/archive/2010/10/09/1846966.html</a></li><li><a href="http://www.zuojj.com/archives/218.html" target="_blank" rel="noopener">http://www.zuojj.com/archives/218.html</a></li><li><a href="http://blueion.iteye.com/blog/371861" target="_blank" rel="noopener">http://blueion.iteye.com/blog/371861</a></li></ol><h2 id="【JS-技巧】对象自定义属性的单独处理"><a href="#【JS-技巧】对象自定义属性的单独处理" class="headerlink" title="【JS 技巧】对象自定义属性的单独处理"></a>【JS 技巧】对象自定义属性的单独处理</h2><ol><li><a href="http://birdshome.cnblogs.com/archive/2005/06/24/GetExpandoAttributes.html" target="_blank" rel="noopener">http://birdshome.cnblogs.com/archive/2005/06/24/GetExpandoAttributes.html</a></li><li><a href="http://fsy0718.com/?p=36" target="_blank" rel="noopener">http://fsy0718.com/?p=36</a></li></ol><h2 id="【SVG】浏览器-JS-网页截图"><a href="#【SVG】浏览器-JS-网页截图" class="headerlink" title="【SVG】浏览器 JS 网页截图"></a>【SVG】浏览器 JS 网页截图</h2><ol><li><a href="http://www.raychase.net/1152" target="_blank" rel="noopener">http://www.raychase.net/1152</a></li><li><a href="http://www.webhek.com/drawwindow" target="_blank" rel="noopener">http://www.webhek.com/drawwindow</a></li><li><a href="https://github.com/niklasvh/html2canvas" target="_blank" rel="noopener">https://github.com/niklasvh/html2canvas</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Drawing_DOM_objects_into_a_canvas</a></li></ol><h2 id="【浏览器性能】JavaScript-函数调用降频"><a href="#【浏览器性能】JavaScript-函数调用降频" class="headerlink" title="【浏览器性能】JavaScript 函数调用降频"></a>【浏览器性能】JavaScript 函数调用降频</h2><ol><li><a href="http://www.webhek.com/function-debounce" target="_blank" rel="noopener">http://www.webhek.com/function-debounce</a></li></ol><h2 id="【Web-前端性能】"><a href="#【Web-前端性能】" class="headerlink" title="【Web 前端性能】"></a>【Web 前端性能】</h2><ul><li><a href="http://www.csdn.net/article/2013-09-23/2817020-web-performance-optimization" target="_blank" rel="noopener">http://www.csdn.net/article/2013-09-23/2817020-web-performance-optimization</a></li></ul><h2 id="【HTTP-协议】Header-标准"><a href="#【HTTP-协议】Header-标准" class="headerlink" title="【HTTP 协议】Header 标准"></a>【HTTP 协议】Header 标准</h2><ol><li><a href="http://www.cnblogs.com/shanyou/archive/2012/05/06/2486134.html" target="_blank" rel="noopener">http://www.cnblogs.com/shanyou/archive/2012/05/06/2486134.html</a></li><li><a href="http://kb.cnblogs.com/page/92320/" target="_blank" rel="noopener">http://kb.cnblogs.com/page/92320/</a></li><li><a href="https://imququ.com/post/vary-header-in-http.html" target="_blank" rel="noopener">https://imququ.com/post/vary-header-in-http.html</a></li></ol><h2 id="【HTTP-协议】缓存机制"><a href="#【HTTP-协议】缓存机制" class="headerlink" title="【HTTP 协议】缓存机制"></a>【HTTP 协议】缓存机制</h2><ol><li><a href="http://www.cnblogs.com/TankXiao/archive/2012/11/28/2793365.html" target="_blank" rel="noopener">http://www.cnblogs.com/TankXiao/archive/2012/11/28/2793365.html</a></li><li><a href="http://www.studyofnet.com/news/935.html" target="_blank" rel="noopener">http://www.studyofnet.com/news/935.html</a></li><li><a href="http://blog.csdn.net/crazyhacking/article/details/44497293" target="_blank" rel="noopener">http://blog.csdn.net/crazyhacking/article/details/44497293</a></li></ol><h2 id="【HTTP-协议】ETag-缓存头"><a href="#【HTTP-协议】ETag-缓存头" class="headerlink" title="【HTTP 协议】ETag 缓存头"></a>【HTTP 协议】ETag 缓存头</h2><ol><li><a href="http://blog.csdn.net/21aspnet/article/details/6604822" target="_blank" rel="noopener">http://blog.csdn.net/21aspnet/article/details/6604822</a></li><li><a href="http://blog.csdn.net/chenzhiqin20/article/details/10947857" target="_blank" rel="noopener">http://blog.csdn.net/chenzhiqin20/article/details/10947857</a></li></ol><h2 id="【实时通讯】HTTP-SSE"><a href="#【实时通讯】HTTP-SSE" class="headerlink" title="【实时通讯】HTTP SSE"></a>【实时通讯】HTTP SSE</h2><ol><li><a href="http://www.ituring.com.cn/tupubarticle/1408" target="_blank" rel="noopener">http://www.ituring.com.cn/tupubarticle/1408</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Development </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> issue </tag>
            
            <tag> collection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】Web 前端脚本文件响应式异步加载器（框架页兼容）</title>
      <link href="/programming/web-js-file-loader-iframe/"/>
      <url>/programming/web-js-file-loader-iframe/</url>
      
        <content type="html"><![CDATA[<p>我之前开源了<a href="/programming/Web-JS-file-loader/">【JavaScript 文件响应式异步加载器】v0.6</a>，用于在 Web 前端统一管理单页开发中的 JS 模块加载，方便、优雅、可靠。</p><p>但若要用框架页的模式来开发较为复杂的 Web 应用，统一管理父子页面的 JS、CSS 又是一件麻烦的事……</p><p>框架页是一种 HTML 模块化的基础技术，我们通常希望整个网页在视觉上浑然一体，而非被框架分割成一块又一块，所以不同的框架页通常使用同一套基础的 JS、CSS 脚本库。一般的做法是在每个框架页的 <code>&lt;head /&gt;</code> 中都硬编码上完全相同的基础库引用，虽然浏览器缓存会消除文件的重复下载，但 JS 代码会在每个框架页的上下文中再运行一遍，多消耗 N 倍的 CPU 执行时间、多占用 N 份相同大小的内存……</p><p>好在框架页之间有 Window 对象之间的引用，好在 JavaScript 的函数可以用 call/apply 方法轻松改变执行上下文</p><h2 id="框架页稳定版-v0-8"><a href="#框架页稳定版-v0-8" class="headerlink" title="框架页稳定版 v0.8"></a>框架页稳定版 v0.8</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//                >>>  EasyImport.js  &lt;&lt;&lt;</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Version]    v0.8  (2014-10-31)  Stable</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Usage]      Only for loading JavaScript files in All Kinds of Web,</span><span class="token comment" spellcheck="true">//                   with JS/CSS-Inherit support for Frames.</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//              (C)2013-2014    SCU FYclub-RDD</span><span class="token comment" spellcheck="true">//</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// ----------- Private Attribute ----------- //</span>    <span class="token keyword">var</span> UA <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">,</span>        RootPath<span class="token punctuation">,</span>  JS_List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  CallBack<span class="token punctuation">,</span> NameSpace <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        EIJS <span class="token operator">=</span> <span class="token punctuation">{</span>            AsyncJS<span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            DOM_Ready<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ----------- Inner Basic Member ----------- //</span>    <span class="token keyword">var</span> IE_Ver <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MSIE (\d+)\.\d/i</span><span class="token punctuation">)</span> <span class="token operator">||</span>                    UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Trident\/.+; rv:(\d+)\.\d/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    IE_Ver <span class="token operator">=</span> IE_Ver <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>IE_Ver<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">NaN</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> old_IE <span class="token operator">=</span> IE_Ver <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_Pad <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Tablet|Pad|Book|Android 3/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_Phone <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Phone|Touch|Symbian/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> is_Mobile <span class="token operator">=</span> is_Pad <span class="token operator">||</span> is_Phone <span class="token operator">||</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Mobile/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> DOM_E<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> CB_Func<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> DOM_E<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onreadystatechange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>DOM_E<span class="token punctuation">.</span>readyState<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/loaded|complete/</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                CB_Func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span>  DOM<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'DOMContentLoaded'</span><span class="token punctuation">,</span> _CB<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self <span class="token operator">!==</span> top<span class="token punctuation">)</span>            <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> _CB<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                DOM<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">doScroll</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                _CB<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>HTML_Elements<span class="token punctuation">,</span> TagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> HTML_Elements<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">NewTag</span><span class="token punctuation">(</span>TagName<span class="token punctuation">,</span> AttrList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> NE <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>AttrList<span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> AK <span class="token keyword">in</span> AttrList<span class="token punctuation">)</span>            NE<span class="token punctuation">[</span>AK<span class="token punctuation">]</span> <span class="token operator">=</span> AttrList<span class="token punctuation">[</span>AK<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> NE<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">PagePath_IE</span><span class="token punctuation">(</span>_BOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _PP <span class="token operator">=</span> _BOM<span class="token punctuation">.</span>document<span class="token punctuation">.</span>URL<span class="token punctuation">;</span>        _PP <span class="token operator">=</span> _PP<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>_PP<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">)</span> _PP<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _PP<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> _PP<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> DOM_Head <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> DOM_Title <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM_Head<span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _DOM <span class="token operator">=</span> parent<span class="token punctuation">.</span>document<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> Inherit_Root <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- Frame Inherit (JS) ----------- //</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>Inherit_Root <span class="token operator">||</span> <span class="token punctuation">(</span>self <span class="token operator">===</span> top<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//  Default NameSpaces (Offical Support Libraries)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> IE_Ver<span class="token punctuation">)</span>  NameSpace <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token punctuation">{</span> jQuery<span class="token punctuation">:</span>    <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token punctuation">{</span> $<span class="token punctuation">:</span>                <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jQuery</span><span class="token punctuation">(</span>                        arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                        <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>document                    <span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _NS<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> IE_Ver<span class="token punctuation">)</span> <span class="token punctuation">{</span>            _NS <span class="token operator">=</span> parent<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span><span class="token function">NS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _NS<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>__NS <span class="token keyword">in</span> _NS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> _NS_Shell <span class="token operator">=</span> _NS<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>__NS<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>_NS_Shell <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">var</span> _NS_ <span class="token operator">=</span> parent<span class="token punctuation">[</span>__NS<span class="token punctuation">]</span><span class="token punctuation">;</span>                        self<span class="token punctuation">[</span>__NS<span class="token punctuation">]</span> <span class="token operator">=</span> _NS_<span class="token punctuation">;</span>                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> _NS_Shell <span class="token operator">==</span> <span class="token string">'function'</span><span class="token punctuation">)</span>                        self<span class="token punctuation">[</span>__NS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>_NS_S<span class="token punctuation">)</span> <span class="token punctuation">{</span>                            <span class="token keyword">return</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                                <span class="token keyword">return</span>  _NS_S<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">}</span><span class="token punctuation">;</span>                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>_NS_Shell<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            _NS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> _SE <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span><span class="token function">$_TN</span><span class="token punctuation">(</span>_DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> JS_URL<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _SE<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                JS_URL <span class="token operator">=</span> _SE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>JS_URL <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span> JS_URL<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/EasyImport.*\.js/i</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span>                    JS_URL <span class="token operator">=</span> <span class="token function">PagePath_IE</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token operator">+</span> JS_URL<span class="token punctuation">;</span>                _NS<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>JS_URL<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            BOM<span class="token punctuation">.</span>onbeforeunload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">var</span> SE <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> SE<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                    SE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>SE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                SE <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                DOM<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                DOM<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                BOM<span class="token punctuation">.</span>onbeforeunload <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                BOM<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                top<span class="token punctuation">.</span><span class="token function">CollectGarbage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        NameSpace <span class="token operator">=</span> _NS<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- Frame Inherit (CSS) ----------- //</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span> Inherit_Root<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>self <span class="token operator">!==</span> top<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _LE <span class="token operator">=</span> _DOM<span class="token punctuation">.</span>styleSheets<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> CSS_URL<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> _LE<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>_LE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>rel<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'nofollow'</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token keyword">continue</span><span class="token punctuation">;</span>            CSS_URL <span class="token operator">=</span> _LE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span>                CSS_URL <span class="token operator">=</span> <span class="token function">PagePath_IE</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token operator">+</span> CSS_URL<span class="token punctuation">;</span>            DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>                _LE<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>old_IE <span class="token operator">?</span> <span class="token string">'owningElement'</span> <span class="token punctuation">:</span> <span class="token string">'ownerNode'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">.</span>href <span class="token operator">=</span> CSS_URL<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- Standard Mode Meta Patches ----------- //</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>is_Mobile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> old_IE<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> is_WeChat <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MicroMessenger/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                is_UCWeb <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/UCBrowser|UCWeb/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>                <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span>       <span class="token string">"viewport"</span><span class="token punctuation">,</span>                    content<span class="token punctuation">:</span>    <span class="token punctuation">[</span>                        <span class="token punctuation">[</span>                            <span class="token string">'width'</span><span class="token punctuation">,</span>                            <span class="token punctuation">(</span>is_WeChat <span class="token operator">||</span> is_UCWeb<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">320</span> <span class="token punctuation">:</span> <span class="token string">'device-width'</span>                        <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string">'initial-scale=1.0'</span><span class="token punctuation">,</span>                        <span class="token string">'target-densitydpi=medium-dpi'</span>                    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                DOM_Title            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span>  DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>            <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span>    <span class="token string">'MobileOptimized'</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span>    <span class="token number">320</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            DOM_Title        <span class="token punctuation">)</span><span class="token punctuation">;</span>        DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>            <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span>       <span class="token string">'HandheldFriendly'</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span>    <span class="token string">'true'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            DOM_Title        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver<span class="token punctuation">)</span>        DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>            <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                <span class="token string">'http-equiv'</span><span class="token punctuation">:</span>    <span class="token string">'X-UA-Compatible'</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span>         <span class="token string">'IE=Edge, Chrome=1'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            DOM_Title        <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ----------- Inner Logic Module ----------- //</span>    <span class="token keyword">function</span> <span class="token function">xImport</span><span class="token punctuation">(</span>JS_URL<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> SE <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">with</span> <span class="token punctuation">(</span>SE<span class="token punctuation">)</span> <span class="token punctuation">{</span>            type <span class="token operator">=</span> <span class="token string">'text/javascript'</span><span class="token punctuation">;</span>            charset <span class="token operator">=</span> <span class="token string">'UTF-8'</span><span class="token punctuation">;</span>            src <span class="token operator">=</span> JS_URL<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CB_Func<span class="token punctuation">)</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>SE<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>SE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>LQ<span class="token punctuation">,</span> RP<span class="token punctuation">,</span> FN<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> FN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^http(s)?:\/\//</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  FN <span class="token operator">=</span> RP <span class="token operator">+</span> FN<span class="token punctuation">;</span>        LQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> URL<span class="token punctuation">:</span>  FN <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RP<span class="token punctuation">,</span> List0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> List1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _URL<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span>                    <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> _Rule <span class="token operator">=</span> <span class="token punctuation">{</span>                        old_PC<span class="token punctuation">:</span>    old_IE<span class="token punctuation">,</span>                        Mobile<span class="token punctuation">:</span>    is_Mobile<span class="token punctuation">,</span>                        Phone<span class="token punctuation">:</span>     is_Phone<span class="token punctuation">,</span>                        Pad<span class="token punctuation">:</span>       is_Pad                    <span class="token punctuation">}</span><span class="token punctuation">,</span>  no_Break <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>RI <span class="token keyword">in</span> _Rule<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>_Rule<span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                            no_Break <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span>                            <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>no_Break <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span>                    <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> k<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> List1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> Item <span class="token operator">=</span> List<span class="token punctuation">[</span>Index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> AJSQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>AsyncJS<span class="token punctuation">;</span>            <span class="token keyword">var</span> AJS_NO <span class="token operator">=</span> AJSQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> AJS_CB <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>AJSQ<span class="token punctuation">[</span>AJS_NO<span class="token punctuation">]</span> <span class="token operator">==</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">)</span>                    Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">CallBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span>  <span class="token keyword">function</span> <span class="token function">TF_Import</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token function">xImport</span><span class="token punctuation">(</span>Item<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> AJS_CB<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> DRQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>DOM_Ready<span class="token punctuation">;</span>        <span class="token keyword">var</span> DRQ_NO <span class="token operator">=</span> DRQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> JS_RC<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">,</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    JS_RC<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>  Final_CB<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> Last_Script <span class="token operator">=</span> JS_RC<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">;</span>                    JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xImport</span><span class="token punctuation">(</span>Last_Script<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- Open API ----------- //</span>    BOM<span class="token punctuation">.</span>ImportJS <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> Func_Args <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span>            RootPath <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  RootPath <span class="token operator">=</span> <span class="token string">'./'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span>            JS_List <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  <span class="token keyword">throw</span> <span class="token string">"Format of Importing List isn't currect !"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'function'</span><span class="token punctuation">)</span>            CallBack <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  CallBack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span> IE_Ver<span class="token punctuation">)</span><span class="token punctuation">)</span>            NameSpace <span class="token operator">=</span> NameSpace<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver<span class="token punctuation">)</span> <span class="token punctuation">{</span>            JS_List <span class="token operator">=</span> NameSpace<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>JS_List<span class="token punctuation">)</span><span class="token punctuation">;</span>            NameSpace <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">var</span> JS_Item <span class="token operator">=</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RootPath<span class="token punctuation">,</span> JS_List<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">xImport</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span>UA <span class="token operator">=</span> <span class="token punctuation">{</span>        IE<span class="token punctuation">:</span>        <span class="token operator">!</span><span class="token operator">!</span> old_IE<span class="token punctuation">,</span>        Modern<span class="token punctuation">:</span>    <span class="token operator">!</span>  old_IE<span class="token punctuation">,</span>        Mobile<span class="token punctuation">:</span>    <span class="token operator">!</span><span class="token operator">!</span> is_Mobile<span class="token punctuation">,</span>        Pad<span class="token punctuation">:</span>       <span class="token operator">!</span><span class="token operator">!</span> is_Pad<span class="token punctuation">,</span>        Phone<span class="token punctuation">:</span>     <span class="token operator">!</span><span class="token operator">!</span> is_Phone    <span class="token punctuation">}</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span>NS <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> NameSpace<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
            <tag> module </tag>
            
            <tag> loader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【原创】JavaScript 文件响应式异步加载器（单页稳定版）</title>
      <link href="/programming/web-js-file-loader/"/>
      <url>/programming/web-js-file-loader/</url>
      
        <content type="html"><![CDATA[<p>我在做<a href="http://mag.fyscu.com" target="_blank" rel="noopener">《i飞扬》电子杂志 HTML5 在线版</a>的过程中，为了在不改变 <strong>Web 前端程序猿的编程思维习惯</strong>的前提下，保证整个 <strong>WebApp 的好用、可靠</strong>，自己开发了一个<strong>【JavaScript 文件响应式异步加载器】</strong>—— <a href="http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=4808" target="_blank" rel="noopener">EasyImport.js</a>。</p><p>开始只是一段放在 HTML <code>&lt;head /&gt;</code> 中的小脚本，没觉得是个多么复杂的东西。但随着应用的深入，要想做到上述自己定下的目标，<strong>代码不断地迭代</strong>，期间也因为严重的 Bug 而怀疑它的价值，所以有了后来的一次较大的局部重构。</p><p>但辛劳总会有收获 —— 个人更深刻地理解了 <strong>JavaScript</strong>、<strong>DOM</strong> 的一些细节，它本身也到了足够成熟的地步，作为几个<strong>线上实用项目的基础库</strong>，运行在很多人的浏览器中~</p><h2 id="v0-6（单页稳定版）"><a href="#v0-6（单页稳定版）" class="headerlink" title="v0.6（单页稳定版）"></a>v0.6（单页稳定版）</h2><p>这是 <strong>EasyImport.js 首个功能完备的稳定版</strong>，能给 <strong>单页应用</strong> 提供有力的<strong>异步加载、响应式适配</strong>支持，但不支持 <strong><code>&lt;iframe /&gt;</code> 子页面的 JS、CSS 继承</strong>（也就是说，它独立运行于每一个加载它的父/子页面中，不考虑关联页面的相互联系）。它将提供<strong>长期 Bug 修复的官方维护</strong>，后续版本与本版的公共代码也将同步更新，但不会再改变代码的整体结构。而子页面继承将在下个稳定版给予集成~</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//                >>>  EasyImport.js  &lt;&lt;&lt;</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Version]    v0.6  (2014-11-17)  Stable</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//      [Usage]      Only for loading JavaScript files in Single-Page Web,</span><span class="token comment" spellcheck="true">//                   no Inherit support for Frames.</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//              (C)2013-2014    SCU FYclub-RDD</span><span class="token comment" spellcheck="true">//</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> UA <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">,</span>        RootPath<span class="token punctuation">,</span>  JS_List<span class="token punctuation">,</span>  CallBack<span class="token punctuation">,</span>        EIJS <span class="token operator">=</span> <span class="token punctuation">{</span>            AsyncJS<span class="token punctuation">:</span>    <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            DOM_Ready<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ----------- Inner Basic Member ----------- //</span>    <span class="token keyword">var</span> is_IE <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MSIE (\d)|Trident[^\)]+rv:(\d+)/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_Webkit <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Webkit/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> IE_Ver <span class="token operator">=</span> is_IE <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>is_IE<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> is_IE<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">NaN</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> old_IE <span class="token operator">=</span> IE_Ver <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_Pad <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Tablet|Pad|Book|Android 3/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        is_Phone <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Phone|Touch|Android 2|Symbian/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> is_Mobile <span class="token operator">=</span> <span class="token punctuation">(</span>            is_Pad <span class="token operator">||</span> is_Phone <span class="token operator">||</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/Mobile/i</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/ PC /</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span> DOM_E<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> CB_Func<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> DOM_E<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span><span class="token string">'onreadystatechange'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>DOM_E<span class="token punctuation">.</span>readyState<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/loaded|complete/</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                CB_Func<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM_E<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>old_IE<span class="token punctuation">)</span>  DOM<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'DOMContentLoaded'</span><span class="token punctuation">,</span> _CB<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>self <span class="token operator">!==</span> top<span class="token punctuation">)</span>            <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> _CB<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                DOM<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span><span class="token function">doScroll</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                _CB<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>DOM<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>callee<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>HTML_Elements<span class="token punctuation">,</span> TagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> HTML_Elements<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">NewTag</span><span class="token punctuation">(</span>TagName<span class="token punctuation">,</span> AttrList<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> NE <span class="token operator">=</span> DOM<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>AttrList<span class="token punctuation">)</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> AK <span class="token keyword">in</span> AttrList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>AK <span class="token operator">==</span> <span class="token string">'class'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                NE<span class="token punctuation">.</span>className <span class="token operator">=</span> AttrList<span class="token punctuation">[</span>AK<span class="token punctuation">]</span><span class="token punctuation">;</span>            NE<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>AK<span class="token punctuation">,</span> AttrList<span class="token punctuation">[</span>AK<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> NE<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> DOM_Head <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> DOM_Title <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM_Head<span class="token punctuation">,</span> <span class="token string">'title'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ----------- Standard Mode Meta Patches ----------- //</span>    DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>        <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            <span class="token string">'http-equiv'</span><span class="token punctuation">:</span>    <span class="token string">'Window-Target'</span><span class="token punctuation">,</span>            content<span class="token punctuation">:</span>         <span class="token string">'_top'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>is_Mobile<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> old_IE<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> is_WeChat <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/MicroMessenger/i</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                is_UCWeb <span class="token operator">=</span> UA<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/UCBrowser|UCWeb/i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>                <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                    name<span class="token punctuation">:</span>       <span class="token string">"viewport"</span><span class="token punctuation">,</span>                    content<span class="token punctuation">:</span>    <span class="token punctuation">[</span>                        <span class="token punctuation">[</span>                            <span class="token string">'width'</span><span class="token punctuation">,</span>                            <span class="token punctuation">(</span>is_Phone <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>is_WeChat <span class="token operator">||</span> is_UCWeb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span>                                <span class="token number">320</span> <span class="token punctuation">:</span> <span class="token string">'device-width'</span>                        <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token string">'initial-scale=1.0'</span><span class="token punctuation">,</span>                        <span class="token string">'minimum-scale=1.0'</span><span class="token punctuation">,</span>                        <span class="token string">'target-densitydpi=medium-dpi'</span>                    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                DOM_Title            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span>  DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>            <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span>    <span class="token string">'MobileOptimized'</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span>    <span class="token number">320</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            DOM_Title        <span class="token punctuation">)</span><span class="token punctuation">;</span>        DOM_Head<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>            <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>                name<span class="token punctuation">:</span>       <span class="token string">'HandheldFriendly'</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span>    <span class="token string">'true'</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            DOM_Title        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>IE_Ver<span class="token punctuation">)</span>  DOM_Head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>        <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'meta'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            <span class="token string">'http-equiv'</span><span class="token punctuation">:</span>    <span class="token string">'X-UA-Compatible'</span><span class="token punctuation">,</span>            content<span class="token punctuation">:</span>         <span class="token string">'IE=Edge, Chrome=1'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// ----------- Inner Logic Module ----------- //</span>    <span class="token keyword">function</span> <span class="token function">xImport</span><span class="token punctuation">(</span>JS_URL<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> SE <span class="token operator">=</span> <span class="token function">NewTag</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>            type<span class="token punctuation">:</span>       <span class="token string">'text/javascript'</span><span class="token punctuation">,</span>            charset<span class="token punctuation">:</span>    <span class="token string">'UTF-8'</span><span class="token punctuation">,</span>            src<span class="token punctuation">:</span>        JS_URL        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CB_Func<span class="token punctuation">)</span> <span class="token function">DOM_Loaded_Event</span><span class="token punctuation">(</span>SE<span class="token punctuation">,</span> CB_Func<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'head'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>SE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">LI_Add</span><span class="token punctuation">(</span>LQ<span class="token punctuation">,</span> RP<span class="token punctuation">,</span> FN<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> FN<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^http(s)?:\/\//</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  FN <span class="token operator">=</span> RP <span class="token operator">+</span> FN<span class="token punctuation">;</span>        LQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> URL<span class="token punctuation">:</span>  FN <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RP<span class="token punctuation">,</span> List0<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> List1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> List0<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _URL<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span>                    <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> _Rule <span class="token operator">=</span> <span class="token punctuation">{</span>                        old_PC<span class="token punctuation">:</span>    old_IE<span class="token punctuation">,</span>                        Mobile<span class="token punctuation">:</span>    is_Mobile<span class="token punctuation">,</span>                        Phone<span class="token punctuation">:</span>     is_Phone<span class="token punctuation">,</span>                        Pad<span class="token punctuation">:</span>       is_Pad                    <span class="token punctuation">}</span><span class="token punctuation">,</span>  no_Break <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span>RI <span class="token keyword">in</span> _Rule<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>_Rule<span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                            no_Break <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span>                            <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>RI<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>no_Break <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span>                    <span class="token function">LI_Add</span><span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span> RP<span class="token punctuation">,</span> List0<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>new_PC<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>List1<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> k<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> List1<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> Item <span class="token operator">=</span> List<span class="token punctuation">[</span>Index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> AJSQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>AsyncJS<span class="token punctuation">;</span>            <span class="token keyword">var</span> AJS_NO <span class="token operator">=</span> AJSQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> AJS_CB <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>AJSQ<span class="token punctuation">[</span>AJS_NO<span class="token punctuation">]</span> <span class="token operator">==</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">)</span>                    Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">CallBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span>  <span class="token keyword">function</span> <span class="token function">TF_Import</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> Item<span class="token punctuation">.</span>length<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token function">xImport</span><span class="token punctuation">(</span>Item<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> AJS_CB<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> DRQ <span class="token operator">=</span> EIJS<span class="token punctuation">.</span>DOM_Ready<span class="token punctuation">;</span>        <span class="token keyword">var</span> DRQ_NO <span class="token operator">=</span> DRQ<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> JS_RC<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> k<span class="token operator">--</span><span class="token punctuation">,</span> l<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>Final_CB<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    JS_RC<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>  Final_CB<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">var</span> Last_Script <span class="token operator">=</span> JS_RC<span class="token punctuation">[</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">;</span>                    JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>iEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>DRQ<span class="token punctuation">[</span>DRQ_NO<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token function">xImport</span><span class="token punctuation">(</span>Last_Script<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">;</span>                    <span class="token function">DOM_Ready_Event</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  JS_RC<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'CallBack'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">CB_Set</span><span class="token punctuation">(</span>JS_RC<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- Open API ----------- //</span>    BOM<span class="token punctuation">.</span>ImportJS <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> Func_Args <span class="token operator">=</span> Array<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'string'</span><span class="token punctuation">)</span>            RootPath <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  RootPath <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DOM<span class="token punctuation">,</span> <span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>            <span class="token regex">/[^\/]*EasyImport[^\/]*\.js[^\/]*$/i</span><span class="token punctuation">,</span>  <span class="token string">''</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span>            JS_List <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  <span class="token keyword">throw</span> <span class="token string">"Format of Importing List isn't currect !"</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Func_Args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'function'</span><span class="token punctuation">)</span>            CallBack <span class="token operator">=</span> Func_Args<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>  CallBack <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> JS_Item <span class="token operator">=</span> <span class="token function">SL_Set</span><span class="token punctuation">(</span>RootPath<span class="token punctuation">,</span> JS_List<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token function">CB_Chain</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">xImport</span><span class="token punctuation">(</span>JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>URL<span class="token punctuation">,</span> JS_Item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    BOM<span class="token punctuation">.</span>ImportJS<span class="token punctuation">.</span>UA <span class="token operator">=</span> <span class="token punctuation">{</span>        IE<span class="token punctuation">:</span>        <span class="token operator">!</span><span class="token operator">!</span> old_IE<span class="token punctuation">,</span>        Modern<span class="token punctuation">:</span>    <span class="token operator">!</span>  old_IE<span class="token punctuation">,</span>        Mobile<span class="token punctuation">:</span>    <span class="token operator">!</span><span class="token operator">!</span> is_Mobile<span class="token punctuation">,</span>        Pad<span class="token punctuation">:</span>       <span class="token operator">!</span><span class="token operator">!</span> is_Pad<span class="token punctuation">,</span>        Phone<span class="token punctuation">:</span>     <span class="token operator">!</span><span class="token operator">!</span> is_Phone    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="【平台支持】"><a href="#【平台支持】" class="headerlink" title="【平台支持】"></a>【平台支持】</h2><ul><li>主流内核浏览器：IE 7~11、Firefox 3+、Chrome、Safari、Opera</li><li>国产马甲浏览器：傲游 2+、枫树、搜狗高速 3+、360安全/极速、猎豹、QQ 等（还可能有个别奇葩 Bug，恕无力一一测试……）</li><li>Android、iOS、Windows Phone、Symbian 等智能设备平台上的自带浏览器及其内核控件</li></ul><h2 id="【主要特性】"><a href="#【主要特性】" class="headerlink" title="【主要特性】"></a>【主要特性】</h2><ol><li>替代 <code>&lt;script /&gt;</code> 加载 HTML 页面中<strong>所有外置、内置 JavaScript 脚本</strong>，但不改变原有“<strong>顺序即依赖</strong>”的前端编程习惯，且书写形式比原来更简洁</li><li>所有外置脚本都可写在 <code>&lt;head /&gt;</code> 中，但却能与整个页面的其它部分<strong>并行加载</strong>，<strong>代码结构清晰</strong>而又<strong>高性能</strong></li><li>最后一段脚本（无论内置回调、外置脚本）自动在 <strong>DOM Ready</strong> 后加载/执行，既靠谱又方便（<code>$(document).ready(function () {});</code> 之类的大包装可以完全不需要了）</li><li>无依赖的部分外置脚本只需用 <code>[]</code>（数组字面量）括起来就可以<strong>异步加载</strong></li><li>外置脚本可以根据浏览器平台类型<strong>选择性加载</strong>，模块化管理 JavaScript</li><li><strong>移动设备浏览器布局模式自适配</strong>：添加其适用的各种 <code>&lt;meta /&gt;</code> 标签，让网页源码以标准而通用的简洁思维编写，自然地实施<strong>响应式设计</strong></li><li>浏览器级的 <code>&lt;iframe /&gt;</code> 套用防御</li></ol><h2 id="【典型案例】"><a href="#【典型案例】" class="headerlink" title="【典型案例】"></a>【典型案例】</h2><p><a href="http://mag.fyscu.com/iWB/iBookView.php?name=iFY&amp;index=19" target="_blank" rel="noopener">http://mag.fyscu.com/iWB/iBookView.php?name=iFY&amp;index=19</a></p><p>以下<strong>示例代码</strong>摘抄自上述网页的 HTML 源码 ——</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./Libs/EasyImport.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token function">ImportJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token punctuation">{</span>        old_PC<span class="token punctuation">:</span> <span class="token string">'jQuery.js'</span><span class="token punctuation">,</span>        new_PC<span class="token punctuation">:</span> <span class="token string">'jQuery2.js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token punctuation">{</span>        old_PC<span class="token punctuation">:</span> <span class="token string">'Turn.HTML4.js'</span><span class="token punctuation">,</span>        new_PC<span class="token punctuation">:</span> <span class="token string">'Turn.js'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string">'Smooth_Scroll.js'</span><span class="token punctuation">,</span>    <span class="token string">'jPlayer.js'</span><span class="token punctuation">,</span>    <span class="token string">'jQuery.Hammer.js'</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        old_PC<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        new_PC<span class="token punctuation">:</span> <span class="token string">'jQuery.PageZoomer.js'</span><span class="token punctuation">,</span>        Mobile<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>        new_PC<span class="token punctuation">:</span>    <span class="token string">'Hover_Scroll.js'</span><span class="token punctuation">,</span>        Mobile<span class="token punctuation">:</span>    <span class="token boolean">false</span>    <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">'FY_iWeBook.js'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#iWB'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iWeBook</span><span class="token punctuation">(</span><span class="token string">'#jPlayer_Box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> duoshuoQuery<span class="token operator">=</span> <span class="token punctuation">{</span>short_name<span class="token punctuation">:</span><span class="token string">'fyscu'</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token function">ImportJS</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'http://static.duoshuo.com/embed.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h2 id="【参考文章】"><a href="#【参考文章】" class="headerlink" title="【参考文章】"></a>【参考文章】</h2><ol><li><a href="http://sunnylost.com/article/js.load.scripts.sequence.html" target="_blank" rel="noopener">http://sunnylost.com/article/js.load.scripts.sequence.html</a></li><li><a href="http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=4808" target="_blank" rel="noopener">http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=4808</a></li><li><a href="http://www.cnblogs.com/pigtail/archive/2013/03/15/2961631.html" target="_blank" rel="noopener">http://www.cnblogs.com/pigtail/archive/2013/03/15/2961631.html</a></li><li><a href="http://www.uiej.com/960.html" target="_blank" rel="noopener">http://www.uiej.com/960.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
            <tag> module </tag>
            
            <tag> loader </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【网页重构】CSS 规则清理（浏览器 BookMarkLet、FireBug 插件）</title>
      <link href="/programming/css-rule-cleaner/"/>
      <url>/programming/css-rule-cleaner/</url>
      
        <content type="html"><![CDATA[<p>很多程序猿认为 —— <strong>最蛋疼的工作不在于重写或创新，而是“修改前任程序猿留下的代码”……</strong></p><p>对<strong>前端工程师</strong>来说，若不进行彻底的<strong>网页重构</strong>，而只是修补现有网页的代码（多是之前由 <strong>后端工程师</strong> 乃至 <strong>只会点儿 DreamWeaver 的运维网管</strong> 写的），再加上浏览器兼容性的工作特性（特别是 <strong>IE 8-</strong>），简直是“英年早逝”的节奏……</p><p>你能想象一个 HTML 文件中全是大量<em>乱七八糟、东拼西凑</em>的 标签结构 和 CSS 规则 吗？不仅如此，<code>&lt;link rel=&quot;stylesheet&quot; /&gt;</code>、<code>&lt;style /&gt;</code>、<code>&lt;script /&gt;</code> 也是随时随地出现；很多 HTML 元素都由不止一个 CSS 文件中的多个毫无逻辑联系的规则 叠加影响；文件命名、目录结构也超乱…… <strong>“大海捞针”、“牵一发而动全身”</strong>便是再贴切不过的形容了……</p><p>若能用工具清理一遍 CSS，那我们的工作就搞定一半了～</p><h2 id="原创小工具"><a href="#原创小工具" class="headerlink" title="原创小工具"></a>原创小工具</h2><p>这里先分享一下我原创的一个 <strong>BookMarkLet</strong> 形式的 <a href="http://gitee.com/Tech_Query/iBookmarkLet" target="_blank" rel="noopener"><strong>网页 CSS 规则使用率检测工具</strong></a> ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>BOM<span class="token punctuation">,</span> DOM<span class="token punctuation">,</span> $<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> CSS_File <span class="token operator">=</span> DOM<span class="token punctuation">.</span>styleSheets<span class="token punctuation">,</span>        CopyRight <span class="token operator">=</span> <span class="token string">'(C)2014-2015  test_32@fyscu.com'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> $<span class="token punctuation">)</span> <span class="token punctuation">{</span>        BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>            <span class="token string">'Please run This Tool in IE 8+ (Standard Mode) or a Modern Web Browser.'</span> <span class="token operator">+</span> <span class="token string">"\n\n"</span> <span class="token operator">+</span>            CopyRight        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> console<span class="token punctuation">)</span> <span class="token punctuation">{</span>        BOM<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>            <span class="token string">'Please run This Tool with JavaScript Console opened.'</span> <span class="token operator">+</span> <span class="token string">"\n\n"</span> <span class="token operator">+</span>            CopyRight        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">URL_Path</span><span class="token punctuation">(</span>URL<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> URL<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^\w+:\/\//</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            URL <span class="token operator">=</span> URL<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            URL<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            URL <span class="token operator">=</span> URL<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> URL<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">SelectorCheck</span><span class="token punctuation">(</span>Selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Selector <span class="token operator">=</span> Selector<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> _NU_ <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  k <span class="token operator">&lt;</span> Selector<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  k<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">$</span><span class="token punctuation">(</span> Selector<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>                _NU_<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Selector<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> _NU_<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">CSS_Rule_Each</span><span class="token punctuation">(</span>CSS_Rule_Group<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span>  CSS_Rule <span class="token operator">=</span> CSS_Rule_Group<span class="token punctuation">.</span>cssRules <span class="token operator">||</span> CSS_Rule_Group<span class="token punctuation">.</span>rules<span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>        <span class="token keyword">var</span> Selector <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span>            NoUsage <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>            Test_Result <span class="token operator">=</span> <span class="token punctuation">{</span>                media<span class="token punctuation">:</span>         CSS_Rule_Group<span class="token punctuation">.</span>media<span class="token punctuation">.</span>mediaText<span class="token punctuation">,</span>                mediaRules<span class="token punctuation">:</span>    <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>                fontsRules<span class="token punctuation">:</span>    <span class="token punctuation">[</span> <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>CSS_Rule<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _Rule_<span class="token punctuation">;</span>  j <span class="token operator">&lt;</span> CSS_Rule<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                _Rule_ <span class="token operator">=</span> CSS_Rule<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>_Rule_<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//  CSSStyleRule</span>                        _Rule_ <span class="token operator">=</span> <span class="token function">SelectorCheck</span><span class="token punctuation">(</span>_Rule_<span class="token punctuation">.</span>selectorText<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>_Rule_<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  NoUsage<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>_Rule_<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">//  CSSMediaRule</span>                        Test_Result<span class="token punctuation">.</span>mediaRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span> arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>_Rule_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true">//  CSSFontFaceRule</span>                        Test_Result<span class="token punctuation">.</span>fontsRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                            fontFamily<span class="token punctuation">:</span>    _Rule_<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontFamily<span class="token punctuation">,</span>                            src<span class="token punctuation">:</span>           _Rule_<span class="token punctuation">.</span>style<span class="token punctuation">.</span>src                        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            Test_Result<span class="token punctuation">.</span>WasteRate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>NoUsage<span class="token punctuation">.</span>length <span class="token operator">/</span> j<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span>Test_Result<span class="token punctuation">,</span> NoUsage<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _File_<span class="token punctuation">,</span> _Result_ <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>  i <span class="token operator">&lt;</span> CSS_File<span class="token punctuation">.</span>length<span class="token punctuation">;</span>  i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        _Result_<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">CSS_Rule_Each</span><span class="token punctuation">(</span>CSS_File<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> _File_ <span class="token operator">=</span> _Result_<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        _File_<span class="token punctuation">.</span>href <span class="token operator">=</span> CSS_File<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>_File_<span class="token punctuation">.</span>WasteRate <span class="token operator">&amp;&amp;</span> _File_<span class="token punctuation">.</span>href<span class="token punctuation">)</span>            _File_<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token function">URL_Path</span><span class="token punctuation">(</span>_File_<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span>        _File_<span class="token punctuation">.</span>element <span class="token operator">=</span> CSS_File<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ownerNode<span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_File_<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_Result_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>  self<span class="token punctuation">.</span>document<span class="token punctuation">,</span>  self<span class="token punctuation">.</span>document<span class="token punctuation">.</span>querySelectorAll<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="安装版代码"><a href="#安装版代码" class="headerlink" title="安装版代码"></a>安装版代码</h3><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^\w+:\/\//</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>a<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token punctuation">,</span>d<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">,</span>b<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>d<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>d<span class="token operator">&lt;</span>a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>d<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">c</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">||</span>b<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>d<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> b<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> b<span class="token punctuation">,</span>e<span class="token punctuation">,</span>f<span class="token punctuation">,</span>i<span class="token punctuation">,</span>h<span class="token punctuation">;</span><span class="token keyword">try</span><span class="token punctuation">{</span>b<span class="token operator">=</span>a<span class="token punctuation">.</span>cssRules<span class="token operator">||</span>a<span class="token punctuation">.</span>rules<span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>e<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>f<span class="token operator">=</span><span class="token punctuation">{</span>media<span class="token punctuation">:</span>a<span class="token punctuation">.</span>media<span class="token punctuation">.</span>mediaText<span class="token punctuation">,</span>mediaRules<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>fontsRules<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span>h<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>h<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>h<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">switch</span><span class="token punctuation">(</span>i<span class="token operator">=</span>b<span class="token punctuation">[</span>h<span class="token punctuation">]</span><span class="token punctuation">,</span>i<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>i<span class="token operator">=</span><span class="token function">g</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>selectorText<span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>mediaRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arguments<span class="token punctuation">.</span><span class="token function">callee</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>fontsRules<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>fontFamily<span class="token punctuation">:</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fontFamily<span class="token punctuation">,</span>src<span class="token punctuation">:</span>i<span class="token punctuation">.</span>style<span class="token punctuation">.</span>src<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>f<span class="token punctuation">.</span>WasteRate<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>length<span class="token operator">/</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">[</span>f<span class="token punctuation">,</span>e<span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">var</span> j<span class="token punctuation">,</span>i<span class="token punctuation">,</span>k<span class="token punctuation">,</span>d<span class="token operator">=</span>b<span class="token punctuation">.</span>styleSheets<span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token string">"(C)2014-2015  test_32@fyscu.com"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>c<span class="token punctuation">)</span><span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Please run This Tool in IE 8+ (Standard Mode) or a Modern Web Browser.\n\n"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>console<span class="token punctuation">)</span><span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Please run This Tool with JavaScript Console opened.\n\n"</span><span class="token operator">+</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>d<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">h</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token operator">=</span>k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token punctuation">.</span>href<span class="token operator">=</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>href<span class="token punctuation">,</span>j<span class="token punctuation">.</span>WasteRate<span class="token operator">&amp;&amp;</span>j<span class="token punctuation">.</span>href<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token function">f</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>j<span class="token punctuation">.</span>element<span class="token operator">=</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>ownerNode<span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>self<span class="token punctuation">.</span>document<span class="token punctuation">,</span>self<span class="token punctuation">.</span>document<span class="token punctuation">.</span>querySelectorAll<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="工具特性"><a href="#工具特性" class="headerlink" title="工具特性"></a>工具特性</h3><ol><li><strong>扫描当前网页中所有内置/外置的 CSS，在控制台显示各 CSS 标签/文件中哪些规则对本页无用、共占比多少</strong></li><li>外置 CSS 会显示<strong>文件相对路径</strong></li><li>内置 CSS 会显示其对应的 HTML 元素，便于<strong>在调试器显示的 DOM 树上定位</strong></li><li><strong>CSS 媒体查询、字体</strong>的规则会在显示的对象中有独立分支</li><li>暂不支持 CSS 选择符中间有 <strong>伪类、伪元素</strong>的情况，只支持它们出现在 选择符链的最后端（这是与下文提及的专业工具之<strong>有效比计算</strong>有误差的主要原因）</li><li><strong>跨域的 CSS 文件</strong>无法扫描（它们一般都是 <strong>CDN 通用库</strong> 或 部署环境中的<strong>静态文件服务器</strong>托管的压缩版，本来就不是用于调试的）</li></ol><h2 id="FireBug-插件-——-CSS-Usage"><a href="#FireBug-插件-——-CSS-Usage" class="headerlink" title="FireBug 插件 —— CSS Usage"></a>FireBug 插件 —— CSS Usage</h2><p>现在比较成熟的 <strong>CSS 有效性检查工具</strong> 当属 <code>CSS Usage</code> 了，它不仅能用彩色的富文本显示每个 CSS 标签/文件中<strong>每条规则在当前网页中的使用率</strong>，还能<strong>生成过滤后的 CSS 文本</strong>，可以直接复制粘贴到代码编辑器中保存、使用～</p><p>至于它的安装，和 FireBug 一样，在 <strong>FireFox</strong> 的<strong>附加组件</strong>管理界面中搜索、下载、安装、重启，在 FireBug 主界面上端的选项卡最后就能看到它了～</p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【JavaScript 进阶】面向对象编程与 jQuery 式 API 的实现</title>
      <link href="/programming/javascript-oop-jquery-api/"/>
      <url>/programming/javascript-oop-jquery-api/</url>
      
        <content type="html"><![CDATA[<p><strong>JavaScript 简洁、灵活，jQuery 优雅、强大</strong> —— 它们共同开拓了新的思维方式，影响了一代程序员和他们的 Web 前端开源项目，这是毋庸置疑的~</p><p>要想让它们的简洁、灵活、优雅、强大为我所用，内化为编程上的精神法宝，亲手“临摹”一下既有趣又有力。一番死磕之后，jQuery 中蕴含的 <strong>JavaScript 面向对象的思想方法</strong> 自然就很容易理解了~</p><h2 id="山寨版-jQuery-半成品"><a href="#山寨版-jQuery-半成品" class="headerlink" title="山寨版 jQuery 半成品"></a>山寨版 jQuery 半成品</h2><p>目前仅简单地实现了<strong>最常用的选择器</strong>（标签、ID、类、first/last/only/nth-child 伪类）、<strong>选择器上下文</strong>、<strong>最常用的 jQuery 对象方法</strong>（each、find、on、off 等）、<strong>连缀语法</strong>等 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// ----------- xDOM  Core Object ----------- //</span><span class="token keyword">function</span> <span class="token function">DOMxx</span><span class="token punctuation">(</span>Selector<span class="token punctuation">,</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>xDOM <span class="token operator">=</span> <span class="token string">'0.5'</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>jquery <span class="token operator">=</span> <span class="token string">'1.9.0'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//  Work with the version of jQuery API</span>    <span class="token comment" spellcheck="true">// ----------- Atom Functions (Private Method) ----------- //</span>    <span class="token keyword">function</span> <span class="token function">Each</span><span class="token punctuation">(</span>Object<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> Object<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!=</span> <span class="token string">'length'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">var</span> _RV_ <span class="token operator">=</span> CallBack<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>                Object<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> key <span class="token punctuation">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>_RV_ <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">inArray</span><span class="token punctuation">(</span>Value<span class="token punctuation">,</span> iArray<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> iArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>iArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> Value<span class="token punctuation">)</span>  <span class="token keyword">return</span> i<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">Child_PC</span><span class="token punctuation">(</span>EOS<span class="token punctuation">,</span> PCS<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> PES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> CES <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">Each</span><span class="token punctuation">(</span>EOS<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">inArray</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">,</span> PES<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                PES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>parentNode<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> PCS_KW <span class="token operator">=</span> PCS<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^(\\w+)-child/i</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>PCS_KW <span class="token operator">==</span> <span class="token string">'nth'</span><span class="token punctuation">)</span>            <span class="token keyword">var</span> PCS_EC <span class="token operator">=</span> PCS<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/^nth-child\\((.+)\\)/i</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">Each</span><span class="token punctuation">(</span>PES<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            EOS <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>children<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> EOS<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token keyword">switch</span> <span class="token punctuation">(</span>PCS_KW<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">case</span> <span class="token string">'first'</span><span class="token punctuation">:</span>    <span class="token punctuation">{</span>                    CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">case</span> <span class="token string">'last'</span><span class="token punctuation">:</span>     <span class="token punctuation">{</span>                    CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span>EOS<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">case</span> <span class="token string">'only'</span><span class="token punctuation">:</span>     <span class="token punctuation">{</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>EOS<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>                        CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">case</span> <span class="token string">'nth'</span><span class="token punctuation">:</span>      <span class="token punctuation">{</span>                    PCS_EC <span class="token operator">=</span> PCS_EC<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/(\d+)(\w|\()/g</span><span class="token punctuation">,</span> <span class="token string">'$1 * $2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> N <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                        N <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span>PCS_EC<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span>N <span class="token operator">>=</span> EOS<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                        CES<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>EOS<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> CES<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">$_Atom</span><span class="token punctuation">(</span>REO<span class="token punctuation">,</span> SE<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SE <span class="token operator">=</span> SE<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>SE<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">var</span> PC <span class="token operator">=</span> SE<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        SE <span class="token operator">=</span> SE<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span>SE<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">case</span> <span class="token string">'#'</span><span class="token punctuation">:</span>    <span class="token punctuation">{</span>                REO <span class="token operator">=</span> self<span class="token punctuation">.</span>document<span class="token punctuation">;</span>                MN <span class="token operator">=</span> <span class="token string">'getElementById'</span><span class="token punctuation">;</span>                SE <span class="token operator">=</span> SE<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">case</span> <span class="token string">'.'</span><span class="token punctuation">:</span>    <span class="token punctuation">{</span>                MN <span class="token operator">=</span> <span class="token string">'getElementsByClassName'</span><span class="token punctuation">;</span>                SE <span class="token operator">=</span> SE<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">case</span> <span class="token string">'*'</span><span class="token punctuation">:</span>    <span class="token punctuation">;</span>            <span class="token keyword">default</span><span class="token punctuation">:</span>     MN <span class="token operator">=</span> <span class="token string">'getElementsByTagName'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        REO <span class="token operator">=</span> REO<span class="token punctuation">[</span>MN<span class="token punctuation">]</span><span class="token punctuation">(</span>SE<span class="token punctuation">)</span><span class="token punctuation">;</span>        REO <span class="token operator">=</span> PC <span class="token operator">?</span> <span class="token function">Child_PC</span><span class="token punctuation">(</span>REO<span class="token punctuation">,</span> PC<span class="token punctuation">)</span> <span class="token punctuation">:</span> REO<span class="token punctuation">;</span>        <span class="token keyword">return</span>  <span class="token punctuation">(</span><span class="token operator">!</span> REO<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">[</span>REO<span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>            <span class="token punctuation">(</span>REO <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token operator">?</span> REO <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>REO<span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">Select</span><span class="token punctuation">(</span>Selector<span class="token punctuation">,</span> Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> Selector_Group <span class="token operator">=</span> Selector<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  Level <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>            Select_Result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">Each</span><span class="token punctuation">(</span>            <span class="token function">$_Atom</span><span class="token punctuation">(</span> Context<span class="token punctuation">,</span> Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">function</span> <span class="token punctuation">(</span>Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> Index<span class="token punctuation">)</span> Level<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token keyword">while</span> <span class="token punctuation">(</span>Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">''</span><span class="token punctuation">)</span>                    Level<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    Select_Result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token keyword">this</span><span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length<span class="token punctuation">)</span>  <span class="token keyword">return</span><span class="token punctuation">;</span>                <span class="token function">Each</span><span class="token punctuation">(</span>                    <span class="token function">$_Atom</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Selector_Group<span class="token punctuation">[</span>Level<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    arguments<span class="token punctuation">.</span>callee                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> Select_Result<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">Event_Bind</span><span class="token punctuation">(</span>_Element<span class="token punctuation">,</span> _Type<span class="token punctuation">,</span> _CallBack<span class="token punctuation">,</span> _unBind<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _CB_ <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>Event<span class="token punctuation">)</span> <span class="token punctuation">{</span>            EO <span class="token operator">=</span> self<span class="token punctuation">.</span>event <span class="token operator">||</span> Event<span class="token punctuation">;</span>            EO<span class="token punctuation">.</span>target <span class="token operator">=</span> EO<span class="token punctuation">.</span>srcElement <span class="token operator">||</span> EO<span class="token punctuation">.</span>target<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> _CallBack<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>_Element<span class="token punctuation">,</span> EO<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>EO<span class="token punctuation">.</span>returnValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    EO<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                    EO<span class="token punctuation">.</span>cancelBubble <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                    EO<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    EO<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>_Element<span class="token punctuation">.</span>attachEvent<span class="token punctuation">)</span>            _Element<span class="token punctuation">[</span> <span class="token punctuation">(</span>_unBind <span class="token operator">?</span> <span class="token string">'de'</span> <span class="token punctuation">:</span> <span class="token string">'at'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'tachEvent'</span><span class="token punctuation">]</span><span class="token punctuation">(</span>                <span class="token string">'on'</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>_Type <span class="token operator">==</span> <span class="token string">'input'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">'propertychange'</span> <span class="token punctuation">:</span> _Type<span class="token punctuation">)</span><span class="token punctuation">,</span>                _CB_            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            _Element<span class="token punctuation">[</span>                <span class="token punctuation">(</span>_unBind <span class="token operator">?</span> <span class="token string">'remove'</span> <span class="token punctuation">:</span> <span class="token string">'add'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'EventListener'</span>            <span class="token punctuation">]</span><span class="token punctuation">(</span>_Type<span class="token punctuation">,</span> _CB_<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// ----------- Powerful API (Public Method / Data) ----------- //</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>selector <span class="token operator">=</span> Selector<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token punctuation">(</span>Context <span class="token operator">||</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>DOM <span class="token operator">=</span> <span class="token function">Select</span><span class="token punctuation">(</span>Selector<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token keyword">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>Index<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">[</span>Index<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>each <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">Each</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>DOM<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>find <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>Selector<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span>  <span class="token keyword">new</span> <span class="token class-name">this<span class="token punctuation">.</span>constructor</span><span class="token punctuation">(</span>            <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>selector<span class="token punctuation">,</span> Selector<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>context        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>on <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">Event_Bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>off <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">Event_Bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> Event_Type<span class="token punctuation">,</span> CallBack<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// ----------- xDOM  Shortcut Function ----------- //</span><span class="token keyword">function</span> <span class="token function">xDOM</span><span class="token punctuation">(</span>CSS_Selector<span class="token punctuation">,</span> DOM_Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span>  <span class="token keyword">new</span> <span class="token class-name">DOMxx</span><span class="token punctuation">(</span>CSS_Selector<span class="token punctuation">,</span> DOM_Context<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>有木有一种步 <strong>Zepto.js</strong> 后尘的感觉……？</p><h2 id="【参考文献】"><a href="#【参考文献】" class="headerlink" title="【参考文献】"></a>【参考文献】</h2><ol><li><a href="http://www.cnblogs.com/newyorker/archive/2013/02/14/2891298.html" target="_blank" rel="noopener">http://www.cnblogs.com/newyorker/archive/2013/02/14/2891298.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> OOP </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【浏览器小工具】网页浮层广告/锁屏一键清除（完善重发）</title>
      <link href="/programming/web-float-ad-cleaner/"/>
      <url>/programming/web-float-ad-cleaner/</url>
      
        <content type="html"><![CDATA[<p>　　我之前写的【<a href="http://bbs.fyscu.com/forum.php?mod=viewthread&amp;tid=4929" target="_blank" rel="noopener">网页浮动广告一键清除工具</a>】虽然不断完善至 v0.3，但对各种实现方式的<strong>浮层广告</strong> 适配得不全面，自己在使用过程中发现有些网站的浮层广告依然无法彻底清除（<em>某个很亮堂的党报的官网</em> 新闻阅读页的右下角广告 竟然比某些盗版资源站的还顽固）……<br>　　进一步调试、分析后发现，这些“地痞无赖”的广告有个特点 —— 在和 <code>&lt;body /&gt;</code> 一样大的多个 <code>&lt;div /&gt;</code> 层层包裹下（有的多达 13 层），浮层广告用任意的 CSS 设为 <code>display: block</code> 的 HTML 标签包裹（如 <code>&lt;i /&gt;</code>），这个标签再用 <code>position: absolute</code> 定位。（此法也就是“IE 6 不支持 <code>position: fixed</code>”的兼容方法）<br>　　因为我和女友平时都经常使用它（我主要是大量地查技术资料、下经典电影，她主要是看娱乐八卦，反正都是广告满天飞的网站……）于是，继续更新之 ——</p><h2 id="最新稳定版-全部特性"><a href="#最新稳定版-全部特性" class="headerlink" title="最新稳定版 全部特性"></a>最新稳定版 全部特性</h2><ol><li>可清除 <strong>网页中任一位置的浮动广告</strong></li><li>可清除 <strong>遮蔽整个网页的登录框</strong></li><li>可清除 <strong>笼罩整个网页的透明弹窗广告超链接</strong></li><li>可清除 <strong>网页正文图片边缘的浮动广告</strong>（一般在第二次点击本工具时成功，但此时会误杀一些网页本身的功能浮层，可能会影响某些功能的使用，<strong>建议在纯阅读时二次点击本工具</strong>）</li></ol><h2 id="开发用源代码"><a href="#开发用源代码" class="headerlink" title="开发用源代码"></a>开发用源代码</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//    1Key Web Float Layer Cleaner   v0.5</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//                2014-10-10</span><span class="token comment" spellcheck="true">//</span><span class="token comment" spellcheck="true">//        (C)2014  test_32@fyscu.com</span><span class="token comment" spellcheck="true">//</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>WO<span class="token punctuation">,</span> DO<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">function</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>REO<span class="token punctuation">,</span> TagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span>  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span> REO<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>TagName<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">get_Style</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> _SN<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> _Style <span class="token operator">=</span> _TE<span class="token punctuation">.</span>currentStyle <span class="token operator">?</span>            _TE<span class="token punctuation">.</span>currentStyle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>_SN<span class="token punctuation">)</span> <span class="token punctuation">:</span>            DO<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>_SN<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> _Number <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>            <span class="token punctuation">(</span>_Style <span class="token operator">==</span> <span class="token string">'0px'</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> _Style        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span>  <span class="token function">isNaN</span><span class="token punctuation">(</span>_Number<span class="token punctuation">)</span> <span class="token operator">?</span> _Style <span class="token punctuation">:</span> _Number<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">CSS_Match</span><span class="token punctuation">(</span>EO<span class="token punctuation">,</span> RG<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> RG<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">get_Style</span><span class="token punctuation">(</span>EO<span class="token punctuation">,</span> RG<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> RG<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">ParentMatch</span><span class="token punctuation">(</span>EO<span class="token punctuation">,</span> Parent<span class="token punctuation">,</span> Level<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> Level<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>EO<span class="token punctuation">.</span>parentNode <span class="token operator">===</span> Parent<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>EO<span class="token punctuation">.</span>parentNode <span class="token operator">===</span> DO<span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">else</span>  EO <span class="token operator">=</span> EO<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">isFixedLayer</span><span class="token punctuation">(</span>_TE<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> inVisible <span class="token operator">=</span> <span class="token function">CSS_Match</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span><span class="token string">'display'</span><span class="token punctuation">,</span>     <span class="token string">'none'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token string">'visibility'</span><span class="token punctuation">,</span>  <span class="token string">'hidden'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">,</span>       <span class="token number">0</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> Fixed <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">!</span> inVisible<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">CSS_Match</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">,</span>  <span class="token string">'absolute'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token punctuation">[</span><span class="token string">'position'</span><span class="token punctuation">,</span>  <span class="token string">'fixed'</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>Fixed <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>            WO<span class="token punctuation">.</span>FLC <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token function">get_Style</span><span class="token punctuation">(</span>_TE<span class="token punctuation">,</span> <span class="token string">'z-index'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token function">ParentMatch</span><span class="token punctuation">(</span>                <span class="token comment" spellcheck="true">//  清除效果 基本只取决于“DOM 遍历深度”</span>                _TE<span class="token punctuation">,</span>  DO<span class="token punctuation">.</span>body<span class="token punctuation">,</span>  <span class="token punctuation">(</span>WO<span class="token punctuation">.</span>FLC <span class="token operator">?</span> <span class="token number">13</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">var</span> FL_Box <span class="token operator">=</span> <span class="token function">$_TN</span><span class="token punctuation">(</span> <span class="token function">$_TN</span><span class="token punctuation">(</span>DO<span class="token punctuation">,</span> <span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> iKey <span class="token operator">=</span> FL_Count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> _FL<span class="token punctuation">;</span> iKey <span class="token operator">&lt;</span> FL_Box<span class="token punctuation">.</span>length<span class="token punctuation">;</span> iKey<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        _FL <span class="token operator">=</span> FL_Box<span class="token punctuation">[</span>iKey<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">isFixedLayer</span><span class="token punctuation">(</span>_FL<span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>            _FL<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>_FL<span class="token punctuation">)</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_FL<span class="token punctuation">)</span><span class="token punctuation">;</span>            FL_Count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> self<span class="token punctuation">.</span>FLC<span class="token punctuation">)</span>  self<span class="token punctuation">.</span>FLC <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>        FL_Count<span class="token punctuation">,</span>  <span class="token string">' of the fucking Float ADs/Layers have been cleaned !~'</span><span class="token punctuation">,</span>        <span class="token string">'\n'</span><span class="token punctuation">,</span>  <span class="token string">'You can try Clicking my Button again to be cleaner.'</span><span class="token punctuation">,</span>        <span class="token string">'\n\n'</span><span class="token punctuation">,</span>  <span class="token string">'(C)2014   SCU FYclub-RDD'</span>    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="安装用代码"><a href="#安装用代码" class="headerlink" title="安装用代码"></a>安装用代码</h2><p>　　用 <strong>UglifyJS</strong>（<a href="http://www.css-js.cn/" target="_blank" rel="noopener">在线版</a>）生成，压缩率 高于 50% ——</p><pre class=" language-javascript"><code class="language-javascript">javascript<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>slice<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">d</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> d<span class="token operator">=</span>a<span class="token punctuation">.</span>currentStyle<span class="token operator">?</span>a<span class="token punctuation">.</span>currentStyle<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span>b<span class="token punctuation">.</span>defaultView<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token operator">=</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">"0px"</span><span class="token operator">==</span>d<span class="token operator">?</span><span class="token number">0</span><span class="token punctuation">:</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">?</span>d<span class="token punctuation">:</span>e<span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> c<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>c<span class="token operator">&lt;</span>b<span class="token punctuation">.</span>length<span class="token punctuation">;</span>c<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">d</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">==</span>b<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>d<span class="token operator">></span>e<span class="token punctuation">;</span>e<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>parentNode<span class="token operator">===</span>c<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>parentNode<span class="token operator">===</span>b<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>a<span class="token operator">=</span>a<span class="token punctuation">.</span>parentNode<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">g</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">var</span> g<span class="token operator">=</span><span class="token function">e</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"display"</span><span class="token punctuation">,</span><span class="token string">"none"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"visibility"</span><span class="token punctuation">,</span><span class="token string">"hidden"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"width"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token operator">!</span>g<span class="token operator">&amp;&amp;</span><span class="token function">e</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token string">"absolute"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"position"</span><span class="token punctuation">,</span><span class="token string">"fixed"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> h<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>FLC<span class="token operator">?</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">d</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span><span class="token string">"z-index"</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">100</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token function">f</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>b<span class="token punctuation">.</span>body<span class="token punctuation">,</span>a<span class="token punctuation">.</span>FLC<span class="token operator">?</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token keyword">var</span> j<span class="token punctuation">,</span>i<span class="token punctuation">,</span>h<span class="token operator">=</span><span class="token function">c</span><span class="token punctuation">(</span><span class="token function">c</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span>FL_Count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>h<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>j<span class="token operator">=</span>h<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">g</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>FL_Count<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>self<span class="token punctuation">.</span>FLC<span class="token operator">||</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>FLC<span class="token operator">=</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">[</span>FL_Count<span class="token punctuation">,</span><span class="token string">" of the fucking Float ADs/Layers have been cleaned !~"</span><span class="token punctuation">,</span><span class="token string">"\n"</span><span class="token punctuation">,</span><span class="token string">"You can try Clicking my Button again to be cleaner."</span><span class="token punctuation">,</span><span class="token string">"\n\n"</span><span class="token punctuation">,</span><span class="token string">"(C)2014   SCU FYclub-RDD"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>self<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> browser </tag>
            
            <tag> bookmark </tag>
            
            <tag> toolkit </tag>
            
            <tag> advertisement </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【奇技淫巧】jQuery 的选择器上下文</title>
      <link href="/programming/jquery-selector-context/"/>
      <url>/programming/jquery-selector-context/</url>
      
        <content type="html"><![CDATA[<p>用过 <strong>jQuery</strong> 的都知道 —— jQuery() 很强大，啥都能往里塞！</p><ol><li>塞 <strong>HTML 代码</strong> —— 创建 HTML 元素</li><li>塞 <strong>CSS 选择符</strong> —— 检索 HTML 元素</li><li>塞 <strong>XPath 表达式</strong> —— 检索 XML 元素</li><li>塞 <strong>DOM 对象</strong> —— 包装 HTML 元素，使用 jQuery 的强大 API（对象方法）</li><li>塞 <strong>JS 函数</strong> —— 相当于当在 DOM Ready 之后执行主业务逻辑代码</li></ol><p>但还有些细节需要注意，比如 <strong>jQuery 选择器的上下文</strong>问题。</p><hr><p>jQuery 老手想必都知道，<strong>jQuery() 的第二个参数</strong>可以设置 选择器执行筛选的上下文，也就是<strong>指定元素搜索只能在哪个（些）元素的子元素树形结构范围内</strong>。比如 ——</p><ol><li><code>$(&#39;script&#39;, document.body)</code> 相当于 <code>$(&#39;body&#39;).find(&#39;script&#39;)</code></li><li><code>$(&#39;table&#39;,document.getElementsByTagName(&#39;iframe&#39;)[0])</code> 相当于 <code>$(&#39;iframe&#39;).eq(0).contents().find(&#39;table&#39;)</code></li></ol><p>改变了 jQuery 选择器的上下文之后，这个 jQuery 对象接下来的操作都以这个上下文为参考系，非常方便~</p><p>但这里有个例外 —— <strong>若一个 jQuery 对象由 DOM 对象包装而来，那它的上下文会被强制指向 DOM 元素本身，jQuery() 的第二个参数不能改变上下文……</strong></p><p>大家可以用以下代码验证 ——</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  显示的 jQuery 对象的 context 属性指向 document</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> document<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//  显示的 jQuery 对象的 context 属性指向 document.body</span></code></pre><p>这有何影响？一个典型的实例就是 —— <strong>HTML 子框架页（比如 <code>&lt;iframe /&gt;</code>）直接使用父框架加载的 jQuery 及其插件</strong>。</p><hr><p>因为不同框架页和其父页面一样，都是一个完整的网页，所以它们的 CSS、JS 之间默认是相互独立的（除了 BOM、DOM 树之间有相互引用）。程序猿一般都分别加载它们所引用的脚本，无论它们是否有相同的脚本。虽然浏览器都有缓存，不会重复从服务器下载相同的文件，但对本机性能而言，重复加载还是有影响。</p><p>对 CSS 而言，它的属性最终要应用到具体的 DOM 元素上，不会单独占用内存，重复加载对本机无负面影响；但若<strong>重复加载 JS，同样的对象（各种 JS 库所创建的自身实例）会在每个父/子页面的 Window 对象下创建，造成了内存的浪费</strong>……</p><p>综上，因为 <strong>JS 等动态语言的赋值 默认是“引用”（传指针/地址）而非复制</strong>，我们就可以借助框架之间的 BOM、DOM 之间的引用，使父页面加载的 JS 库工作在不同的子页面中。例如 ——</p><pre class=" language-javascript"><code class="language-javascript">self<span class="token punctuation">.</span>jQuery <span class="token operator">=</span> parent<span class="token punctuation">.</span>jQuery<span class="token punctuation">;</span></code></pre><hr><p>当我们使用类似 <code>$(self.document).find(&#39;selector&#39;).doSomething()</code> 的代码时，程序运行正常，所以大家自然会想用更简洁的写法 <code>$(&#39;selector&#39;).doSomething()</code>，但它不会在子页面里查找任何 DOM 元素，只会返回父页面的执行结果…… 因为<strong>父页面的 jQuery 上下文默认是父页面中的 document 对象</strong>~</p><p>所以，我们必须<strong>在子页面对父页面的 jQuery 做一层封装</strong> ——</p><pre class=" language-javascript"><code class="language-javascript">self<span class="token punctuation">.</span>$ <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span>  self<span class="token punctuation">.</span><span class="token function">jQuery</span><span class="token punctuation">(</span>        arguments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> self<span class="token punctuation">.</span>document    <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><hr><p>但其实这样的封装有时无法改变 jQuery 对象 API 的上下文，比如在一个 <code>&lt;iframe /&gt;</code> 中 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;span class="Float_Button">&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>你会发现，新建的元素被追加到了父页面的最后……</p><p>不怕，解决方法也得益于 <strong>jQuery 对象 API（公用方法）的优越性 —— CSS 选择符、DOM 对象、jQuery 对象 都能往里塞</strong>，我们用自己封装的 jQuery 来强制指定目的地的上下文 ——</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;span class="Float_Button">&lt;/span>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><hr><p>【参考文档】<a href="http://ucren.com/blog/archives/137/comment-page-1" target="_blank" rel="noopener">http://ucren.com/blog/archives/137/comment-page-1</a></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
